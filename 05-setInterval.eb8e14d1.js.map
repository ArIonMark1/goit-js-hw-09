{"mappings":"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","sources":["node_modules/@swc/helpers/lib/_assert_this_initialized.js","node_modules/@swc/helpers/lib/_super_prop_base.js","node_modules/@swc/helpers/lib/_get_prototype_of.js","node_modules/@swc/helpers/lib/_set_prototype_of.js","node_modules/@swc/helpers/lib/_define_property.js","node_modules/@swc/helpers/lib/_array_with_holes.js","node_modules/@swc/helpers/lib/_iterable_to_array.js","node_modules/@swc/helpers/lib/_non_iterable_rest.js","node_modules/@swc/helpers/lib/_unsupported_iterable_to_array.js","node_modules/@swc/helpers/lib/_array_like_to_array.js","node_modules/@swc/helpers/lib/_array_without_holes.js","node_modules/@swc/helpers/lib/_non_iterable_spread.js","node_modules/@swc/helpers/lib/_type_of.js","node_modules/@swc/helpers/lib/_is_native_reflect_construct.js","node_modules/@swc/helpers/lib/_possible_constructor_return.js","node_modules/@swc/helpers/lib/_class_call_check.js","node_modules/@swc/helpers/lib/_create_class.js","node_modules/@swc/helpers/lib/_get.js","node_modules/@swc/helpers/lib/_inherits.js","node_modules/@swc/helpers/lib/_object_spread.js","node_modules/@swc/helpers/lib/_sliced_to_array.js","node_modules/@swc/helpers/lib/_to_consumable_array.js","node_modules/@swc/helpers/lib/_create_super.js","node_modules/bootstrap.native/node_modules/@thednp/shorty/dist/shorty.mjs","node_modules/bootstrap.native/node_modules/@thednp/event-listener/dist/event-listener.mjs","node_modules/bootstrap.native/src/strings/fadeClass.ts","node_modules/bootstrap.native/src/strings/showClass.ts","node_modules/bootstrap.native/src/strings/dataBsDismiss.ts","node_modules/bootstrap.native/src/strings/alertString.ts","node_modules/bootstrap.native/src/strings/alertComponent.ts","node_modules/bootstrap.native/src/components/base-component.ts","node_modules/bootstrap.native/src/components/alert.ts","node_modules/bootstrap.native/src/strings/activeClass.ts","node_modules/bootstrap.native/src/strings/dataBsToggle.ts","node_modules/bootstrap.native/src/strings/buttonComponent.ts","node_modules/bootstrap.native/src/components/button.ts","node_modules/bootstrap.native/src/strings/buttonString.ts","node_modules/bootstrap.native/src/strings/dataBsTarget.ts","node_modules/bootstrap.native/src/strings/carouselString.ts","node_modules/bootstrap.native/src/strings/carouselComponent.ts","node_modules/bootstrap.native/src/strings/dataBsParent.ts","node_modules/bootstrap.native/src/util/getTargetElement.ts","node_modules/bootstrap.native/src/strings/dataBsContainer.ts","node_modules/bootstrap.native/src/components/carousel.ts","node_modules/bootstrap.native/src/strings/collapsingClass.ts","node_modules/bootstrap.native/src/strings/collapseString.ts","node_modules/bootstrap.native/src/strings/collapseComponent.ts","node_modules/bootstrap.native/src/components/collapse.ts","node_modules/bootstrap.native/src/strings/dropdownClasses.ts","node_modules/bootstrap.native/src/strings/dropdownComponent.ts","node_modules/bootstrap.native/src/strings/dropdownMenuClass.ts","node_modules/bootstrap.native/src/util/isEmptyAnchor.ts","node_modules/bootstrap.native/src/components/dropdown.ts","node_modules/bootstrap.native/src/strings/modalString.ts","node_modules/bootstrap.native/src/strings/modalComponent.ts","node_modules/bootstrap.native/src/strings/offcanvasComponent.ts","node_modules/bootstrap.native/src/strings/stickyTopClass.ts","node_modules/bootstrap.native/src/strings/positionStickyClass.ts","node_modules/bootstrap.native/src/util/scrollbar.ts","node_modules/bootstrap.native/src/strings/fixedTopClass.ts","node_modules/bootstrap.native/src/strings/fixedBottomClass.ts","node_modules/bootstrap.native/src/strings/offcanvasString.ts","node_modules/bootstrap.native/src/util/popupContainer.ts","node_modules/bootstrap.native/src/util/backdrop.ts","node_modules/bootstrap.native/src/util/isVisible.ts","node_modules/bootstrap.native/src/components/modal.ts","node_modules/bootstrap.native/src/components/offcanvas.ts","node_modules/bootstrap.native/src/strings/popoverString.ts","node_modules/bootstrap.native/src/strings/popoverComponent.ts","node_modules/bootstrap.native/src/strings/tooltipString.ts","node_modules/bootstrap.native/src/util/getTipTemplate.ts","node_modules/bootstrap.native/src/util/tipClassPositions.ts","node_modules/bootstrap.native/src/util/styleTip.ts","node_modules/bootstrap.native/src/util/tooltipDefaults.ts","node_modules/bootstrap.native/src/strings/dataOriginalTitle.ts","node_modules/bootstrap.native/src/strings/tooltipComponent.ts","node_modules/bootstrap.native/src/util/setHtml.ts","node_modules/bootstrap.native/src/components/tooltip.ts","node_modules/bootstrap.native/src/util/getElementContainer.ts","node_modules/bootstrap.native/src/util/createTip.ts","node_modules/bootstrap.native/src/components/popover.ts","node_modules/bootstrap.native/src/strings/scrollspyString.ts","node_modules/bootstrap.native/src/strings/scrollspyComponent.ts","node_modules/bootstrap.native/src/components/scrollspy.ts","node_modules/bootstrap.native/src/strings/tabString.ts","node_modules/bootstrap.native/src/components/tab.ts","node_modules/bootstrap.native/src/strings/tabComponent.ts","node_modules/bootstrap.native/src/strings/toastString.ts","node_modules/bootstrap.native/src/strings/toastComponent.ts","node_modules/bootstrap.native/src/components/toast.ts","node_modules/bootstrap.native/src/util/init.ts","src/js/05-setInterval.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _assertThisInitialized;\nfunction _assertThisInitialized(self) {\n    if (self === void 0) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n    return self;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _superPropBase;\nvar _getPrototypeOf = _interopRequireDefault(require(\"./_get_prototype_of\"));\nfunction _superPropBase(object, property) {\n    while(!Object.prototype.hasOwnProperty.call(object, property)){\n        object = (0, _getPrototypeOf).default(object);\n        if (object === null) break;\n    }\n    return object;\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _getPrototypeOf;\nfunction _getPrototypeOf(o) {\n    return getPrototypeOf(o);\n}\nfunction getPrototypeOf(o1) {\n    getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o) {\n        return o.__proto__ || Object.getPrototypeOf(o);\n    };\n    return getPrototypeOf(o1);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _setPrototypeOf;\nfunction _setPrototypeOf(o, p) {\n    return setPrototypeOf(o, p);\n}\nfunction setPrototypeOf(o1, p1) {\n    setPrototypeOf = Object.setPrototypeOf || function setPrototypeOf(o, p) {\n        o.__proto__ = p;\n        return o;\n    };\n    return setPrototypeOf(o1, p1);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _defineProperty;\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _arrayWithHoles;\nfunction _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _iterableToArray;\nfunction _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _nonIterableRest;\nfunction _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _unsupportedIterableToArray;\nvar _arrayLikeToArray = _interopRequireDefault(require(\"./_array_like_to_array\"));\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, _arrayLikeToArray).default(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, _arrayLikeToArray).default(o, minLen);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _arrayLikeToArray;\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _arrayWithoutHoles;\nvar _arrayLikeToArray = _interopRequireDefault(require(\"./_array_like_to_array\"));\nfunction _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return (0, _arrayLikeToArray).default(arr);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _nonIterableSpread;\nfunction _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _typeof;\nfunction _typeof(obj) {\n    \"@swc/helpers - typeof\";\n    return obj && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n}\n;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _isNativeReflectConstruct;\nfunction _isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n    try {\n        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));\n        return true;\n    } catch (e) {\n        return false;\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _possibleConstructorReturn;\nvar _assertThisInitialized = _interopRequireDefault(require(\"./_assert_this_initialized\"));\nvar _typeOf = _interopRequireDefault(require(\"./_type_of\"));\nfunction _possibleConstructorReturn(self, call) {\n    if (call && ((0, _typeOf).default(call) === \"object\" || typeof call === \"function\")) {\n        return call;\n    }\n    return (0, _assertThisInitialized).default(self);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classCallCheck;\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _createClass;\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _get;\nvar _superPropBase = _interopRequireDefault(require(\"./_super_prop_base\"));\nfunction _get(target, property, receiver) {\n    return get(target, property, receiver);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction get(target1, property1, receiver1) {\n    if (typeof Reflect !== \"undefined\" && Reflect.get) {\n        get = Reflect.get;\n    } else {\n        get = function get(target, property, receiver) {\n            var base = (0, _superPropBase).default(target, property);\n            if (!base) return;\n            var desc = Object.getOwnPropertyDescriptor(base, property);\n            if (desc.get) {\n                return desc.get.call(receiver || target);\n            }\n            return desc.value;\n        };\n    }\n    return get(target1, property1, receiver1);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _inherits;\nvar _setPrototypeOf = _interopRequireDefault(require(\"./_set_prototype_of\"));\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            writable: true,\n            configurable: true\n        }\n    });\n    if (superClass) (0, _setPrototypeOf).default(subClass, superClass);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _objectSpread;\nvar _defineProperty = _interopRequireDefault(require(\"./_define_property\"));\nfunction _objectSpread(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = arguments[i] != null ? arguments[i] : {};\n        var ownKeys = Object.keys(source);\n        if (typeof Object.getOwnPropertySymbols === 'function') {\n            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {\n                return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n            }));\n        }\n        ownKeys.forEach(function(key) {\n            (0, _defineProperty).default(target, key, source[key]);\n        });\n    }\n    return target;\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _slicedToArray;\nvar _arrayWithHoles = _interopRequireDefault(require(\"./_array_with_holes\"));\nvar _iterableToArray = _interopRequireDefault(require(\"./_iterable_to_array\"));\nvar _nonIterableRest = _interopRequireDefault(require(\"./_non_iterable_rest\"));\nvar _unsupportedIterableToArray = _interopRequireDefault(require(\"./_unsupported_iterable_to_array\"));\nfunction _slicedToArray(arr, i) {\n    return (0, _arrayWithHoles).default(arr) || (0, _iterableToArray).default(arr, i) || (0, _unsupportedIterableToArray).default(arr, i) || (0, _nonIterableRest).default();\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _toConsumableArray;\nvar _arrayWithoutHoles = _interopRequireDefault(require(\"./_array_without_holes\"));\nvar _iterableToArray = _interopRequireDefault(require(\"./_iterable_to_array\"));\nvar _nonIterableSpread = _interopRequireDefault(require(\"./_non_iterable_spread\"));\nvar _unsupportedIterableToArray = _interopRequireDefault(require(\"./_unsupported_iterable_to_array\"));\nfunction _toConsumableArray(arr) {\n    return (0, _arrayWithoutHoles).default(arr) || (0, _iterableToArray).default(arr) || (0, _unsupportedIterableToArray).default(arr) || (0, _nonIterableSpread).default();\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _createSuper;\nvar _isNativeReflectConstruct = _interopRequireDefault(require(\"./_is_native_reflect_construct\"));\nvar _getPrototypeOf = _interopRequireDefault(require(\"./_get_prototype_of\"));\nvar _possibleConstructorReturn = _interopRequireDefault(require(\"./_possible_constructor_return\"));\nfunction _createSuper(Derived) {\n    var hasNativeReflectConstruct = (0, _isNativeReflectConstruct).default();\n    return function _createSuperInternal() {\n        var Super = (0, _getPrototypeOf).default(Derived), result;\n        if (hasNativeReflectConstruct) {\n            var NewTarget = (0, _getPrototypeOf).default(this).constructor;\n            result = Reflect.construct(Super, arguments, NewTarget);\n        } else {\n            result = Super.apply(this, arguments);\n        }\n        return (0, _possibleConstructorReturn).default(this, result);\n    };\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","const pe = \"aria-checked\", fe = \"aria-description\", me = \"aria-describedby\", ge = \"aria-expanded\", ve = \"aria-haspopup\", Ee = \"aria-hidden\", be = \"aria-label\", he = \"aria-labelledby\", ye = \"aria-modal\", we = \"aria-pressed\", Ae = \"aria-selected\", Se = \"aria-valuemin\", Me = \"aria-valuemax\", Ne = \"aria-valuenow\", ke = \"aria-valuetext\", G = \"abort\", j = \"beforeunload\", J = \"blur\", K = \"change\", X = \"contextmenu\", P = \"DOMContentLoaded\", Y = \"DOMMouseScroll\", Z = \"error\", $ = \"focus\", _ = \"focusin\", tt = \"focusout\", et = \"gesturechange\", nt = \"gestureend\", ot = \"gesturestart\", st = \"keydown\", ct = \"keypress\", rt = \"keyup\", at = \"load\", it = \"click\", ut = \"dblclick\", lt = \"mousedown\", dt = \"mouseup\", pt = \"hover\", ft = \"mouseenter\", mt = \"mouseleave\", gt = \"mousein\", vt = \"mouseout\", Et = \"mouseover\", bt = \"mousemove\", ht = \"mousewheel\", yt = \"move\", wt = \"orientationchange\", At = \"pointercancel\", St = \"pointerdown\", Mt = \"pointerleave\", Nt = \"pointermove\", kt = \"pointerup\", Tt = \"readystatechange\", Dt = \"reset\", Ct = \"resize\", Lt = \"select\", Ot = \"selectend\", It = \"selectstart\", zt = \"scroll\", xt = \"submit\", Vt = \"touchstart\", Bt = \"touchmove\", Ht = \"touchcancel\", Pt = \"touchend\", Ut = \"unload\", Te = {\n  DOMContentLoaded: P,\n  DOMMouseScroll: Y,\n  abort: G,\n  beforeunload: j,\n  blur: J,\n  change: K,\n  click: it,\n  contextmenu: X,\n  dblclick: ut,\n  error: Z,\n  focus: $,\n  focusin: _,\n  focusout: tt,\n  gesturechange: et,\n  gestureend: nt,\n  gesturestart: ot,\n  hover: pt,\n  keydown: st,\n  keypress: ct,\n  keyup: rt,\n  load: at,\n  mousedown: lt,\n  mousemove: bt,\n  mousein: gt,\n  mouseout: vt,\n  mouseenter: ft,\n  mouseleave: mt,\n  mouseover: Et,\n  mouseup: dt,\n  mousewheel: ht,\n  move: yt,\n  orientationchange: wt,\n  pointercancel: At,\n  pointerdown: St,\n  pointerleave: Mt,\n  pointermove: Nt,\n  pointerup: kt,\n  readystatechange: Tt,\n  reset: Dt,\n  resize: Ct,\n  scroll: zt,\n  select: Lt,\n  selectend: Ot,\n  selectstart: It,\n  submit: xt,\n  touchcancel: Ht,\n  touchend: Pt,\n  touchmove: Bt,\n  touchstart: Vt,\n  unload: Ut\n}, De = \"drag\", Ce = \"dragstart\", Le = \"dragenter\", Oe = \"dragleave\", Ie = \"dragover\", ze = \"dragend\", xe = \"loadstart\", Ve = {\n  start: \"mousedown\",\n  end: \"mouseup\",\n  move: \"mousemove\",\n  cancel: \"mouseleave\"\n}, Be = { down: \"mousedown\", up: \"mouseup\" }, He = \"onmouseleave\" in document ? [\"mouseenter\", \"mouseleave\"] : (\n  /* istanbul ignore next */\n  [\"mouseover\", \"mouseout\"]\n), Pe = {\n  start: \"touchstart\",\n  end: \"touchend\",\n  move: \"touchmove\",\n  cancel: \"touchcancel\"\n}, Ue = { in: \"focusin\", out: \"focusout\" }, Fe = {\n  Backspace: \"Backspace\",\n  //  8\n  Tab: \"Tab\",\n  //  9\n  Enter: \"Enter\",\n  // 13\n  Shift: \"Shift\",\n  // 16\n  Control: \"Control\",\n  // 17\n  Alt: \"Alt\",\n  // 18\n  Pause: \"Pause\",\n  // 19\n  CapsLock: \"CapsLock\",\n  // 20\n  Escape: \"Escape\",\n  // 27\n  Scape: \"Space\",\n  // 32\n  ArrowLeft: \"ArrowLeft\",\n  // 37\n  ArrowUp: \"ArrowUp\",\n  // 38\n  ArrowRight: \"ArrowRight\",\n  // 39\n  ArrowDown: \"ArrowDown\",\n  // 40\n  Insert: \"Insert\",\n  // 45\n  Delete: \"Delete\",\n  // 46\n  Meta: \"Meta\",\n  // 91 windows key\n  ContextMenu: \"ContextMenu\",\n  // 93\n  ScrollLock: \"ScrollLock\"\n  // 145\n}, We = \"Alt\", Re = \"ArrowDown\", Qe = \"ArrowUp\", qe = \"ArrowLeft\", Ge = \"ArrowRight\", je = \"Backspace\", Je = \"CapsLock\", Ke = \"Control\", Xe = \"Delete\", Ye = \"Enter\", Ze = \"Escape\", $e = \"Insert\", _e = \"Meta\", tn = \"Pause\", en = \"ScrollLock\", nn = \"Shift\", on = \"Space\", sn = \"Tab\", Ft = \"animationDuration\", Wt = \"animationDelay\", U = \"animationName\", D = \"animationend\", Rt = \"transitionDuration\", Qt = \"transitionDelay\", C = \"transitionend\", F = \"transitionProperty\", cn = \"addEventListener\", rn = \"removeEventListener\", an = {\n  linear: \"linear\",\n  easingSinusoidalIn: \"cubic-bezier(0.47,0,0.745,0.715)\",\n  easingSinusoidalOut: \"cubic-bezier(0.39,0.575,0.565,1)\",\n  easingSinusoidalInOut: \"cubic-bezier(0.445,0.05,0.55,0.95)\",\n  easingQuadraticIn: \"cubic-bezier(0.550,0.085,0.680,0.530)\",\n  easingQuadraticOut: \"cubic-bezier(0.250,0.460,0.450,0.940)\",\n  easingQuadraticInOut: \"cubic-bezier(0.455,0.030,0.515,0.955)\",\n  easingCubicIn: \"cubic-bezier(0.55,0.055,0.675,0.19)\",\n  easingCubicOut: \"cubic-bezier(0.215,0.61,0.355,1)\",\n  easingCubicInOut: \"cubic-bezier(0.645,0.045,0.355,1)\",\n  easingQuarticIn: \"cubic-bezier(0.895,0.03,0.685,0.22)\",\n  easingQuarticOut: \"cubic-bezier(0.165,0.84,0.44,1)\",\n  easingQuarticInOut: \"cubic-bezier(0.77,0,0.175,1)\",\n  easingQuinticIn: \"cubic-bezier(0.755,0.05,0.855,0.06)\",\n  easingQuinticOut: \"cubic-bezier(0.23,1,0.32,1)\",\n  easingQuinticInOut: \"cubic-bezier(0.86,0,0.07,1)\",\n  easingExponentialIn: \"cubic-bezier(0.95,0.05,0.795,0.035)\",\n  easingExponentialOut: \"cubic-bezier(0.19,1,0.22,1)\",\n  easingExponentialInOut: \"cubic-bezier(1,0,0,1)\",\n  easingCircularIn: \"cubic-bezier(0.6,0.04,0.98,0.335)\",\n  easingCircularOut: \"cubic-bezier(0.075,0.82,0.165,1)\",\n  easingCircularInOut: \"cubic-bezier(0.785,0.135,0.15,0.86)\",\n  easingBackIn: \"cubic-bezier(0.6,-0.28,0.735,0.045)\",\n  easingBackOut: \"cubic-bezier(0.175,0.885,0.32,1.275)\",\n  easingBackInOut: \"cubic-bezier(0.68,-0.55,0.265,1.55)\"\n}, un = \"offsetHeight\", ln = \"offsetWidth\", dn = \"scrollHeight\", pn = \"scrollWidth\", fn = \"tabindex\", qt = navigator.userAgentData, A = qt, { userAgent: Gt } = navigator, S = Gt, z = /iPhone|iPad|iPod|Android/i;\nlet L = !1;\nA ? L = A.brands.some((t) => z.test(t.brand)) : L = z.test(S);\nconst mn = L, x = /(iPhone|iPod|iPad)/, gn = A ? A.brands.some((t) => x.test(t.brand)) : (\n  /* istanbul ignore next */\n  x.test(S)\n), vn = S ? S.includes(\"Firefox\") : (\n  /* istanbul ignore next */\n  !1\n), { head: M } = document, En = [\"webkitPerspective\", \"perspective\"].some((t) => t in M.style), jt = (t, e, n, o) => {\n  const s = o || !1;\n  t.addEventListener(e, n, s);\n}, Jt = (t, e, n, o) => {\n  const s = o || !1;\n  t.removeEventListener(e, n, s);\n}, Kt = (t, e, n, o) => {\n  const s = (r) => {\n    (r.target === t || r.currentTarget === t) && (n.apply(t, [r]), Jt(t, e, s, o));\n  };\n  jt(t, e, s, o);\n}, Xt = () => {\n}, bn = (() => {\n  let t = !1;\n  try {\n    const e = Object.defineProperty({}, \"passive\", {\n      get: () => (t = !0, t)\n    });\n    Kt(document, P, Xt, e);\n  } catch {\n  }\n  return t;\n})(), hn = [\"webkitTransform\", \"transform\"].some((t) => t in M.style), yn = \"ontouchstart\" in window || /* istanbul ignore next */\n\"msMaxTouchPoints\" in navigator, wn = [\"webkitAnimation\", \"animation\"].some((t) => t in M.style), An = [\"webkitTransition\", \"transition\"].some((t) => t in M.style), Yt = (t, e) => t.getAttribute(e), Sn = (t, e, n) => e.getAttributeNS(t, n), Mn = (t, e) => t.hasAttribute(e), Nn = (t, e, n) => e.hasAttributeNS(t, n), kn = (t, e, n) => t.setAttribute(e, n), Tn = (t, e, n, o) => e.setAttributeNS(t, n, o), Dn = (t, e) => t.removeAttribute(e), Cn = (t, e, n) => e.removeAttributeNS(t, n), Ln = (t, ...e) => {\n  t.classList.add(...e);\n}, On = (t, ...e) => {\n  t.classList.remove(...e);\n}, In = (t, e) => t.classList.contains(e), { body: zn } = document, { documentElement: xn } = document, Vn = (t) => Array.from(t), v = (t) => t != null && typeof t == \"object\" || !1, i = (t) => v(t) && typeof t.nodeType == \"number\" && [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11].some((e) => t.nodeType === e) || !1, u = (t) => i(t) && t.nodeType === 1 || !1, E = /* @__PURE__ */ new Map(), O = {\n  data: E,\n  /**\n   * Sets web components data.\n   *\n   * @param element target element\n   * @param component the component's name or a unique key\n   * @param instance the component instance\n   */\n  set: (t, e, n) => {\n    if (!u(t))\n      return;\n    E.has(e) || E.set(e, /* @__PURE__ */ new Map()), E.get(e).set(t, n);\n  },\n  /**\n   * Returns all instances for specified component.\n   *\n   * @param component the component's name or a unique key\n   * @returns all the component instances\n   */\n  getAllFor: (t) => E.get(t) || null,\n  /**\n   * Returns the instance associated with the target.\n   *\n   * @param element target element\n   * @param component the component's name or a unique key\n   * @returns the instance\n   */\n  get: (t, e) => {\n    if (!u(t) || !e)\n      return null;\n    const n = O.getAllFor(e);\n    return t && n && n.get(t) || null;\n  },\n  /**\n   * Removes web components data.\n   *\n   * @param element target element\n   * @param component the component's name or a unique key\n   */\n  remove: (t, e) => {\n    const n = O.getAllFor(e);\n    !n || !u(t) || (n.delete(t), n.size === 0 && E.delete(e));\n  }\n}, Bn = (t, e) => O.get(t, e), N = (t) => typeof t == \"string\" || !1, W = (t) => v(t) && t.constructor.name === \"Window\" || !1, R = (t) => i(t) && t.nodeType === 9 || !1, d = (t) => W(t) ? t.document : R(t) ? t : i(t) ? t.ownerDocument : window.document, k = (t, ...e) => Object.assign(t, ...e), Zt = (t) => {\n  if (!t)\n    return;\n  if (N(t))\n    return d().createElement(t);\n  const { tagName: e } = t, n = Zt(e);\n  if (!n)\n    return;\n  const o = { ...t };\n  return delete o.tagName, k(n, o);\n}, $t = (t, e) => {\n  if (!t || !e)\n    return;\n  if (N(e))\n    return d().createElementNS(t, e);\n  const { tagName: n } = e, o = $t(t, n);\n  if (!o)\n    return;\n  const s = { ...e };\n  return delete s.tagName, k(o, s);\n}, Q = (t, e) => t.dispatchEvent(e), Hn = (t, e, n) => n.indexOf(t) === e, g = (t, e) => {\n  const n = getComputedStyle(t), o = e.replace(\"webkit\", \"Webkit\").replace(/([A-Z])/g, \"-$1\").toLowerCase();\n  return n.getPropertyValue(o);\n}, _t = (t) => {\n  const e = g(t, U), n = g(t, Wt), o = n.includes(\"ms\") ? (\n    /* istanbul ignore next */\n    1\n  ) : 1e3, s = e && e !== \"none\" ? parseFloat(n) * o : 0;\n  return Number.isNaN(s) ? (\n    /* istanbul ignore next */\n    0\n  ) : s;\n}, te = (t) => {\n  const e = g(t, U), n = g(t, Ft), o = n.includes(\"ms\") ? (\n    /* istanbul ignore next */\n    1\n  ) : 1e3, s = e && e !== \"none\" ? parseFloat(n) * o : 0;\n  return Number.isNaN(s) ? (\n    /* istanbul ignore next */\n    0\n  ) : s;\n}, Pn = (t, e) => {\n  let n = 0;\n  const o = new Event(D), s = te(t), r = _t(t);\n  if (s) {\n    const a = (l) => {\n      l.target === t && (e.apply(t, [l]), t.removeEventListener(D, a), n = 1);\n    };\n    t.addEventListener(D, a), setTimeout(() => {\n      n || Q(t, o);\n    }, s + r + 17);\n  } else\n    e.apply(t, [o]);\n}, ee = (t) => {\n  const e = g(t, F), n = g(t, Qt), o = n.includes(\"ms\") ? (\n    /* istanbul ignore next */\n    1\n  ) : 1e3, s = e && e !== \"none\" ? parseFloat(n) * o : (\n    /* istanbul ignore next */\n    0\n  );\n  return Number.isNaN(s) ? (\n    /* istanbul ignore next */\n    0\n  ) : s;\n}, ne = (t) => {\n  const e = g(t, F), n = g(t, Rt), o = n.includes(\"ms\") ? (\n    /* istanbul ignore next */\n    1\n  ) : 1e3, s = e && e !== \"none\" ? parseFloat(n) * o : (\n    /* istanbul ignore next */\n    0\n  );\n  return Number.isNaN(s) ? (\n    /* istanbul ignore next */\n    0\n  ) : s;\n}, Un = (t, e) => {\n  let n = 0;\n  const o = new Event(C), s = ne(t), r = ee(t);\n  if (s) {\n    const a = (l) => {\n      l.target === t && (e.apply(t, [l]), t.removeEventListener(C, a), n = 1);\n    };\n    t.addEventListener(C, a), setTimeout(() => {\n      n || Q(t, o);\n    }, s + r + 17);\n  } else\n    e.apply(t, [o]);\n}, Fn = (t) => Float32Array.from(Array.from(t)), Wn = (t) => Float64Array.from(Array.from(t)), Rn = (t, e) => t.focus(e), V = (t) => [\"true\", !0].includes(t) ? !0 : [\"false\", !1].includes(t) ? !1 : [\"null\", \"\", null, void 0].includes(t) ? null : t !== \"\" && !Number.isNaN(+t) ? +t : t, w = (t) => Object.entries(t), oe = (t) => t.toLowerCase(), Qn = (t, e, n, o) => {\n  const s = { ...n }, r = { ...t.dataset }, a = { ...e }, l = {}, p = \"title\";\n  return w(r).forEach(([c, f]) => {\n    const y = o && typeof c == \"string\" && c.includes(o) ? c.replace(o, \"\").replace(/[A-Z]/g, (q) => oe(q)) : c;\n    l[y] = V(f);\n  }), w(s).forEach(([c, f]) => {\n    s[c] = V(f);\n  }), w(e).forEach(([c, f]) => {\n    c in s ? a[c] = s[c] : c in l ? a[c] = l[c] : a[c] = c === p ? Yt(t, p) : f;\n  }), a;\n}, qn = (t, e) => v(t) && (Object.hasOwn(t, e) || e in t), Gn = (t) => Object.keys(t), jn = (t) => Object.values(t), Jn = (t, e) => {\n  const n = new CustomEvent(t, {\n    cancelable: !0,\n    bubbles: !0\n  });\n  return v(e) && k(n, e), n;\n}, Kn = { passive: !0 }, Xn = (t) => t.offsetHeight, Yn = (t, e) => {\n  w(e).forEach(([n, o]) => {\n    if (o && N(n) && n.includes(\"--\"))\n      t.style.setProperty(n, o);\n    else {\n      const s = {};\n      s[n] = o, k(t.style, s);\n    }\n  });\n}, I = (t) => v(t) && t.constructor.name === \"Map\" || !1, se = (t) => typeof t == \"number\" || !1, m = /* @__PURE__ */ new Map(), Zn = {\n  /**\n   * Sets a new timeout timer for an element, or element -> key association.\n   *\n   * @param element target element\n   * @param callback the callback\n   * @param delay the execution delay\n   * @param key a unique key\n   */\n  set: (t, e, n, o) => {\n    u(t) && (o && o.length ? (m.has(t) || m.set(t, /* @__PURE__ */ new Map()), m.get(t).set(o, setTimeout(e, n))) : m.set(t, setTimeout(e, n)));\n  },\n  /**\n   * Returns the timer associated with the target.\n   *\n   * @param element target element\n   * @param key a unique\n   * @returns the timer\n   */\n  get: (t, e) => {\n    if (!u(t))\n      return null;\n    const n = m.get(t);\n    return e && n && I(n) ? n.get(e) || /* istanbul ignore next */\n    null : se(n) ? n : null;\n  },\n  /**\n   * Clears the element's timer.\n   *\n   * @param element target element\n   * @param key a unique key\n   */\n  clear: (t, e) => {\n    if (!u(t))\n      return;\n    const n = m.get(t);\n    e && e.length && I(n) ? (clearTimeout(n.get(e)), n.delete(e), n.size === 0 && m.delete(t)) : (clearTimeout(n), m.delete(t));\n  }\n}, $n = (t) => t.toUpperCase(), h = (t, e) => {\n  const { width: n, height: o, top: s, right: r, bottom: a, left: l } = t.getBoundingClientRect();\n  let p = 1, c = 1;\n  if (e && u(t)) {\n    const { offsetWidth: f, offsetHeight: y } = t;\n    p = f > 0 ? Math.round(n) / f : (\n      /* istanbul ignore next */\n      1\n    ), c = y > 0 ? Math.round(o) / y : (\n      /* istanbul ignore next */\n      1\n    );\n  }\n  return {\n    width: n / p,\n    height: o / c,\n    top: s / c,\n    right: r / p,\n    bottom: a / c,\n    left: l / p,\n    x: l / p,\n    y: s / c\n  };\n}, _n = (t) => d(t).body, T = (t) => d(t).documentElement, to = (t) => d(t).head, eo = (t) => {\n  const e = W(t), n = e ? t.scrollX : t.scrollLeft, o = e ? t.scrollY : t.scrollTop;\n  return { x: n, y: o };\n}, ce = (t) => i(t) && t.constructor.name === \"ShadowRoot\" || !1, no = (t) => t.nodeName === \"HTML\" ? t : u(t) && t.assignedSlot || // step into the shadow DOM of the parent of a slotted node\ni(t) && t.parentNode || // DOM Element detected\nce(t) && t.host || // ShadowRoot detected\nT(t), re = (t) => {\n  if (!u(t))\n    return !1;\n  const { width: e, height: n } = h(t), { offsetWidth: o, offsetHeight: s } = t;\n  return Math.round(e) !== o || Math.round(n) !== s;\n}, oo = (t, e, n) => {\n  const o = u(e), s = h(t, o && re(e)), r = { x: 0, y: 0 };\n  if (o) {\n    const a = h(e, !0);\n    r.x = a.x + e.clientLeft, r.y = a.y + e.clientTop;\n  }\n  return {\n    x: s.left + n.x - r.x,\n    y: s.top + n.y - r.y,\n    width: s.width,\n    height: s.height\n  };\n};\nlet B = 0, H = 0;\nconst b = /* @__PURE__ */ new Map(), ae = (t, e) => {\n  let n = e ? B : H;\n  if (e) {\n    const o = ae(t), s = b.get(o) || /* @__PURE__ */ new Map();\n    b.has(o) || b.set(o, s), I(s) && !s.has(e) ? (s.set(e, n), B += 1) : n = s.get(e);\n  } else {\n    const o = t.id || t;\n    b.has(o) ? n = b.get(o) : (b.set(o, n), H += 1);\n  }\n  return n;\n}, so = (t) => {\n  var e;\n  return t ? R(t) ? t.defaultView : i(t) ? (e = t == null ? void 0 : t.ownerDocument) == null ? void 0 : e.defaultView : t : window;\n}, ie = (t) => Array.isArray(t) || !1, co = (t) => i(t) && t.nodeName === \"CANVAS\" || !1, ue = (t) => u(t) && !!t.shadowRoot || !1, ro = (t) => i(t) && [1, 2, 3, 4, 5, 6, 7, 8].some((e) => t.nodeType === e) || !1, ao = (t) => {\n  if (!i(t))\n    return !1;\n  const { top: e, bottom: n } = h(t), { clientHeight: o } = T(t);\n  return e <= o && n >= 0;\n}, io = (t) => {\n  if (!i(t))\n    return !1;\n  const { clientWidth: e, clientHeight: n } = T(t), { top: o, left: s, bottom: r, right: a } = h(t, !0);\n  return o >= 0 && s >= 0 && r <= n && a <= e;\n}, uo = (t) => ie(t) && t.every(u) || !1, lo = (t) => typeof t == \"function\" || !1, po = (t) => v(t) && t.constructor.name === \"HTMLCollection\" || !1, fo = (t) => u(t) && t.tagName === \"IMG\" || !1, mo = (t) => {\n  if (!N(t))\n    return !1;\n  try {\n    JSON.parse(t);\n  } catch {\n    return !1;\n  }\n  return !0;\n}, go = (t) => v(t) && t.constructor.name === \"WeakMap\" || !1, vo = (t) => i(t) && [\"SVG\", \"Image\", \"Video\", \"Canvas\"].some((e) => t.constructor.name.includes(e)) || !1, Eo = (t) => v(t) && t.constructor.name === \"NodeList\" || !1, bo = (t) => T(t).dir === \"rtl\", ho = (t) => i(t) && t.constructor.name.includes(\"SVG\") || !1, yo = (t) => i(t) && [\"TABLE\", \"TD\", \"TH\"].includes(t.nodeName) || !1, le = (t, e) => t ? t.closest(e) || // break out of `ShadowRoot`\nle(t.getRootNode().host, e) : null, wo = (t, e) => u(t) ? t : (i(e) ? e : d()).querySelector(t), de = (t, e) => (i(e) ? e : d()).getElementsByTagName(t), Ao = (t) => [...de(\"*\", t)].filter(ue), So = (t, e) => d(e).getElementById(t) || null, Mo = (t, e) => (i(e) ? e : d()).querySelectorAll(t), No = (t, e) => (e && i(e) ? e : d()).getElementsByClassName(\n  t\n), ko = (t, e) => t.matches(e), To = \"2.0.0alpha14\";\nexport {\n  Vn as ArrayFrom,\n  P as DOMContentLoadedEvent,\n  Y as DOMMouseScrollEvent,\n  O as Data,\n  Fn as Float32ArrayFrom,\n  Wn as Float64ArrayFrom,\n  k as ObjectAssign,\n  w as ObjectEntries,\n  qn as ObjectHasOwn,\n  Gn as ObjectKeys,\n  jn as ObjectValues,\n  Zn as Timer,\n  G as abortEvent,\n  Ln as addClass,\n  cn as addEventListener,\n  Wt as animationDelay,\n  Ft as animationDuration,\n  D as animationEndEvent,\n  U as animationName,\n  pe as ariaChecked,\n  me as ariaDescribedBy,\n  fe as ariaDescription,\n  ge as ariaExpanded,\n  ve as ariaHasPopup,\n  Ee as ariaHidden,\n  be as ariaLabel,\n  he as ariaLabelledBy,\n  ye as ariaModal,\n  we as ariaPressed,\n  Ae as ariaSelected,\n  Me as ariaValueMax,\n  Se as ariaValueMin,\n  Ne as ariaValueNow,\n  ke as ariaValueText,\n  j as beforeunloadEvent,\n  an as bezierEasings,\n  J as blurEvent,\n  K as changeEvent,\n  le as closest,\n  X as contextmenuEvent,\n  Jn as createCustomEvent,\n  Zt as createElement,\n  $t as createElementNS,\n  Q as dispatchEvent,\n  Hn as distinct,\n  zn as documentBody,\n  xn as documentElement,\n  M as documentHead,\n  De as dragEvent,\n  ze as dragendEvent,\n  Le as dragenterEvent,\n  Oe as dragleaveEvent,\n  Ie as dragoverEvent,\n  Ce as dragstartEvent,\n  Pn as emulateAnimationEnd,\n  Un as emulateTransitionEnd,\n  Z as errorEvent,\n  Rn as focus,\n  $ as focusEvent,\n  Ue as focusEvents,\n  _ as focusinEvent,\n  tt as focusoutEvent,\n  et as gesturechangeEvent,\n  nt as gestureendEvent,\n  ot as gesturestartEvent,\n  Yt as getAttribute,\n  Sn as getAttributeNS,\n  h as getBoundingClientRect,\n  Ao as getCustomElements,\n  d as getDocument,\n  _n as getDocumentBody,\n  T as getDocumentElement,\n  to as getDocumentHead,\n  _t as getElementAnimationDelay,\n  te as getElementAnimationDuration,\n  So as getElementById,\n  g as getElementStyle,\n  ee as getElementTransitionDelay,\n  ne as getElementTransitionDuration,\n  No as getElementsByClassName,\n  de as getElementsByTagName,\n  Bn as getInstance,\n  eo as getNodeScroll,\n  no as getParentNode,\n  oo as getRectRelativeToOffsetParent,\n  ae as getUID,\n  so as getWindow,\n  Mn as hasAttribute,\n  Nn as hasAttributeNS,\n  In as hasClass,\n  gn as isApple,\n  ie as isArray,\n  co as isCanvas,\n  ue as isCustomElement,\n  R as isDocument,\n  ro as isElement,\n  ao as isElementInScrollRange,\n  io as isElementInViewport,\n  uo as isElementsArray,\n  vn as isFirefox,\n  lo as isFunction,\n  po as isHTMLCollection,\n  u as isHTMLElement,\n  fo as isHTMLImageElement,\n  mo as isJSON,\n  I as isMap,\n  vo as isMedia,\n  mn as isMobile,\n  i as isNode,\n  Eo as isNodeList,\n  se as isNumber,\n  v as isObject,\n  bo as isRTL,\n  ho as isSVGElement,\n  re as isScaledElement,\n  ce as isShadowRoot,\n  N as isString,\n  yo as isTableElement,\n  go as isWeakMap,\n  W as isWindow,\n  We as keyAlt,\n  Re as keyArrowDown,\n  qe as keyArrowLeft,\n  Ge as keyArrowRight,\n  Qe as keyArrowUp,\n  je as keyBackspace,\n  Je as keyCapsLock,\n  Ke as keyControl,\n  Xe as keyDelete,\n  Ye as keyEnter,\n  Ze as keyEscape,\n  $e as keyInsert,\n  _e as keyMeta,\n  tn as keyPause,\n  en as keyScrollLock,\n  nn as keyShift,\n  on as keySpace,\n  sn as keyTab,\n  Fe as keyboardEventKeys,\n  st as keydownEvent,\n  ct as keypressEvent,\n  rt as keyupEvent,\n  at as loadEvent,\n  xe as loadstartEvent,\n  ko as matches,\n  Be as mouseClickEvents,\n  He as mouseHoverEvents,\n  Ve as mouseSwipeEvents,\n  it as mouseclickEvent,\n  ut as mousedblclickEvent,\n  lt as mousedownEvent,\n  ft as mouseenterEvent,\n  pt as mousehoverEvent,\n  gt as mouseinEvent,\n  mt as mouseleaveEvent,\n  bt as mousemoveEvent,\n  vt as mouseoutEvent,\n  Et as mouseoverEvent,\n  dt as mouseupEvent,\n  ht as mousewheelEvent,\n  yt as moveEvent,\n  Te as nativeEvents,\n  Xt as noop,\n  Qn as normalizeOptions,\n  V as normalizeValue,\n  Jt as off,\n  un as offsetHeight,\n  ln as offsetWidth,\n  jt as on,\n  Kt as one,\n  wt as orientationchangeEvent,\n  Kn as passiveHandler,\n  At as pointercancelEvent,\n  St as pointerdownEvent,\n  Mt as pointerleaveEvent,\n  Nt as pointermoveEvent,\n  kt as pointerupEvent,\n  wo as querySelector,\n  Mo as querySelectorAll,\n  Tt as readystatechangeEvent,\n  Xn as reflow,\n  Dn as removeAttribute,\n  Cn as removeAttributeNS,\n  On as removeClass,\n  rn as removeEventListener,\n  Dt as resetEvent,\n  Ct as resizeEvent,\n  zt as scrollEvent,\n  dn as scrollHeight,\n  pn as scrollWidth,\n  Lt as selectEvent,\n  Ot as selectendEvent,\n  It as selectstartEvent,\n  kn as setAttribute,\n  Tn as setAttributeNS,\n  Yn as setElementStyle,\n  xt as submitEvent,\n  En as support3DTransform,\n  wn as supportAnimation,\n  bn as supportPassive,\n  yn as supportTouch,\n  hn as supportTransform,\n  An as supportTransition,\n  fn as tabindex,\n  oe as toLowerCase,\n  $n as toUpperCase,\n  Pe as touchEvents,\n  Ht as touchcancelEvent,\n  Pt as touchendEvent,\n  Bt as touchmoveEvent,\n  Vt as touchstartEvent,\n  Qt as transitionDelay,\n  Rt as transitionDuration,\n  C as transitionEndEvent,\n  F as transitionProperty,\n  Ut as unloadEvent,\n  S as userAgent,\n  A as userAgentData,\n  To as version\n};\n//# sourceMappingURL=shorty.mjs.map\n","const e = {}, f = (t) => {\n  const { type: c, currentTarget: i } = t;\n  [...e[c]].forEach(([n, s]) => {\n    i === n && [...s].forEach(([o, a]) => {\n      o.apply(n, [t]), typeof a == \"object\" && a.once && r(n, c, o, a);\n    });\n  });\n}, E = (t, c, i, n) => {\n  e[c] || (e[c] = /* @__PURE__ */ new Map());\n  const s = e[c];\n  s.has(t) || s.set(t, /* @__PURE__ */ new Map());\n  const o = s.get(t), { size: a } = o;\n  o.set(i, n), a || t.addEventListener(c, f, n);\n}, r = (t, c, i, n) => {\n  const s = e[c], o = s && s.get(t), a = o && o.get(i), d = a !== void 0 ? a : n;\n  o && o.has(i) && o.delete(i), s && (!o || !o.size) && s.delete(t), (!s || !s.size) && delete e[c], (!o || !o.size) && t.removeEventListener(c, f, d);\n}, g = E, M = r;\nexport {\n  E as addListener,\n  f as globalListener,\n  M as off,\n  g as on,\n  e as registry,\n  r as removeListener\n};\n//# sourceMappingURL=event-listener.mjs.map\n","/**\n * Global namespace for most components `fade` class.\n */\nconst fadeClass = 'fade';\nexport default fadeClass;\n","/**\n * Global namespace for most components `show` class.\n */\nconst showClass = 'show';\nexport default showClass;\n","/**\n * Global namespace for most components `dismiss` option.\n */\nconst dataBsDismiss = 'data-bs-dismiss';\nexport default dataBsDismiss;\n","/** @type {string} */\nconst alertString = 'alert';\nexport default alertString;\n","/** @type {string} */\nconst alertComponent = 'Alert';\nexport default alertComponent;\n","/* Native JavaScript for Bootstrap 5 | Base Component\n----------------------------------------------------- */\nimport { querySelector, normalizeOptions, Data, ObjectKeys, isString } from '@thednp/shorty';\n\nimport type { BaseOptions } from '../interface/baseComponent';\nimport Version from '../version';\n\n/** Returns a new `BaseComponent` instance. */\nexport default class BaseComponent {\n  declare element: HTMLElement;\n  declare options?: BaseOptions;\n\n  /**\n   * @param target `HTMLElement` or selector string\n   * @param config component instance options\n   */\n  constructor(target: HTMLElement | string, config?: BaseOptions) {\n    const element = querySelector(target);\n\n    if (!element) {\n      if (isString(target)) {\n        throw Error(`${this.name} Error: \"${target}\" is not a valid selector.`);\n      } else {\n        throw Error(`${this.name} Error: your target is not an instance of HTMLElement.`);\n      }\n    }\n\n    const prevInstance = Data.get<typeof this>(element, this.name);\n    /* istanbul ignore else */\n    if (prevInstance) {\n      prevInstance.dispose();\n    }\n\n    this.element = element;\n    this.options =\n      this.defaults && ObjectKeys(this.defaults).length\n        ? normalizeOptions(element, this.defaults, config || {}, 'bs')\n        : {};\n\n    Data.set(element, this.name, this);\n  }\n\n  /* istanbul ignore next */\n  get version() {\n    return Version;\n  }\n\n  /* istanbul ignore next */\n  get name() {\n    return 'BaseComponent';\n  }\n\n  /* istanbul ignore next */\n  get defaults() {\n    return {};\n  }\n\n  /** Removes component from target element. */\n  dispose() {\n    Data.remove(this.element, this.name);\n    ObjectKeys(this).forEach(prop => {\n      delete this[prop];\n    });\n  }\n}\n","/* Native JavaScript for Bootstrap 5 | Alert\n-------------------------------------------- */\nimport {\n  emulateTransitionEnd,\n  mouseclickEvent,\n  getInstance,\n  querySelector,\n  hasClass,\n  removeClass,\n  dispatchEvent,\n  createCustomEvent,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport dataBsDismiss from '../strings/dataBsDismiss';\nimport alertString from '../strings/alertString';\nimport alertComponent from '../strings/alertComponent';\nimport type { AlertEvent } from '../interface/alert';\n\nimport BaseComponent from './base-component';\n\n// ALERT PRIVATE GC\n// ================\nconst alertSelector = `.${alertString}`;\nconst alertDismissSelector = `[${dataBsDismiss}=\"${alertString}\"]`;\n\n/**\n * Static method which returns an existing `Alert` instance associated\n * to a target `Element`.\n *\n */\nconst getAlertInstance = (element: HTMLElement) => getInstance<Alert>(element, alertComponent);\n\n/**\n * An `Alert` initialization callback.\n */\nconst alertInitCallback = <T>(element: HTMLElement) => new Alert(element) as T;\n\n// ALERT CUSTOM EVENTS\n// ===================\nconst closeAlertEvent = createCustomEvent<AlertEvent>(`close.bs.${alertString}`);\nconst closedAlertEvent = createCustomEvent<AlertEvent>(`closed.bs.${alertString}`);\n\n// ALERT EVENT HANDLER\n// ===================\n/**\n * Alert `transitionend` callback.\n *\n * @param that target Alert instance\n */\nconst alertTransitionEnd = (that: Alert) => {\n  const { element } = that;\n  toggleAlertHandler(that);\n\n  dispatchEvent(element, closedAlertEvent);\n\n  that.dispose();\n  element.remove();\n};\n\n// ALERT PRIVATE METHOD\n// ====================\n/**\n * Toggle on / off the `click` event listener.\n *\n * @param that the target alert instance\n * @param add when `true`, event listener is added\n */\nconst toggleAlertHandler = (that: Alert, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { dismiss, close } = that;\n  /* istanbul ignore else */\n  if (dismiss) action(dismiss, mouseclickEvent, close);\n};\n\n// ALERT DEFINITION\n// ================\n/** Creates a new Alert instance. */\nexport default class Alert extends BaseComponent {\n  static selector = alertSelector;\n  static init = alertInitCallback;\n  static getInstance = getAlertInstance;\n  dismiss: HTMLElement | null;\n\n  constructor(target: HTMLElement | string) {\n    super(target);\n\n    // the dismiss button\n    this.dismiss = querySelector(alertDismissSelector, this.element);\n\n    // add event listener\n    toggleAlertHandler(this, true);\n  }\n\n  /** Returns component name string. */\n  get name() {\n    return alertComponent;\n  }\n\n  // ALERT PUBLIC METHODS\n  // ====================\n  /**\n   * Public method that hides the `.alert` element from the user,\n   * disposes the instance once animation is complete, then\n   * removes the element from the DOM.\n   */\n  close = () => {\n    const { element } = this;\n\n    /* istanbul ignore else */\n    if (element && hasClass(element, showClass)) {\n      dispatchEvent(element, closeAlertEvent);\n\n      if (!closeAlertEvent.defaultPrevented) {\n        removeClass(element, showClass);\n\n        if (hasClass(element, fadeClass)) {\n          emulateTransitionEnd(element, () => alertTransitionEnd(this));\n        } else alertTransitionEnd(this);\n      }\n    }\n  };\n\n  /** Remove the component from target element. */\n  dispose() {\n    toggleAlertHandler(this);\n    super.dispose();\n  }\n}\n","/**\n * Global namespace for most components active class.\n */\nconst activeClass = 'active';\nexport default activeClass;\n","/**\n * Global namespace for most components `toggle` option.\n */\nconst dataBsToggle = 'data-bs-toggle';\nexport default dataBsToggle;\n","/** @type {string} */\nconst buttonComponent = 'Button';\nexport default buttonComponent;\n","/* Native JavaScript for Bootstrap 5 | Button\n---------------------------------------------*/\nimport {\n  getInstance,\n  removeClass,\n  hasClass,\n  addClass,\n  setAttribute,\n  mouseclickEvent,\n  ariaPressed,\n  getAttribute,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport activeClass from '../strings/activeClass';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport buttonString from '../strings/buttonString';\nimport buttonComponent from '../strings/buttonComponent';\n\nimport BaseComponent from './base-component';\n\n// BUTTON PRIVATE GC\n// =================\nconst buttonSelector = `[${dataBsToggle}=\"${buttonString}\"]`;\n\n/**\n * Static method which returns an existing `Button` instance associated\n * to a target `Element`.\n */\nconst getButtonInstance = (element: HTMLElement) => getInstance<Button>(element, buttonComponent);\n\n/** A `Button` initialization callback. */\nconst buttonInitCallback = (element: HTMLElement) => new Button(element);\n\n// BUTTON PRIVATE METHOD\n// =====================\n/**\n * Toggles on/off the `click` event listener.\n *\n * @param self the `Button` instance\n * @param add when `true`, event listener is added\n */\nconst toggleButtonHandler = (self: Button, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  action(self.element, mouseclickEvent, self.toggle);\n};\n\n// BUTTON DEFINITION\n// =================\n/** Creates a new `Button` instance. */\nexport default class Button extends BaseComponent {\n  static selector = buttonSelector;\n  static init = buttonInitCallback;\n  static getInstance = getButtonInstance;\n\n  isActive = false;\n\n  /**\n   * @param target usually a `.btn` element\n   */\n  constructor(target: HTMLElement | string) {\n    super(target);\n\n    // initialization element\n    const { element } = this;\n\n    // set initial state\n    this.isActive = hasClass(element, activeClass);\n    setAttribute(element, ariaPressed, String(!!this.isActive));\n\n    // add event listener\n    toggleButtonHandler(this, true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return buttonComponent;\n  }\n\n  // BUTTON PUBLIC METHODS\n  // =====================\n  /**\n   * Toggles the state of the target button.\n   *\n   * @param e usually `click` Event object\n   */\n  toggle = (e: Event) => {\n    if (e) e.preventDefault();\n\n    const { element, isActive } = this;\n    if (!hasClass(element, 'disabled') && !getAttribute(element, 'disabled')) {\n      const action = isActive ? removeClass : addClass;\n      action(element, activeClass);\n      setAttribute(element, ariaPressed, isActive ? 'false' : 'true');\n      this.isActive = hasClass(element, activeClass);\n    }\n  };\n\n  /** Removes the `Button` component from the target element. */\n  dispose() {\n    toggleButtonHandler(this);\n    super.dispose();\n  }\n}\n","/** @type {string} */\nconst buttonString = 'button';\nexport default buttonString;\n","/**\n * Global namespace for most components `target` option.\n */\nconst dataBsTarget = 'data-bs-target';\nexport default dataBsTarget;\n","/** @type {string} */\nconst carouselString = 'carousel';\nexport default carouselString;\n","/** @type {string} */\nconst carouselComponent = 'Carousel';\nexport default carouselComponent;\n","/**\n * Global namespace for most components `parent` option.\n */\nconst dataBsParent = 'data-bs-parent';\nexport default dataBsParent;\n","import { getDocument, getAttribute, closest, querySelector } from '@thednp/shorty';\n\nimport dataBsTarget from '../strings/dataBsTarget';\nimport dataBsParent from '../strings/dataBsParent';\nimport dataBsContainer from '../strings/dataBsContainer';\n\n/**\n * Returns the `Element` that THIS one targets\n * via `data-bs-target`, `href`, `data-bs-parent` or `data-bs-container`.\n *\n * @param element the target element\n * @returns the query result\n */\nconst getTargetElement = (element: HTMLElement) => {\n  const targetAttr = [dataBsTarget, dataBsParent, dataBsContainer, 'href'];\n  const doc = getDocument(element);\n\n  return targetAttr\n    .map(att => {\n      const attValue = getAttribute(element, att);\n      if (attValue) {\n        return att === dataBsParent ? closest(element, attValue) : querySelector(attValue, doc);\n      }\n      return null;\n    })\n    .filter(x => x)[0];\n};\n\nexport default getTargetElement;\n","/**\n * Global namespace for most components `container` option.\n */\nconst dataBsContainer = 'data-bs-container';\nexport default dataBsContainer;\n","/* Native JavaScript for Bootstrap 5 | Carousel\n----------------------------------------------- */\nimport {\n  createCustomEvent,\n  getInstance,\n  dispatchEvent,\n  ObjectAssign,\n  emulateTransitionEnd,\n  passiveHandler,\n  reflow,\n  Timer,\n  getAttribute,\n  getElementsByClassName,\n  querySelectorAll,\n  querySelector,\n  closest,\n  isHTMLElement,\n  isRTL,\n  isElementInScrollRange,\n  getElementTransitionDuration,\n  getDocument,\n  pointerupEvent,\n  pointermoveEvent,\n  pointerdownEvent,\n  keyArrowRight,\n  keyArrowLeft,\n  keydownEvent,\n  mouseclickEvent,\n  mouseleaveEvent,\n  mouseenterEvent,\n  touchstartEvent,\n  dragstartEvent,\n  addClass,\n  hasClass,\n  removeClass,\n  matches,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport activeClass from '../strings/activeClass';\nimport dataBsTarget from '../strings/dataBsTarget';\nimport carouselString from '../strings/carouselString';\nimport carouselComponent from '../strings/carouselComponent';\nimport getTargetElement from '../util/getTargetElement';\nimport BaseComponent from './base-component';\nimport type { CarouselEvent, CarouselOptions } from '../interface/carousel';\n\n// CAROUSEL PRIVATE GC\n// ===================\nconst carouselSelector = `[data-bs-ride=\"${carouselString}\"]`;\nconst carouselItem = `${carouselString}-item`;\nconst dataBsSlideTo = 'data-bs-slide-to';\nconst dataBsSlide = 'data-bs-slide';\nconst pausedClass = 'paused';\n\nconst carouselDefaults: CarouselOptions = {\n  pause: 'hover',\n  keyboard: false,\n  touch: true,\n  interval: 5000,\n};\n\n/**\n * Static method which returns an existing `Carousel` instance associated\n * to a target `Element`.\n */\nconst getCarouselInstance = (element: HTMLElement) => getInstance<Carousel>(element, carouselComponent);\n\n/**\n * A `Carousel` initialization callback.\n */\nconst carouselInitCallback = (element: HTMLElement) => new Carousel(element);\n\nlet startX = 0;\nlet currentX = 0;\nlet endX = 0;\n\n// CAROUSEL CUSTOM EVENTS\n// ======================\nconst carouselSlideEvent = createCustomEvent<CarouselEvent>(`slide.bs.${carouselString}`);\nconst carouselSlidEvent = createCustomEvent<CarouselEvent>(`slid.bs.${carouselString}`);\n\n// CAROUSEL EVENT HANDLERS\n// =======================\n/**\n * The `transitionend` event listener of the `Carousel`.\n *\n * @param self the `Carousel` instance\n */\nconst carouselTransitionEndHandler = (self: Carousel) => {\n  const { index, direction, element, slides, options } = self;\n\n  /* istanbul ignore else */\n  if (self.isAnimating) {\n    const activeItem = getActiveIndex(self);\n    const orientation = direction === 'left' ? 'next' : 'prev';\n    const directionClass = direction === 'left' ? 'start' : 'end';\n\n    addClass(slides[index], activeClass);\n    removeClass(slides[index], `${carouselItem}-${orientation}`);\n    removeClass(slides[index], `${carouselItem}-${directionClass}`);\n\n    removeClass(slides[activeItem], activeClass);\n    removeClass(slides[activeItem], `${carouselItem}-${directionClass}`);\n\n    dispatchEvent(element, carouselSlidEvent);\n    Timer.clear(element, dataBsSlide);\n\n    // must check if a previous instance is disposed\n    if (self.cycle && !getDocument(element).hidden && options.interval && !self.isPaused) {\n      self.cycle();\n    }\n  }\n};\n\n/**\n * Handles the `mouseenter` events when *options.pause*\n * is set to `hover`.\n */\nfunction carouselPauseHandler(this: HTMLElement) {\n  // const element = this;\n  const self = getCarouselInstance(this);\n  /* istanbul ignore else */\n  if (self && !self.isPaused && !Timer.get(this, pausedClass)) {\n    addClass(this, pausedClass);\n  }\n}\n\n/**\n * Handles the `mouseleave` events when *options.pause*\n * is set to `hover`.\n *\n */\nfunction carouselResumeHandler(this: HTMLElement) {\n  // const element = this;\n  const self = getCarouselInstance(this);\n  /* istanbul ignore else */\n  if (self && self.isPaused && !Timer.get(this, pausedClass)) {\n    self.cycle();\n  }\n}\n\n/**\n * Handles the `click` event for the `Carousel` indicators.\n *\n * @param e the `Event` object\n */\nfunction carouselIndicatorHandler(this: HTMLElement, e: MouseEvent) {\n  e.preventDefault();\n  // const indicator = this;\n  const element = (closest(this, carouselSelector) || getTargetElement(this)) as HTMLElement;\n  const self = getCarouselInstance(element);\n\n  if (self && !self.isAnimating) {\n    const newIndex = +(getAttribute(this, dataBsSlideTo) || /* istanbul ignore next */ 0);\n\n    if (\n      this &&\n      !hasClass(this, activeClass) && // event target is not active\n      !Number.isNaN(newIndex)\n    ) {\n      // AND has the specific attribute\n      self.to(newIndex); // do the slide\n    }\n  }\n}\n\n/**\n * Handles the `click` event for the `Carousel` arrows.\n *\n * @param e the `Event` object\n */\nfunction carouselControlsHandler(this: HTMLElement, e: MouseEvent) {\n  e.preventDefault();\n  const element = closest(this, carouselSelector) || (getTargetElement(this) as HTMLElement);\n  const self = getCarouselInstance(element);\n\n  if (self && !self.isAnimating) {\n    const orientation = getAttribute(this, dataBsSlide);\n\n    /* istanbul ignore else */\n    if (orientation === 'next') {\n      self.next();\n    } else if (orientation === 'prev') {\n      self.prev();\n    }\n  }\n}\n\n/**\n * Handles the keyboard `keydown` event for the visible `Carousel` elements.\n *\n * @param e the `Event` object\n */\nconst carouselKeyHandler = ({ code, target }: KeyboardEvent & { target: Node }) => {\n  const doc = getDocument(target);\n  const [element] = [...querySelectorAll(carouselSelector, doc)].filter(x => isElementInScrollRange(x));\n  const self = getCarouselInstance(element);\n\n  /* istanbul ignore next */\n  if (self && !self.isAnimating && !/textarea|input/i.test(target.nodeName)) {\n    const RTL = isRTL(element);\n    const arrowKeyNext = !RTL ? keyArrowRight : keyArrowLeft;\n    const arrowKeyPrev = !RTL ? keyArrowLeft : keyArrowRight;\n\n    /* istanbul ignore else */\n    if (code === arrowKeyPrev) self.prev();\n    else if (code === arrowKeyNext) self.next();\n  }\n};\n\n// CAROUSEL TOUCH HANDLERS\n// =======================\n/**\n * Prevents the `touchstart` and `dragstart` events for the `Carousel` element.\n *\n * @param e the `Event` object\n */\nfunction carouselDragHandler(this: HTMLElement, e: DragEvent | TouchEvent) {\n  const { target } = e;\n  const self = getCarouselInstance(this);\n\n  /* istanbul ignore next */\n  if (\n    self &&\n    self.isTouch &&\n    ((self.indicator && !self.indicator.contains(target as Node)) || !self.controls.includes(target as HTMLElement))\n  ) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    e.preventDefault();\n  }\n}\n\n// CAROUSEL POINTER HANDLERS\n// =========================\n/**\n * Handles the `pointerdown` event for the `Carousel` element.\n *\n * @param e the `Event` object\n */\nfunction carouselPointerDownHandler(this: HTMLElement, e: PointerEvent) {\n  const { target } = e;\n  const self = getCarouselInstance(this);\n\n  if (self && !self.isAnimating && !self.isTouch) {\n    // filter pointer event on controls & indicators\n    const { controls, indicators } = self;\n    if (![...controls, ...indicators].every(el => el === target || el.contains(target as Node))) {\n      startX = e.pageX;\n\n      /* istanbul ignore else */\n      if (this.contains(target as Node)) {\n        self.isTouch = true;\n        toggleCarouselTouchHandlers(self, true);\n      }\n    }\n  }\n}\n\n/**\n * Handles the `pointermove` event for the `Carousel` element.\n *\n * @param e\n */\nconst carouselPointerMoveHandler = (e: PointerEvent) => {\n  currentX = e.pageX;\n};\n\n/**\n * Handles the `pointerup` event for the `Carousel` element.\n *\n * @param e\n */\nconst carouselPointerUpHandler = (e: PointerEvent) => {\n  const { target } = e;\n  const doc = getDocument(target as Node);\n  const self = [...querySelectorAll(carouselSelector, doc)]\n    .map(c => getCarouselInstance(c) as Carousel)\n    .find(i => i.isTouch) as Carousel;\n\n  // impossible to satisfy\n  /* istanbul ignore else */\n  if (self) {\n    const { element, index } = self;\n    const RTL = isRTL(element);\n    endX = e.pageX;\n\n    self.isTouch = false;\n    toggleCarouselTouchHandlers(self);\n\n    if (\n      !doc.getSelection()?.toString().length &&\n      element.contains(target as HTMLElement) &&\n      Math.abs(startX - endX) > 120\n    ) {\n      // determine next index to slide to\n      /* istanbul ignore else */\n      if (currentX < startX) {\n        self.to(index + (RTL ? -1 : 1));\n      } else if (currentX > startX) {\n        self.to(index + (RTL ? 1 : -1));\n      }\n    }\n\n    // reset pointer position\n    startX = 0;\n    currentX = 0;\n    endX = 0;\n  }\n};\n\n// CAROUSEL PRIVATE METHODS\n// ========================\n/**\n * Sets active indicator for the `Carousel` instance.\n *\n * @param self the `Carousel` instance\n * @param index the index of the new active indicator\n */\nconst activateCarouselIndicator = (self: Carousel, index: number) => {\n  const { indicators } = self;\n  [...indicators].forEach(x => removeClass(x, activeClass));\n\n  /* istanbul ignore else */\n  if (self.indicators[index]) addClass(indicators[index], activeClass);\n};\n\n/**\n * Toggles the pointer event listeners for a given `Carousel` instance.\n *\n * @param self the `Carousel` instance\n * @param add when `TRUE` event listeners are added\n */\nconst toggleCarouselTouchHandlers = (self: Carousel, add?: boolean) => {\n  const { element } = self;\n  const action = add ? addListener : removeListener;\n  action(getDocument(element), pointermoveEvent, carouselPointerMoveHandler as EventListener, passiveHandler);\n  action(getDocument(element), pointerupEvent, carouselPointerUpHandler as EventListener, passiveHandler);\n};\n\n/**\n * Toggles all event listeners for a given `Carousel` instance.\n *\n * @param self the `Carousel` instance\n * @param add when `TRUE` event listeners are added\n */\nconst toggleCarouselHandlers = (self: Carousel, add?: boolean) => {\n  const { element, options, slides, controls, indicators } = self;\n  const { touch, pause, interval, keyboard } = options;\n  const action = add ? addListener : removeListener;\n\n  if (pause && interval) {\n    action(element, mouseenterEvent, carouselPauseHandler);\n    action(element, mouseleaveEvent, carouselResumeHandler);\n  }\n\n  if (touch && slides.length > 2) {\n    action(element, pointerdownEvent, carouselPointerDownHandler as EventListener, passiveHandler);\n    action(element, touchstartEvent, carouselDragHandler as unknown as EventListener, { passive: false });\n    action(element, dragstartEvent, carouselDragHandler as unknown as EventListener, { passive: false });\n  }\n\n  /* istanbul ignore else */\n  if (controls.length) {\n    controls.forEach(arrow => {\n      /* istanbul ignore else */\n      if (arrow) action(arrow, mouseclickEvent, carouselControlsHandler as EventListener);\n    });\n  }\n\n  /* istanbul ignore else */\n  if (indicators.length) {\n    indicators.forEach(indicator => {\n      action(indicator, mouseclickEvent, carouselIndicatorHandler as EventListener);\n    });\n  }\n\n  if (keyboard) action(getDocument(element), keydownEvent, carouselKeyHandler as EventListener);\n};\n\n/**\n * Returns the index of the current active item.\n *\n * @param self the `Carousel` instance\n * @returns the query result\n */\nconst getActiveIndex = (self: Carousel) => {\n  const { slides, element } = self;\n  const activeItem = querySelector(`.${carouselItem}.${activeClass}`, element);\n  return isHTMLElement(activeItem) ? [...slides].indexOf(activeItem) : -1;\n};\n\n// CAROUSEL DEFINITION\n// ===================\n/** Creates a new `Carousel` instance. */\nexport default class Carousel extends BaseComponent {\n  static selector = carouselSelector;\n  static init = carouselInitCallback;\n  static getInstance = getCarouselInstance;\n  declare options: CarouselOptions;\n  declare direction: 'right' | 'left';\n  declare index: number;\n  declare isTouch: boolean;\n  declare slides: HTMLCollectionOf<HTMLElement>;\n  declare controls: HTMLElement[];\n  declare indicator: HTMLElement | null;\n  declare indicators: HTMLElement[];\n\n  /**\n   * @param target mostly a `.carousel` element\n   * @param config instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<CarouselOptions>) {\n    super(target, config);\n\n    // initialization element\n    const { element } = this;\n\n    // additional properties\n    this.direction = isRTL(element) ? 'right' : 'left';\n    this.isTouch = false;\n\n    // carousel elements\n    // a LIVE collection is prefferable\n    this.slides = getElementsByClassName(carouselItem, element);\n    const { slides } = this;\n\n    // invalidate when not enough items\n    // no need to go further\n    if (slides.length >= 2) {\n      const activeIndex = getActiveIndex(this);\n      // recover item from disposed instance\n      const transitionItem = [...slides].find(s => matches(s, `.${carouselItem}-next,.${carouselItem}-next`));\n      this.index = activeIndex;\n\n      // external controls must be within same document context\n      const doc = getDocument(element);\n\n      this.controls = [\n        ...querySelectorAll(`[${dataBsSlide}]`, element),\n        ...querySelectorAll(`[${dataBsSlide}][${dataBsTarget}=\"#${element.id}\"]`, doc),\n      ].filter((c, i, ar) => i === ar.indexOf(c));\n\n      this.indicator = querySelector(`.${carouselString}-indicators`, element);\n\n      // a LIVE collection is prefferable\n      this.indicators = [\n        ...(this.indicator ? querySelectorAll(`[${dataBsSlideTo}]`, this.indicator) : []),\n        ...querySelectorAll(`[${dataBsSlideTo}][${dataBsTarget}=\"#${element.id}\"]`, doc),\n      ].filter((c, i, ar) => i === ar.indexOf(c));\n\n      // set JavaScript and DATA API options\n      const { options } = this;\n\n      // don't use TRUE as interval, it's actually 0, use the default 5000ms better\n      this.options.interval = options.interval === true ? carouselDefaults.interval : options.interval;\n\n      // set first slide active if none\n      /* istanbul ignore next - impossible to test with cypress */\n      if (transitionItem) {\n        this.index = [...slides].indexOf(transitionItem);\n      } else if (activeIndex < 0) {\n        this.index = 0;\n        addClass(slides[0], activeClass);\n        if (this.indicators.length) activateCarouselIndicator(this, 0);\n      }\n\n      /* istanbul ignore else */\n      if (this.indicators.length) activateCarouselIndicator(this, this.index);\n\n      // attach event handlers\n      toggleCarouselHandlers(this, true);\n\n      // start to cycle if interval is set\n      if (options.interval) this.cycle();\n    }\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return carouselComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return carouselDefaults;\n  }\n\n  /**\n   * Check if instance is paused.\n   */\n  get isPaused() {\n    return hasClass(this.element, pausedClass);\n  }\n\n  /**\n   * Check if instance is animating.\n   */\n  get isAnimating() {\n    return querySelector(`.${carouselItem}-next,.${carouselItem}-prev`, this.element) !== null;\n  }\n\n  // CAROUSEL PUBLIC METHODS\n  // =======================\n  /** Slide automatically through items. */\n  cycle() {\n    const { element, options, isPaused, index } = this;\n\n    Timer.clear(element, carouselString);\n    if (isPaused) {\n      Timer.clear(element, pausedClass);\n      removeClass(element, pausedClass);\n    }\n\n    Timer.set(\n      element,\n      () => {\n        // it's very important to check self.element\n        // where instance might have been disposed\n        /* istanbul ignore else */\n        if (this.element && !this.isPaused && !this.isTouch && isElementInScrollRange(element)) {\n          this.to(index + 1);\n        }\n      },\n      options.interval as number,\n      carouselString,\n    );\n  }\n\n  /** Pause the automatic cycle. */\n  pause() {\n    const { element, options } = this;\n    /* istanbul ignore else */\n    if (!this.isPaused && options.interval) {\n      addClass(element, pausedClass);\n      Timer.set(\n        element,\n        () => {\n          /* ESLint is now happy */\n        },\n        1,\n        pausedClass,\n      );\n    }\n  }\n\n  /** Slide to the next item. */\n  next() {\n    /* istanbul ignore else */\n    if (!this.isAnimating) {\n      this.to(this.index + 1);\n    }\n  }\n\n  /** Slide to the previous item. */\n  prev() {\n    /* istanbul ignore else */\n    if (!this.isAnimating) {\n      this.to(this.index - 1);\n    }\n  }\n\n  /**\n   * Jump to the item with the `idx` index.\n   *\n   * @param idx the index of the item to jump to\n   */\n  to(idx: number) {\n    const { element, slides, options } = this;\n    const activeItem = getActiveIndex(this);\n    const RTL = isRTL(element);\n    let next = idx;\n\n    // when controled via methods, make sure to check again\n    // first return if we're on the same item #227\n    // `to()` must be SPAM protected by Timer\n    if (!this.isAnimating && activeItem !== next && !Timer.get(element, dataBsSlide)) {\n      // determine transition direction\n      /* istanbul ignore else */\n      if (activeItem < next || (activeItem === 0 && next === slides.length - 1)) {\n        this.direction = RTL ? 'right' : 'left'; // next\n      } else if (activeItem > next || (activeItem === slides.length - 1 && next === 0)) {\n        this.direction = RTL ? 'left' : 'right'; // prev\n      }\n      const { direction } = this;\n\n      // find the right next index\n      if (next < 0) {\n        next = slides.length - 1;\n      } else if (next >= slides.length) {\n        next = 0;\n      }\n\n      // orientation, class name, eventProperties\n      const orientation = direction === 'left' ? 'next' : 'prev';\n      const directionClass = direction === 'left' ? 'start' : 'end';\n\n      const eventProperties = {\n        relatedTarget: slides[next],\n        from: activeItem,\n        to: next,\n        direction,\n      };\n\n      // update event properties\n      ObjectAssign(carouselSlideEvent, eventProperties);\n      ObjectAssign(carouselSlidEvent, eventProperties);\n\n      // discontinue when prevented\n      dispatchEvent(element, carouselSlideEvent);\n      if (!carouselSlideEvent.defaultPrevented) {\n        // update index\n        this.index = next;\n        activateCarouselIndicator(this, next);\n\n        if (getElementTransitionDuration(slides[next]) && hasClass(element, 'slide')) {\n          Timer.set(\n            element,\n            () => {\n              addClass(slides[next], `${carouselItem}-${orientation}`);\n              reflow(slides[next]);\n              addClass(slides[next], `${carouselItem}-${directionClass}`);\n              addClass(slides[activeItem], `${carouselItem}-${directionClass}`);\n\n              // the instance might get diposed mid-animation\n              emulateTransitionEnd(\n                slides[next],\n                () => this.slides && this.slides.length && carouselTransitionEndHandler(this),\n              );\n            },\n            0,\n            dataBsSlide,\n          );\n        } else {\n          addClass(slides[next], activeClass);\n          removeClass(slides[activeItem], activeClass);\n\n          Timer.set(\n            element,\n            () => {\n              Timer.clear(element, dataBsSlide);\n              // check for element, might have been disposed\n              /* istanbul ignore else */\n              if (element && options.interval && !this.isPaused) {\n                this.cycle();\n              }\n\n              dispatchEvent(element, carouselSlidEvent);\n            },\n            0,\n            dataBsSlide,\n          );\n        }\n      }\n    }\n  }\n\n  /** Remove `Carousel` component from target. */\n  dispose() {\n    const { isAnimating } = this;\n\n    const clone = {\n      ...this,\n      isAnimating,\n    };\n    toggleCarouselHandlers(clone);\n    super.dispose();\n\n    // istanbul ignore next - impossible to test with cypress\n    if (clone.isAnimating) {\n      emulateTransitionEnd(clone.slides[clone.index], () => {\n        carouselTransitionEndHandler(clone);\n      });\n    }\n  }\n}\n","/**\n * Global namespace for most components `collapsing` class.\n * As used by `Collapse` / `Tab`.\n */\nconst collapsingClass = 'collapsing';\nexport default collapsingClass;\n","/** @type {string} */\nconst collapseString = 'collapse';\nexport default collapseString;\n","/** @type {string} */\nconst collapseComponent = 'Collapse';\nexport default collapseComponent;\n","/* Native JavaScript for Bootstrap 5 | Collapse\n----------------------------------------------- */\nimport {\n  getInstance,\n  setAttribute,\n  getDocument,\n  closest,\n  querySelector,\n  querySelectorAll,\n  addClass,\n  hasClass,\n  removeClass,\n  mouseclickEvent,\n  ariaExpanded,\n  emulateTransitionEnd,\n  reflow,\n  dispatchEvent,\n  setElementStyle,\n  Timer,\n  createCustomEvent,\n  noop,\n  isHTMLElement,\n  isString,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport dataBsToggle from '../strings/dataBsToggle';\nimport collapsingClass from '../strings/collapsingClass';\nimport showClass from '../strings/showClass';\nimport collapseString from '../strings/collapseString';\nimport collapseComponent from '../strings/collapseComponent';\n\nimport getTargetElement from '../util/getTargetElement';\nimport BaseComponent from './base-component';\nimport type { CollapseEvent, CollapseOptions } from '../interface/collapse';\n\n// COLLAPSE GC\n// ===========\nconst collapseSelector = `.${collapseString}`;\nconst collapseToggleSelector = `[${dataBsToggle}=\"${collapseString}\"]`;\nconst collapseDefaults = { parent: null };\n\n/**\n * Static method which returns an existing `Collapse` instance associated\n * to a target `Element`.\n */\nconst getCollapseInstance = (element: HTMLElement) => getInstance<Collapse>(element, collapseComponent);\n\n/**\n * A `Collapse` initialization callback.\n */\nconst collapseInitCallback = (element: HTMLElement) => new Collapse(element);\n\n// COLLAPSE CUSTOM EVENTS\n// ======================\nconst showCollapseEvent = createCustomEvent<CollapseEvent>(`show.bs.${collapseString}`);\nconst shownCollapseEvent = createCustomEvent<CollapseEvent>(`shown.bs.${collapseString}`);\nconst hideCollapseEvent = createCustomEvent<CollapseEvent>(`hide.bs.${collapseString}`);\nconst hiddenCollapseEvent = createCustomEvent<CollapseEvent>(`hidden.bs.${collapseString}`);\n\n// COLLAPSE PRIVATE METHODS\n// ========================\n/**\n * Expand the designated `Element`.\n *\n * @param self the `Collapse` instance\n */\nconst expandCollapse = (self: Collapse) => {\n  const { element, parent, triggers } = self;\n\n  dispatchEvent(element, showCollapseEvent);\n  if (!showCollapseEvent.defaultPrevented) {\n    Timer.set(element, noop, 17);\n    if (parent) Timer.set(parent, noop, 17);\n\n    addClass(element, collapsingClass);\n    removeClass(element, collapseString);\n\n    setElementStyle(element, { height: `${element.scrollHeight}px` });\n\n    emulateTransitionEnd(element, () => {\n      Timer.clear(element);\n      if (parent) Timer.clear(parent);\n\n      triggers.forEach(btn => setAttribute(btn, ariaExpanded, 'true'));\n\n      removeClass(element, collapsingClass);\n      addClass(element, collapseString);\n      addClass(element, showClass);\n\n      setElementStyle(element, { height: '' });\n\n      dispatchEvent(element, shownCollapseEvent);\n    });\n  }\n};\n\n/**\n * Collapse the designated `Element`.\n *\n * @param self the `Collapse` instance\n */\nconst collapseContent = (self: Collapse) => {\n  const { element, parent, triggers } = self;\n\n  dispatchEvent(element, hideCollapseEvent);\n\n  if (!hideCollapseEvent.defaultPrevented) {\n    Timer.set(element, noop, 17);\n    if (parent) Timer.set(parent, noop, 17);\n\n    setElementStyle(element, { height: `${element.scrollHeight}px` });\n\n    removeClass(element, collapseString);\n    removeClass(element, showClass);\n    addClass(element, collapsingClass);\n\n    reflow(element);\n    setElementStyle(element, { height: '0px' });\n\n    emulateTransitionEnd(element, () => {\n      Timer.clear(element);\n      /* istanbul ignore else */\n      if (parent) Timer.clear(parent);\n\n      triggers.forEach(btn => setAttribute(btn, ariaExpanded, 'false'));\n\n      removeClass(element, collapsingClass);\n      addClass(element, collapseString);\n\n      setElementStyle(element, { height: '' });\n\n      dispatchEvent(element, hiddenCollapseEvent);\n    });\n  }\n};\n\n/**\n * Toggles on/off the event listener(s) of the `Collapse` instance.\n *\n * @param self the `Collapse` instance\n * @param add when `true`, the event listener is added\n */\nconst toggleCollapseHandler = (self: Collapse, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { triggers } = self;\n\n  /* istanbul ignore else */\n  if (triggers.length) {\n    triggers.forEach(btn => action(btn, mouseclickEvent, collapseClickHandler as EventListener));\n  }\n};\n\n// COLLAPSE EVENT HANDLER\n// ======================\n/**\n * Handles the `click` event for the `Collapse` instance.\n *\n * @param e the `Event` object\n */\nconst collapseClickHandler = (e: MouseEvent) => {\n  const { target } = e; // our target is `HTMLElement`\n  const trigger = target && closest(target as HTMLElement, collapseToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getCollapseInstance(element);\n  /* istanbul ignore else */\n  if (self) self.toggle();\n\n  // event target is anchor link #398\n  if (trigger && trigger.tagName === 'A') e.preventDefault();\n};\n\n// COLLAPSE DEFINITION\n// ===================\n\n/** Returns a new `Colapse` instance. */\nexport default class Collapse extends BaseComponent {\n  static selector = collapseSelector;\n  static init = collapseInitCallback;\n  static getInstance = getCollapseInstance;\n  declare options: CollapseOptions;\n  declare parent: HTMLElement | null;\n  declare triggers: HTMLElement[];\n\n  /**\n   * @param target and `Element` that matches the selector\n   * @param config instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<CollapseOptions>) {\n    super(target, config);\n\n    // initialization element\n    const { element, options } = this;\n    const doc = getDocument(element);\n\n    // set triggering elements\n    this.triggers = [...querySelectorAll(collapseToggleSelector, doc)].filter(btn => getTargetElement(btn) === element);\n\n    // set parent accordion\n    this.parent = isHTMLElement(options.parent)\n      ? options.parent\n      : isString(options.parent)\n      ? getTargetElement(element) || querySelector(options.parent as string, doc)\n      : null;\n\n    // add event listeners\n    toggleCollapseHandler(this, true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return collapseComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return collapseDefaults;\n  }\n\n  // COLLAPSE PUBLIC METHODS\n  // =======================\n  /** Toggles the visibility of the collapse. */\n  toggle() {\n    if (!hasClass(this.element, showClass)) this.show();\n    else this.hide();\n  }\n\n  /** Hides the collapse. */\n  hide() {\n    const { triggers, element } = this;\n    if (!Timer.get(element)) {\n      collapseContent(this);\n      /* istanbul ignore else */\n      if (triggers.length) {\n        triggers.forEach(btn => addClass(btn, `${collapseString}d`));\n      }\n    }\n  }\n\n  /** Shows the collapse. */\n  show() {\n    const { element, parent, triggers } = this;\n    let activeCollapse;\n    let activeCollapseInstance;\n\n    if (parent) {\n      activeCollapse = [...querySelectorAll(`.${collapseString}.${showClass}`, parent)].find(i =>\n        getCollapseInstance(i),\n      );\n      activeCollapseInstance = activeCollapse && getCollapseInstance(activeCollapse);\n    }\n\n    if ((!parent || !Timer.get(parent)) && !Timer.get(element)) {\n      if (activeCollapseInstance && activeCollapse !== element) {\n        collapseContent(activeCollapseInstance);\n        activeCollapseInstance.triggers.forEach(btn => {\n          addClass(btn, `${collapseString}d`);\n        });\n      }\n\n      expandCollapse(this);\n      /* istanbul ignore else */\n      if (triggers.length) {\n        triggers.forEach(btn => removeClass(btn, `${collapseString}d`));\n      }\n    }\n  }\n\n  /** Remove the `Collapse` component from the target `Element`. */\n  dispose() {\n    toggleCollapseHandler(this);\n\n    super.dispose();\n  }\n}\n","/**\n * Global namespace for `Dropdown` types / classes.\n */\nconst dropdownMenuClasses = ['dropdown', 'dropup', 'dropstart', 'dropend'];\nexport default dropdownMenuClasses;\n","/** @type {string} */\nconst dropdownComponent = 'Dropdown';\nexport default dropdownComponent;\n","/**\n * Global namespace for `.dropdown-menu`.\n */\nconst dropdownMenuClass = 'dropdown-menu';\nexport default dropdownMenuClass;\n","import { hasAttribute, closest } from '@thednp/shorty';\n\n/**\n * Checks if an *event.target* or its parent has an `href=\"#\"` value.\n * We need to prevent jumping around onclick, don't we?\n *\n * @param element the target element\n * @returns the query result\n */\nconst isEmptyAnchor = (element: HTMLElement) => {\n  // `EventTarget` must be `HTMLElement`\n  const parentAnchor = closest(element, 'A');\n  return (\n    (element.tagName === 'A' &&\n      // anchor href starts with #\n      hasAttribute(element, 'href') &&\n      (element as HTMLAnchorElement).href.slice(-1) === '#') ||\n    // OR a child of an anchor with href starts with #\n    (parentAnchor && hasAttribute(parentAnchor, 'href') && (parentAnchor as HTMLAnchorElement).href.slice(-1) === '#')\n  );\n};\nexport default isEmptyAnchor;\n","/* Native JavaScript for Bootstrap 5 | Dropdown\n----------------------------------------------- */\nimport {\n  ariaExpanded,\n  focusEvent,\n  keydownEvent,\n  setAttribute,\n  keyEscape,\n  keyArrowDown,\n  keyArrowUp,\n  mouseclickEvent,\n  resizeEvent,\n  scrollEvent,\n  keyupEvent,\n  dispatchEvent,\n  setElementStyle,\n  getInstance,\n  ObjectAssign,\n  passiveHandler,\n  getElementsByClassName,\n  closest,\n  getAttribute,\n  getDocument,\n  getBoundingClientRect,\n  getDocumentElement,\n  getElementStyle,\n  isRTL,\n  removeClass,\n  hasClass,\n  addClass,\n  createCustomEvent,\n  focus,\n  getWindow,\n  CSS4Declaration,\n  isHTMLElement,\n  mousedownEvent,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport showClass from '../strings/showClass';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport dropdownClasses from '../strings/dropdownClasses';\nimport dropdownComponent from '../strings/dropdownComponent';\nimport dropdownMenuClass from '../strings/dropdownMenuClass';\n\nimport isEmptyAnchor from '../util/isEmptyAnchor';\nimport BaseComponent from './base-component';\nimport type { DropdownEvent, DropdownOptions } from '../interface/dropdown';\n\n// DROPDOWN PRIVATE GC\n// ===================\nconst [dropdownString, dropupString, dropstartString, dropendString] = dropdownClasses;\nconst dropdownSelector = `[${dataBsToggle}=\"${dropdownString}\"]`;\n\n/**\n * Static method which returns an existing `Dropdown` instance associated\n * to a target `Element`.\n */\nconst getDropdownInstance = (element: HTMLElement) => getInstance<Dropdown>(element, dropdownComponent);\n\n/**\n * A `Dropdown` initialization callback.\n */\nconst dropdownInitCallback = (element: HTMLElement) => new Dropdown(element);\n\n// DROPDOWN PRIVATE GC\n// ===================\n// const dropdownMenuStartClass = `${dropdownMenuClass}-start`;\nconst dropdownMenuEndClass = `${dropdownMenuClass}-end`;\nconst verticalClass = [dropdownString, dropupString];\nconst horizontalClass = [dropstartString, dropendString];\nconst menuFocusTags = ['A', 'BUTTON'];\n\nconst dropdownDefaults = {\n  offset: 5, // [number] 5(px)\n  display: 'dynamic', // [dynamic|static]\n};\n\n// DROPDOWN CUSTOM EVENTS\n// ======================\nconst showDropdownEvent = createCustomEvent<DropdownEvent>(`show.bs.${dropdownString}`);\nconst shownDropdownEvent = createCustomEvent<DropdownEvent>(`shown.bs.${dropdownString}`);\nconst hideDropdownEvent = createCustomEvent<DropdownEvent>(`hide.bs.${dropdownString}`);\nconst hiddenDropdownEvent = createCustomEvent<DropdownEvent>(`hidden.bs.${dropdownString}`);\nconst updatedDropdownEvent = createCustomEvent<DropdownEvent>(`updated.bs.${dropdownString}`);\n\n// DROPDOWN PRIVATE METHODS\n// ========================\n/**\n * Apply specific style or class names to a `.dropdown-menu` to automatically\n * accomodate the layout and the page scroll.\n *\n * @param self the `Dropdown` instance\n */\nconst styleDropdown = (self: Dropdown) => {\n  const { element, menu, parentElement, options } = self;\n  const { offset } = options;\n\n  // don't apply any style on mobile view\n  /* istanbul ignore else: this test requires a navbar */\n  if (getElementStyle(menu, 'position') !== 'static') {\n    const RTL = isRTL(element);\n    // const menuStart = hasClass(menu, dropdownMenuStartClass);\n    const menuEnd = hasClass(menu, dropdownMenuEndClass);\n\n    // reset menu offset and position\n    const resetProps = ['margin', 'top', 'bottom', 'left', 'right'];\n    resetProps.forEach(p => {\n      // menu.style[p] = '';\n      const style: { [key: string]: string } = {};\n      style[p] = '';\n      setElementStyle(menu, style);\n    });\n\n    // set initial position class\n    // take into account .btn-group parent as .dropdown\n    // this requires navbar/btn-group/input-group\n    let positionClass =\n      dropdownClasses.find(c => hasClass(parentElement, c)) ||\n      /* istanbul ignore next: fallback position */ dropdownString;\n\n    const dropdownMargin: { [key: string]: number[] } = {\n      dropdown: [offset, 0, 0],\n      dropup: [0, 0, offset],\n      dropstart: RTL ? [-1, 0, 0, offset] : [-1, offset, 0],\n      dropend: RTL ? [-1, offset, 0] : [-1, 0, 0, offset],\n    };\n\n    const dropdownPosition: { [key: string]: Partial<CSS4Declaration> } = {\n      dropdown: { top: '100%' },\n      dropup: { top: 'auto', bottom: '100%' },\n      dropstart: RTL ? { left: '100%', right: 'auto' } : { left: 'auto', right: '100%' },\n      dropend: RTL ? { left: 'auto', right: '100%' } : { left: '100%', right: 'auto' },\n      menuStart: RTL ? { right: '0', left: 'auto' } : { right: 'auto', left: '0' },\n      menuEnd: RTL ? { right: 'auto', left: '0' } : { right: '0', left: 'auto' },\n    };\n\n    const { offsetWidth: menuWidth, offsetHeight: menuHeight } = menu;\n\n    const { clientWidth, clientHeight } = getDocumentElement(element);\n    const {\n      left: targetLeft,\n      top: targetTop,\n      width: targetWidth,\n      height: targetHeight,\n    } = getBoundingClientRect(element);\n\n    // dropstart | dropend\n    const leftFullExceed = targetLeft - menuWidth - offset < 0;\n    // dropend\n    const rightFullExceed = targetLeft + menuWidth + targetWidth + offset >= clientWidth;\n    // dropstart | dropend\n    const bottomExceed = targetTop + menuHeight + offset >= clientHeight;\n    // dropdown\n    const bottomFullExceed = targetTop + menuHeight + targetHeight + offset >= clientHeight;\n    // dropup\n    const topExceed = targetTop - menuHeight - offset < 0;\n    // dropdown / dropup\n    const leftExceed = ((!RTL && menuEnd) || (RTL && !menuEnd)) && targetLeft + targetWidth - menuWidth < 0;\n    const rightExceed = ((RTL && menuEnd) || (!RTL && !menuEnd)) && targetLeft + menuWidth >= clientWidth;\n\n    // recompute position\n    // handle RTL as well\n    if (horizontalClass.includes(positionClass) && leftFullExceed && rightFullExceed) {\n      positionClass = dropdownString;\n    }\n    if (positionClass === dropstartString && (!RTL ? leftFullExceed : rightFullExceed)) {\n      positionClass = dropendString;\n    }\n    if (positionClass === dropendString && (RTL ? leftFullExceed : rightFullExceed)) {\n      positionClass = dropstartString;\n    }\n    if (positionClass === dropupString && topExceed && !bottomFullExceed) {\n      positionClass = dropdownString;\n    }\n    if (positionClass === dropdownString && bottomFullExceed && !topExceed) {\n      positionClass = dropupString;\n    }\n\n    // override position for horizontal classes\n    if (horizontalClass.includes(positionClass) && bottomExceed) {\n      ObjectAssign(dropdownPosition[positionClass], {\n        top: 'auto',\n        bottom: 0,\n      });\n    }\n\n    // override position for vertical classes\n    if (verticalClass.includes(positionClass) && (leftExceed || rightExceed)) {\n      // don't realign when menu is wider than window\n      // in both RTL and non-RTL readability is KING\n      let posAjust: { left: 'auto' | number; right: 'auto' | number } | undefined = { left: 'auto', right: 'auto' };\n      if (!leftExceed && rightExceed && !RTL) posAjust = { left: 'auto', right: 0 };\n      if (leftExceed && !rightExceed && RTL) posAjust = { left: 0, right: 'auto' };\n      if (posAjust) ObjectAssign(dropdownPosition[positionClass], posAjust);\n    }\n\n    const margins: number[] = dropdownMargin[positionClass];\n    setElementStyle(menu, {\n      ...dropdownPosition[positionClass],\n      margin: `${margins.map(x => (x ? `${x}px` : x)).join(' ')}`,\n    });\n\n    // override dropdown-menu-start | dropdown-menu-end\n    if (verticalClass.includes(positionClass) && menuEnd) {\n      /* istanbul ignore else */\n      if (menuEnd) {\n        const endAdjust =\n          (!RTL && leftExceed) || (RTL && rightExceed) ? 'menuStart' : /* istanbul ignore next */ 'menuEnd';\n        setElementStyle(menu, dropdownPosition[endAdjust]);\n      }\n    }\n    // trigger updated event\n    dispatchEvent(parentElement, updatedDropdownEvent);\n  }\n};\n\n/**\n * Returns an `Array` of focusable items in the given dropdown-menu.\n *\n * @param menu the target menu\n * @returns all children of the dropdown menu\n */\nconst getMenuItems = (menu: HTMLElement) => {\n  return [...menu.children]\n    .map(c => {\n      if (c && menuFocusTags.includes(c.tagName)) return c;\n      const { firstElementChild } = c;\n      if (firstElementChild && menuFocusTags.includes(firstElementChild.tagName)) {\n        return firstElementChild;\n      }\n      return null;\n    })\n    .filter(c => c);\n};\n\n/**\n * Toggles on/off the listeners for the events that close the dropdown\n * as well as event that request a new position for the dropdown.\n *\n * @param {Dropdown} self the `Dropdown` instance\n */\nconst toggleDropdownDismiss = (self: Dropdown) => {\n  const { element, options } = self;\n  const action = self.open ? addListener : removeListener;\n  const doc = getDocument(element);\n\n  action(doc, mouseclickEvent, dropdownDismissHandler as EventListener);\n  action(doc, focusEvent, dropdownDismissHandler as EventListener);\n  action(doc, keydownEvent, dropdownPreventScroll as EventListener);\n  action(doc, keyupEvent, dropdownKeyHandler as EventListener);\n\n  /* istanbul ignore else */\n  if (options.display === 'dynamic') {\n    [scrollEvent, resizeEvent].forEach(ev => {\n      action(getWindow(element), ev, dropdownLayoutHandler, passiveHandler);\n    });\n  }\n};\n\n/**\n * Toggles on/off the `click` event listener of the `Dropdown`.\n *\n * @param self the `Dropdown` instance\n * @param add when `true`, it will add the event listener\n */\nconst toggleDropdownHandler = (self: Dropdown, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  action(self.element, mouseclickEvent, dropdownClickHandler as EventListener);\n};\n\n/**\n * Returns the currently open `.dropdown` element.\n *\n * @param element target\n * @returns the query result\n */\nconst getCurrentOpenDropdown = (element: HTMLElement): HTMLElement | undefined => {\n  const currentParent = [...dropdownClasses, 'btn-group', 'input-group']\n    .map(c => getElementsByClassName(`${c} ${showClass}`, getDocument(element)))\n    .find(x => x.length);\n\n  if (currentParent && currentParent.length) {\n    return [...(currentParent[0].children as HTMLCollectionOf<HTMLElement>)].find(x =>\n      dropdownClasses.some(c => c === getAttribute(x, dataBsToggle)),\n    );\n  }\n  return undefined;\n};\n\n// DROPDOWN EVENT HANDLERS\n// =======================\n/**\n * Handles the `click` event for the `Dropdown` instance.\n *\n * @param e event object\n */\nconst dropdownDismissHandler = (e: MouseEvent) => {\n  const { target, type } = e;\n\n  /* istanbul ignore else */\n  if (target && isHTMLElement(target)) {\n    // some weird FF bug #409\n    const element = getCurrentOpenDropdown(target);\n    const self = element && getDropdownInstance(element);\n\n    /* istanbul ignore else */\n    if (self) {\n      const { parentElement, menu } = self;\n\n      const isForm =\n        parentElement &&\n        parentElement.contains(target) &&\n        (target.tagName === 'form' || closest(target, 'form') !== null);\n\n      if ([mouseclickEvent, mousedownEvent].includes(type) && isEmptyAnchor(target)) {\n        e.preventDefault();\n      }\n\n      /* istanbul ignore else */\n      if (!isForm && type !== focusEvent && target !== element && target !== menu) {\n        self.hide();\n      }\n    }\n  }\n};\n\n/**\n * Handles `click` event listener for `Dropdown`.\n *\n * @param e event object\n */\nconst dropdownClickHandler = (e: MouseEvent) => {\n  const { target } = e;\n  const element = target && closest(target as HTMLElement, dropdownSelector);\n  const self = element && getDropdownInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    self.toggle();\n    /* istanbul ignore else */\n    if (element && isEmptyAnchor(element)) e.preventDefault();\n  }\n};\n\n/**\n * Prevents scroll when dropdown-menu is visible.\n *\n * @param e event object\n */\nconst dropdownPreventScroll = (e: KeyboardEvent) => {\n  /* istanbul ignore else */\n  if ([keyArrowDown, keyArrowUp].includes(e.code)) e.preventDefault();\n};\n\n/**\n * Handles keyboard `keydown` events for `Dropdown`.\n *\n * @param e keyboard key\n */\nfunction dropdownKeyHandler(this: HTMLElement, e: KeyboardEvent) {\n  const { code } = e;\n  const element = getCurrentOpenDropdown(this);\n  const self = element && getDropdownInstance(element);\n  const { activeElement } = (element && getDocument(element)) as Document;\n\n  /* istanbul ignore else */\n  if (self && activeElement) {\n    const { menu, open } = self;\n    const menuItems = getMenuItems(menu);\n\n    // arrow up & down\n    if (menuItems && menuItems.length && [keyArrowDown, keyArrowUp].includes(code)) {\n      let idx = menuItems.indexOf(activeElement);\n      /* istanbul ignore else */\n      if (activeElement === element) {\n        idx = 0;\n      } else if (code === keyArrowUp) {\n        idx = idx > 1 ? idx - 1 : 0;\n      } else if (code === keyArrowDown) {\n        idx = idx < menuItems.length - 1 ? idx + 1 : idx;\n      }\n      /* istanbul ignore else */\n      if (menuItems[idx]) focus(menuItems[idx] as HTMLElement);\n    }\n\n    if (keyEscape === code && open) {\n      self.toggle();\n      focus(element);\n    }\n  }\n}\n\n/** Handles dropdown layout changes during resize / scroll. */\nfunction dropdownLayoutHandler(this: HTMLElement) {\n  const element = getCurrentOpenDropdown(this);\n  const self = element && getDropdownInstance(element);\n\n  /* istanbul ignore else */\n  if (self && self.open) styleDropdown(self);\n}\n\n// DROPDOWN DEFINITION\n// ===================\n/** Returns a new Dropdown instance. */\nexport default class Dropdown extends BaseComponent {\n  static selector = dropdownSelector;\n  static init = dropdownInitCallback;\n  static getInstance = getDropdownInstance;\n  declare options: DropdownOptions;\n  declare open: boolean;\n  declare parentElement: HTMLElement;\n  declare menu: HTMLElement;\n\n  /**\n   * @param target Element or string selector\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<DropdownOptions>) {\n    super(target, config);\n\n    // initialization element\n    const { parentElement } = this.element;\n    const [menu] = getElementsByClassName(dropdownMenuClass, parentElement as ParentNode);\n\n    // invalidate when dropdown-menu is missing\n    if (menu) {\n      // set targets\n      this.parentElement = parentElement as HTMLElement;\n      this.menu = menu;\n\n      // add event listener\n      toggleDropdownHandler(this, true);\n    }\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return dropdownComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return dropdownDefaults;\n  }\n\n  // DROPDOWN PUBLIC METHODS\n  // =======================\n  /** Shows/hides the dropdown menu to the user. */\n  toggle() {\n    if (this.open) this.hide();\n    else this.show();\n  }\n\n  /** Shows the dropdown menu to the user. */\n  show() {\n    const { element, open, menu, parentElement } = this;\n\n    /* istanbul ignore else */\n    if (!open) {\n      const currentElement = getCurrentOpenDropdown(element);\n      const currentInstance = currentElement && getDropdownInstance(currentElement);\n      if (currentInstance) currentInstance.hide();\n\n      // dispatch event\n      [showDropdownEvent, shownDropdownEvent, updatedDropdownEvent].forEach(e => {\n        e.relatedTarget = element;\n      });\n\n      dispatchEvent(parentElement, showDropdownEvent);\n      if (!showDropdownEvent.defaultPrevented) {\n        addClass(menu, showClass);\n        addClass(parentElement, showClass);\n        setAttribute(element, ariaExpanded, 'true');\n\n        // change menu position\n        styleDropdown(this);\n\n        this.open = !open;\n\n        focus(element); // focus the element\n        toggleDropdownDismiss(this);\n        dispatchEvent(parentElement, shownDropdownEvent);\n      }\n    }\n  }\n\n  /** Hides the dropdown menu from the user. */\n  hide() {\n    const { element, open, menu, parentElement } = this;\n\n    /* istanbul ignore else */\n    if (open) {\n      [hideDropdownEvent, hiddenDropdownEvent].forEach(e => {\n        e.relatedTarget = element;\n      });\n\n      dispatchEvent(parentElement, hideDropdownEvent);\n      if (!hideDropdownEvent.defaultPrevented) {\n        removeClass(menu, showClass);\n        removeClass(parentElement, showClass);\n        setAttribute(element, ariaExpanded, 'false');\n\n        this.open = !open;\n        // only re-attach handler if the instance is not disposed\n        toggleDropdownDismiss(this);\n        dispatchEvent(parentElement, hiddenDropdownEvent);\n      }\n    }\n  }\n\n  /** Removes the `Dropdown` component from the target element. */\n  dispose() {\n    if (this.open) this.hide();\n\n    toggleDropdownHandler(this);\n    super.dispose();\n  }\n}\n","/** @type {string} */\nconst modalString = 'modal';\nexport default modalString;\n","/** @type {string} */\nconst modalComponent = 'Modal';\nexport default modalComponent;\n","/** @type {string} */\nconst offcanvasComponent = 'Offcanvas';\nexport default offcanvasComponent;\n","/**\n * Global namespace for components `sticky-top` class.\n */\nconst stickyTopClass = 'sticky-top';\nexport default stickyTopClass;\n","/**\n * Global namespace for components `position-sticky` class.\n */\nconst positionStickyClass = 'position-sticky';\nexport default positionStickyClass;\n","import {\n  getWindow,\n  getDocumentElement,\n  getElementStyle,\n  getDocumentBody,\n  hasClass,\n  setElementStyle,\n  getElementsByClassName,\n} from '@thednp/shorty';\n\nimport fixedTopClass from '../strings/fixedTopClass';\nimport fixedBottomClass from '../strings/fixedBottomClass';\nimport stickyTopClass from '../strings/stickyTopClass';\nimport positionStickyClass from '../strings/positionStickyClass';\n\nconst getFixedItems = (parent?: ParentNode) => [\n  ...getElementsByClassName(fixedTopClass, parent),\n  ...getElementsByClassName(fixedBottomClass, parent),\n  ...getElementsByClassName(stickyTopClass, parent),\n  ...getElementsByClassName(positionStickyClass, parent),\n  ...getElementsByClassName('is-fixed', parent),\n];\n\n/**\n * Removes *padding* and *overflow* from the `<body>`\n * and all spacing from fixed items.\n *\n * @param element the target modal/offcanvas\n */\nexport const resetScrollbar = (element?: HTMLElement) => {\n  const bd = getDocumentBody(element);\n  setElementStyle(bd, {\n    paddingRight: '',\n    overflow: '',\n  });\n\n  const fixedItems = getFixedItems(bd);\n\n  if (fixedItems.length) {\n    fixedItems.forEach(fixed => {\n      setElementStyle(fixed, {\n        paddingRight: '',\n        marginRight: '',\n      });\n    });\n  }\n};\n\n/**\n * Returns the scrollbar width if the body does overflow\n * the window.\n *\n * @param element target element\n * @returns the scrollbar width value\n */\nexport const measureScrollbar = (element: HTMLElement) => {\n  const { clientWidth } = getDocumentElement(element);\n  const { innerWidth } = getWindow(element);\n  return Math.abs(innerWidth - clientWidth);\n};\n\n/**\n * Sets the `<body>` and fixed items style when modal / offcanvas\n * is shown to the user.\n *\n * @param element the target modal/offcanvas\n * @param overflow body does overflow or not\n */\nexport const setScrollbar = (element: HTMLElement, overflow?: boolean) => {\n  const bd = getDocumentBody(element);\n  const bodyPad = parseInt(getElementStyle(bd, 'paddingRight'), 10);\n  const isOpen = getElementStyle(bd, 'overflow') === 'hidden';\n  const sbWidth = isOpen && bodyPad ? 0 : measureScrollbar(element);\n  const fixedItems = getFixedItems(bd);\n\n  /* istanbul ignore else */\n  if (overflow) {\n    setElementStyle(bd, {\n      overflow: 'hidden',\n      paddingRight: `${bodyPad + sbWidth}px`,\n    });\n\n    /* istanbul ignore else */\n    if (fixedItems.length) {\n      fixedItems.forEach(fixed => {\n        const itemPadValue = getElementStyle(fixed, 'paddingRight');\n        fixed.style.paddingRight = `${parseInt(itemPadValue, 10) + sbWidth}px`;\n        /* istanbul ignore else */\n        if ([stickyTopClass, positionStickyClass].some(c => hasClass(fixed, c))) {\n          const itemMValue = getElementStyle(fixed, 'marginRight');\n          fixed.style.marginRight = `${parseInt(itemMValue, 10) - sbWidth}px`;\n        }\n      });\n    }\n  }\n};\n","/**\n * Global namespace for components `fixed-top` class.\n */\nconst fixedTopClass = 'fixed-top';\nexport default fixedTopClass;\n","/**\n * Global namespace for components `fixed-bottom` class.\n */\nconst fixedBottomClass = 'fixed-bottom';\nexport default fixedBottomClass;\n","/** @type {string} */\nconst offcanvasString = 'offcanvas';\nexport default offcanvasString;\n","import { getDocumentBody, isNode, createElement } from '@thednp/shorty';\n\n// the default container for Modal, Offcanvas, Popover and Tooltip\nconst popupContainer = createElement({ tagName: 'div', className: 'popup-container' }) as HTMLElement;\n\nconst appendPopup = (target: HTMLElement, customContainer?: ParentNode) => {\n  const containerIsBody = isNode(customContainer) && customContainer.nodeName === 'BODY';\n  const lookup = isNode(customContainer) && !containerIsBody ? customContainer : popupContainer;\n  const BODY = containerIsBody ? customContainer : getDocumentBody(target);\n\n  if (isNode(target)) {\n    if (lookup === popupContainer) {\n      BODY.append(popupContainer);\n    }\n    lookup.append(target);\n  }\n};\n\nconst removePopup = (target: HTMLElement, customContainer?: ParentNode) => {\n  const containerIsBody = isNode(customContainer) && customContainer.nodeName === 'BODY';\n  const lookup = isNode(customContainer) && !containerIsBody ? customContainer : popupContainer;\n\n  if (isNode(target)) {\n    target.remove();\n\n    if (lookup === popupContainer && !popupContainer.children.length) {\n      popupContainer.remove();\n    }\n  }\n};\n\nconst hasPopup = (target: HTMLElement, customContainer?: ParentNode) => {\n  const lookup = isNode(customContainer) && customContainer.nodeName !== 'BODY' ? customContainer : popupContainer;\n  return isNode(target) && lookup.contains(target);\n};\n\nexport { popupContainer, appendPopup, removePopup, hasPopup };\n","import {\n  createElement,\n  getDocument,\n  reflow,\n  removeClass,\n  hasClass,\n  addClass,\n  querySelector,\n  getDocumentBody,\n} from '@thednp/shorty';\n\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport modalString from '../strings/modalString';\nimport offcanvasString from '../strings/offcanvasString';\nimport { resetScrollbar } from './scrollbar';\nimport { appendPopup, removePopup } from './popupContainer';\n\nconst backdropString = 'backdrop';\nconst modalBackdropClass = `${modalString}-${backdropString}`;\nconst offcanvasBackdropClass = `${offcanvasString}-${backdropString}`;\nconst modalActiveSelector = `.${modalString}.${showClass}`;\nconst offcanvasActiveSelector = `.${offcanvasString}.${showClass}`;\n\n// any document would suffice\nconst overlay = createElement('div') as HTMLElement;\n\n/**\n * Returns the current active modal / offcancas element.\n *\n * @param element the context element\n * @returns the requested element\n */\nconst getCurrentOpen = (element?: HTMLElement): HTMLElement | null => {\n  return querySelector(`${modalActiveSelector},${offcanvasActiveSelector}`, getDocument(element));\n};\n\n/**\n * Toogles from a Modal overlay to an Offcanvas, or vice-versa.\n *\n * @param isModal\n */\nconst toggleOverlayType = (isModal?: boolean) => {\n  const targetClass = isModal ? modalBackdropClass : offcanvasBackdropClass;\n  [modalBackdropClass, offcanvasBackdropClass].forEach(c => {\n    removeClass(overlay, c);\n  });\n  addClass(overlay, targetClass);\n};\n\n/**\n * Append the overlay to DOM.\n *\n * @param element\n * @param hasFade\n * @param isModal\n */\nconst appendOverlay = (element: HTMLElement, hasFade: boolean, isModal?: boolean) => {\n  toggleOverlayType(isModal);\n  appendPopup(overlay, getDocumentBody(element));\n  if (hasFade) addClass(overlay, fadeClass);\n};\n\n/**\n * Shows the overlay to the user.\n */\nconst showOverlay = () => {\n  if (!hasClass(overlay, showClass)) {\n    addClass(overlay, showClass);\n    reflow(overlay);\n  }\n};\n\n/**\n * Hides the overlay from the user.\n */\nconst hideOverlay = () => {\n  removeClass(overlay, showClass);\n};\n\n/**\n * Removes the overlay from DOM.\n *\n * @param element\n */\nconst removeOverlay = (element?: HTMLElement): void => {\n  if (!getCurrentOpen(element)) {\n    removeClass(overlay, fadeClass);\n    removePopup(overlay, getDocumentBody(element));\n    resetScrollbar(element);\n  }\n};\n\nexport {\n  overlay,\n  offcanvasBackdropClass,\n  modalBackdropClass,\n  modalActiveSelector,\n  offcanvasActiveSelector,\n  toggleOverlayType,\n  appendOverlay,\n  showOverlay,\n  hideOverlay,\n  getCurrentOpen,\n  removeOverlay,\n};\n","import { isHTMLElement, getElementStyle } from '@thednp/shorty';\n\n/**\n * @param element target\n * @returns the check result\n */\nconst isVisible = (element: HTMLElement) => {\n  return isHTMLElement(element) && getElementStyle(element, 'visibility') !== 'hidden' && element.offsetParent !== null;\n};\nexport default isVisible;\n","/* Native JavaScript for Bootstrap 5 | Modal\n-------------------------------------------- */\nimport {\n  keyEscape,\n  getElementTransitionDuration,\n  removeAttribute,\n  setAttribute,\n  keydownEvent,\n  mouseclickEvent,\n  resizeEvent,\n  ariaModal,\n  ariaHidden,\n  getInstance,\n  isRTL,\n  removeClass,\n  hasClass,\n  addClass,\n  closest,\n  querySelectorAll,\n  querySelector,\n  getDocumentElement,\n  getDocumentBody,\n  getDocument,\n  getWindow,\n  CSS4Declaration,\n  setElementStyle,\n  createCustomEvent,\n  emulateTransitionEnd,\n  passiveHandler,\n  dispatchEvent,\n  focus,\n  Timer,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport dataBsToggle from '../strings/dataBsToggle';\nimport dataBsDismiss from '../strings/dataBsDismiss';\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport modalString from '../strings/modalString';\nimport modalComponent from '../strings/modalComponent';\nimport offcanvasComponent from '../strings/offcanvasComponent';\n\nimport getTargetElement from '../util/getTargetElement';\nimport { setScrollbar, measureScrollbar } from '../util/scrollbar';\nimport {\n  overlay,\n  modalActiveSelector,\n  toggleOverlayType,\n  appendOverlay,\n  showOverlay,\n  hideOverlay,\n  getCurrentOpen,\n  removeOverlay,\n} from '../util/backdrop';\nimport isVisible from '../util/isVisible';\nimport BaseComponent from './base-component';\nimport { ModalOptions, ModalEvent } from '../interface/modal';\nimport { hasPopup } from '../util/popupContainer';\n\n// MODAL PRIVATE GC\n// ================\nconst modalSelector = `.${modalString}`;\nconst modalToggleSelector = `[${dataBsToggle}=\"${modalString}\"]`;\nconst modalDismissSelector = `[${dataBsDismiss}=\"${modalString}\"]`;\nconst modalStaticClass = `${modalString}-static`;\n\nconst modalDefaults = {\n  backdrop: true,\n  keyboard: true,\n};\n\n/**\n * Static method which returns an existing `Modal` instance associated\n * to a target `Element`.\n */\nconst getModalInstance = (element: HTMLElement) => getInstance<Modal>(element, modalComponent);\n\n/**\n * A `Modal` initialization callback.\n */\nconst modalInitCallback = (element: HTMLElement) => new Modal(element);\n\n// MODAL CUSTOM EVENTS\n// ===================\nconst showModalEvent = createCustomEvent<ModalEvent>(`show.bs.${modalString}`);\nconst shownModalEvent = createCustomEvent<ModalEvent>(`shown.bs.${modalString}`);\nconst hideModalEvent = createCustomEvent<ModalEvent>(`hide.bs.${modalString}`);\nconst hiddenModalEvent = createCustomEvent<ModalEvent>(`hidden.bs.${modalString}`);\n\n// MODAL PRIVATE METHODS\n// =====================\n/**\n * Applies special style for the `<body>` and fixed elements\n * when a modal instance is shown to the user.\n *\n * @param self the `Modal` instance\n */\nconst setModalScrollbar = (self: Modal) => {\n  const { element } = self;\n  const scrollbarWidth = measureScrollbar(element);\n  const { clientHeight, scrollHeight } = getDocumentElement(element);\n  const { clientHeight: modalHeight, scrollHeight: modalScrollHeight } = element;\n  const modalOverflow = modalHeight !== modalScrollHeight;\n\n  /* istanbul ignore else */\n  if (!modalOverflow && scrollbarWidth) {\n    const pad = !isRTL(element) ? 'paddingRight' : /* istanbul ignore next */ 'paddingLeft';\n    const padStyle = {} as Partial<CSS4Declaration>;\n    padStyle[pad] = `${scrollbarWidth}px`;\n    setElementStyle(element, padStyle);\n  }\n  setScrollbar(element, modalOverflow || clientHeight !== scrollHeight);\n};\n\n/**\n * Toggles on/off the listeners of events that close the modal.\n *\n * @param self the `Modal` instance\n * @param add when `true`, event listeners are added\n */\nconst toggleModalDismiss = (self: Modal, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { element, update } = self;\n  action(element, mouseclickEvent, modalDismissHandler as EventListener);\n  action(getWindow(element), resizeEvent, update, passiveHandler);\n  action(getDocument(element), keydownEvent, modalKeyHandler as EventListener);\n};\n\n/**\n * Toggles on/off the `click` event listener of the `Modal` instance.\n *\n * @param self the `Modal` instance\n * @param add when `true`, event listener is added\n */\nconst toggleModalHandler = (self: Modal, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { triggers } = self;\n\n  /* istanbul ignore else */\n  if (triggers.length) {\n    triggers.forEach(btn => action(btn, mouseclickEvent, modalClickHandler as EventListener));\n  }\n};\n\n/**\n * Executes after a modal is hidden to the user.\n *\n * @param self the `Modal` instance\n */\nconst afterModalHide = (self: Modal) => {\n  const { triggers, element, relatedTarget } = self;\n  removeOverlay(element);\n  setElementStyle(element, { paddingRight: '', display: '' });\n  toggleModalDismiss(self);\n\n  const focusElement = showModalEvent.relatedTarget || triggers.find(isVisible);\n  /* istanbul ignore else */\n  if (focusElement) focus(focusElement as HTMLElement);\n\n  hiddenModalEvent.relatedTarget = relatedTarget as HTMLElement | undefined;\n  dispatchEvent(element, hiddenModalEvent);\n};\n\n/**\n * Executes after a modal is shown to the user.\n *\n * @param self the `Modal` instance\n */\nconst afterModalShow = (self: Modal) => {\n  const { element, relatedTarget } = self;\n  focus(element);\n  toggleModalDismiss(self, true);\n\n  shownModalEvent.relatedTarget = relatedTarget as HTMLElement | undefined;\n  dispatchEvent(element, shownModalEvent);\n};\n\n/**\n * Executes before a modal is shown to the user.\n *\n * @param self the `Modal` instance\n */\nconst beforeModalShow = (self: Modal) => {\n  const { element, hasFade } = self;\n  setElementStyle(element, { display: 'block' });\n\n  setModalScrollbar(self);\n  /* istanbul ignore else */\n  if (!getCurrentOpen(element)) {\n    setElementStyle(getDocumentBody(element), { overflow: 'hidden' });\n  }\n\n  addClass(element, showClass);\n  removeAttribute(element, ariaHidden);\n  setAttribute(element, ariaModal, 'true');\n\n  if (hasFade) emulateTransitionEnd(element, () => afterModalShow(self));\n  else afterModalShow(self);\n};\n\n/**\n * Executes before a modal is hidden to the user.\n *\n * @param self the `Modal` instance\n */\nconst beforeModalHide = (self: Modal) => {\n  const { element, options, hasFade } = self;\n\n  // callback can also be the transitionEvent object, we wanna make sure it's not\n  // call is not forced and overlay is visible\n  if (options.backdrop && hasFade && hasClass(overlay, showClass) && !getCurrentOpen(element)) {\n    // AND no modal is visible\n    hideOverlay();\n    emulateTransitionEnd(overlay, () => afterModalHide(self));\n  } else {\n    afterModalHide(self);\n  }\n};\n\n// MODAL EVENT HANDLERS\n// ====================\n/**\n * Handles the `click` event listener for modal.\n *\n * @param e the `Event` object\n */\nconst modalClickHandler = (e: MouseEvent) => {\n  const { target } = e;\n\n  const trigger = target && closest(target as HTMLElement, modalToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getModalInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    /* istanbul ignore else */\n    if (trigger && trigger.tagName === 'A') e.preventDefault();\n    self.relatedTarget = trigger;\n    self.toggle();\n  }\n};\n\n/**\n * Handles the `keydown` event listener for modal\n * to hide the modal when user type the `ESC` key.\n *\n * @param e the `Event` object\n */\nconst modalKeyHandler = ({ code, target }: KeyboardEvent) => {\n  const element = querySelector(modalActiveSelector, getDocument(target as Node));\n  const self = element && getModalInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    const { options } = self;\n    /* istanbul ignore else */\n    if (\n      options.keyboard &&\n      code === keyEscape && // the keyboard option is enabled and the key is 27\n      hasClass(element, showClass)\n    ) {\n      // the modal is not visible\n      self.relatedTarget = null;\n      self.hide();\n    }\n  }\n};\n\n/**\n * Handles the `click` event listeners that hide the modal.\n *\n * @param e the `Event` object\n */\nfunction modalDismissHandler(this: HTMLElement, e: MouseEvent) {\n  const self = getModalInstance(this);\n\n  // this timer is needed\n  /* istanbul ignore else: must have a filter */\n  if (self && !Timer.get(this)) {\n    const { options, isStatic, modalDialog } = self;\n    const { backdrop } = options;\n    const { target } = e;\n\n    const selectedText = getDocument(this)?.getSelection()?.toString().length;\n    const targetInsideDialog = modalDialog.contains(target as HTMLElement);\n    const dismiss = target && closest(target as HTMLElement, modalDismissSelector);\n\n    /* istanbul ignore else */\n    if (isStatic && !targetInsideDialog) {\n      Timer.set(\n        this,\n        () => {\n          addClass(this, modalStaticClass);\n          emulateTransitionEnd(modalDialog, () => staticTransitionEnd(self));\n        },\n        17,\n      );\n    } else if (dismiss || (!selectedText && !isStatic && !targetInsideDialog && backdrop)) {\n      self.relatedTarget = dismiss || null;\n      self.hide();\n      e.preventDefault();\n    }\n  }\n}\n\n/**\n * Handles the `transitionend` event listeners for `Modal`.\n *\n * @param self the `Modal` instance\n */\nconst staticTransitionEnd = (self: Modal) => {\n  const { element, modalDialog } = self;\n  const duration = (getElementTransitionDuration(modalDialog) || 0) + 17;\n  removeClass(element, modalStaticClass);\n  // user must wait for zoom out transition\n  Timer.set(element, () => Timer.clear(element), duration);\n};\n\n// MODAL DEFINITION\n// ================\n/** Returns a new `Modal` instance. */\nexport default class Modal extends BaseComponent {\n  static selector = modalSelector;\n  static init = modalInitCallback;\n  static getInstance = getModalInstance;\n  declare options: ModalOptions;\n  declare modalDialog: HTMLElement;\n  declare triggers: HTMLElement[];\n  declare isStatic: boolean;\n  declare hasFade: boolean;\n  declare relatedTarget: HTMLElement | null;\n\n  /**\n   * @param target usually the `.modal` element\n   * @param config instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<ModalOptions>) {\n    super(target, config);\n\n    // the modal\n    const { element } = this;\n\n    // the modal-dialog\n    const modalDialog = querySelector(`.${modalString}-dialog`, element);\n\n    /* istanbul ignore else */\n    if (modalDialog) {\n      this.modalDialog = modalDialog;\n      // modal can have multiple triggering elements\n      this.triggers = [...querySelectorAll(modalToggleSelector, getDocument(element))].filter(\n        btn => getTargetElement(btn) === element,\n      );\n\n      // additional internals\n      this.isStatic = this.options.backdrop === 'static';\n      this.hasFade = hasClass(element, fadeClass);\n      this.relatedTarget = null;\n\n      // attach event listeners\n      toggleModalHandler(this, true);\n    }\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return modalComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return modalDefaults;\n  }\n\n  // MODAL PUBLIC METHODS\n  // ====================\n  /** Toggles the visibility of the modal. */\n  toggle() {\n    if (hasClass(this.element, showClass)) this.hide();\n    else this.show();\n  }\n\n  /** Shows the modal to the user. */\n  show() {\n    const { element, options, hasFade, relatedTarget } = this;\n    const { backdrop } = options;\n    let overlayDelay = 0;\n\n    if (!hasClass(element, showClass)) {\n      showModalEvent.relatedTarget = relatedTarget || undefined;\n      dispatchEvent(element, showModalEvent);\n      if (!showModalEvent.defaultPrevented) {\n        // we elegantly hide any opened modal/offcanvas\n        const currentOpen = getCurrentOpen(element);\n\n        if (currentOpen && currentOpen !== element) {\n          const that =\n            getModalInstance(currentOpen) ||\n            /* istanbul ignore next */\n            getInstance<typeof BaseComponent & { hide: () => void }>(currentOpen, offcanvasComponent);\n          if (that) that.hide();\n        }\n        if (backdrop) {\n          if (!hasPopup(overlay)) {\n            appendOverlay(element, hasFade, true);\n          } else {\n            toggleOverlayType(true);\n          }\n\n          overlayDelay = getElementTransitionDuration(overlay);\n          showOverlay();\n          setTimeout(() => beforeModalShow(this), overlayDelay);\n        } else {\n          beforeModalShow(this);\n          /* istanbul ignore else */\n          if (currentOpen && hasClass(overlay, showClass)) {\n            hideOverlay();\n          }\n        }\n      }\n    }\n  }\n\n  /** Hide the modal from the user. */\n  hide() {\n    const { element, hasFade, relatedTarget } = this;\n\n    if (hasClass(element, showClass)) {\n      hideModalEvent.relatedTarget = relatedTarget || undefined;\n      dispatchEvent(element, hideModalEvent);\n\n      if (!hideModalEvent.defaultPrevented) {\n        removeClass(element, showClass);\n        setAttribute(element, ariaHidden, 'true');\n        removeAttribute(element, ariaModal);\n\n        /* istanbul ignore else */\n        if (hasFade) {\n          emulateTransitionEnd(element, () => beforeModalHide(this));\n        } else {\n          beforeModalHide(this);\n        }\n      }\n    }\n  }\n\n  /**\n   * Updates the modal layout.\n   */\n  update = () => {\n    /* istanbul ignore else */\n    if (hasClass(this.element, showClass)) setModalScrollbar(this);\n  };\n\n  /** Removes the `Modal` component from target element. */\n  dispose() {\n    const clone = { ...this };\n    const { element, modalDialog } = clone;\n    const callback = () => setTimeout(() => super.dispose(), 17);\n    toggleModalHandler(clone);\n\n    // use transitionend callback\n    this.hide();\n    /* istanbul ignore else */\n    if (hasClass(element, 'fade')) {\n      emulateTransitionEnd(modalDialog, callback);\n    } else {\n      callback();\n    }\n  }\n}\n","/* Native JavaScript for Bootstrap 5 | OffCanvas\n------------------------------------------------ */\nimport {\n  ariaHidden,\n  addClass,\n  hasClass,\n  closest,\n  querySelectorAll,\n  querySelector,\n  removeAttribute,\n  setAttribute,\n  keyEscape,\n  keydownEvent,\n  mouseclickEvent,\n  ariaModal,\n  emulateTransitionEnd,\n  dispatchEvent,\n  getElementTransitionDuration,\n  getDocumentBody,\n  getDocumentElement,\n  getDocument,\n  removeClass,\n  setElementStyle,\n  createCustomEvent,\n  focus,\n  getInstance,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport dataBsDismiss from '../strings/dataBsDismiss';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport showClass from '../strings/showClass';\nimport offcanvasString from '../strings/offcanvasString';\nimport offcanvasComponent from '../strings/offcanvasComponent';\nimport modalComponent from '../strings/modalComponent';\n\nimport getTargetElement from '../util/getTargetElement';\nimport isVisible from '../util/isVisible';\nimport { setScrollbar } from '../util/scrollbar';\nimport { hasPopup } from '../util/popupContainer';\nimport {\n  overlay,\n  offcanvasActiveSelector,\n  toggleOverlayType,\n  appendOverlay,\n  showOverlay,\n  hideOverlay,\n  getCurrentOpen,\n  removeOverlay,\n} from '../util/backdrop';\nimport BaseComponent from './base-component';\nimport { OffcanvasOptions, OffcanvasEvent } from '../interface/offcanvas';\n\n// OFFCANVAS PRIVATE GC\n// ====================\nconst offcanvasSelector = `.${offcanvasString}`;\nconst offcanvasToggleSelector = `[${dataBsToggle}=\"${offcanvasString}\"]`;\nconst offcanvasDismissSelector = `[${dataBsDismiss}=\"${offcanvasString}\"]`;\nconst offcanvasTogglingClass = `${offcanvasString}-toggling`;\n\nconst offcanvasDefaults = {\n  backdrop: true, // boolean\n  keyboard: true, // boolean\n  scroll: false, // boolean\n};\n\n/**\n * Static method which returns an existing `Offcanvas` instance associated\n * to a target `Element`.\n */\nconst getOffcanvasInstance = (element: HTMLElement) => getInstance<Offcanvas>(element, offcanvasComponent);\n\n/**\n * An `Offcanvas` initialization callback.\n */\nconst offcanvasInitCallback = (element: HTMLElement) => new Offcanvas(element);\n\n// OFFCANVAS CUSTOM EVENTS\n// =======================\nconst showOffcanvasEvent = createCustomEvent<OffcanvasEvent>(`show.bs.${offcanvasString}`);\nconst shownOffcanvasEvent = createCustomEvent<OffcanvasEvent>(`shown.bs.${offcanvasString}`);\nconst hideOffcanvasEvent = createCustomEvent<OffcanvasEvent>(`hide.bs.${offcanvasString}`);\nconst hiddenOffcanvasEvent = createCustomEvent<OffcanvasEvent>(`hidden.bs.${offcanvasString}`);\n\n// OFFCANVAS PRIVATE METHODS\n// =========================\n/**\n * Sets additional style for the `<body>` and other elements\n * when showing an offcanvas to the user.\n *\n * @param self the `Offcanvas` instance\n */\nconst setOffCanvasScrollbar = (self: Offcanvas) => {\n  const { element } = self;\n  const { clientHeight, scrollHeight } = getDocumentElement(element);\n  setScrollbar(element, clientHeight !== scrollHeight);\n};\n\n/**\n * Toggles on/off the `click` event listeners.\n *\n * @param self the `Offcanvas` instance\n * @param add when *true*, listeners are added\n */\nconst toggleOffcanvasEvents = (self: Offcanvas, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  self.triggers.forEach(btn => action(btn, mouseclickEvent, offcanvasTriggerHandler as EventListener));\n};\n\n/**\n * Toggles on/off the listeners of the events that close the offcanvas.\n *\n * @param self the `Offcanvas` instance\n * @param add when *true* listeners are added\n */\nconst toggleOffCanvasDismiss = (self: Offcanvas, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const doc = getDocument(self.element);\n  action(doc, keydownEvent, offcanvasKeyDismissHandler as EventListener);\n  action(doc, mouseclickEvent, offcanvasDismissHandler as EventListener);\n};\n\n/**\n * Executes before showing the offcanvas.\n *\n * @param self the `Offcanvas` instance\n */\nconst beforeOffcanvasShow = (self: Offcanvas) => {\n  const { element, options } = self;\n\n  /* istanbul ignore else */\n  if (!options.scroll) {\n    setOffCanvasScrollbar(self);\n    setElementStyle(getDocumentBody(element), { overflow: 'hidden' });\n  }\n\n  addClass(element, offcanvasTogglingClass);\n  addClass(element, showClass);\n  setElementStyle(element, { visibility: 'visible' });\n\n  emulateTransitionEnd(element, () => showOffcanvasComplete(self));\n};\n\n/**\n * Executes before hiding the offcanvas.\n *\n * @param self the `Offcanvas` instance\n */\nconst beforeOffcanvasHide = (self: Offcanvas) => {\n  const { element, options } = self;\n  const currentOpen = getCurrentOpen(element);\n\n  element.blur();\n\n  if (!currentOpen && options.backdrop && hasClass(overlay, showClass)) {\n    hideOverlay();\n    emulateTransitionEnd(overlay, () => hideOffcanvasComplete(self));\n  } else hideOffcanvasComplete(self);\n};\n\n// OFFCANVAS EVENT HANDLERS\n// ========================\n/**\n * Handles the `click` event listeners.\n *\n * @param e the `Event` object\n */\nconst offcanvasTriggerHandler = (e: MouseEvent) => {\n  const trigger = closest(e.target as HTMLElement, offcanvasToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getOffcanvasInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    self.relatedTarget = trigger;\n    self.toggle();\n    /* istanbul ignore else */\n    if (trigger && trigger.tagName === 'A') {\n      e.preventDefault();\n    }\n  }\n};\n\n/**\n * Handles the event listeners that close the offcanvas.\n *\n * @param e the `Event` object\n */\nconst offcanvasDismissHandler = (e: MouseEvent) => {\n  const { target } = e;\n  const element = querySelector(offcanvasActiveSelector, getDocument(target as Node));\n  const offCanvasDismiss = querySelector(offcanvasDismissSelector, element as HTMLElement | undefined);\n  const self = element && getOffcanvasInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    const { options, triggers } = self;\n    const { backdrop } = options;\n    const trigger = closest(target as HTMLElement, offcanvasToggleSelector);\n    const selection = getDocument(element).getSelection();\n\n    /* istanbul ignore else: a filter is required here */\n    if (!overlay.contains(target as HTMLElement) || backdrop !== 'static') {\n      /* istanbul ignore else */\n      if (\n        !(selection && selection.toString().length) &&\n        ((!element.contains(target as HTMLElement) &&\n          backdrop &&\n          /* istanbul ignore next */ (!trigger || triggers.includes(target as HTMLElement))) ||\n          (offCanvasDismiss && offCanvasDismiss.contains(target as HTMLElement)))\n      ) {\n        self.relatedTarget =\n          offCanvasDismiss && offCanvasDismiss.contains(target as HTMLElement) ? offCanvasDismiss : null;\n        self.hide();\n      }\n\n      /* istanbul ignore next */\n      if (trigger && trigger.tagName === 'A') e.preventDefault();\n    }\n  }\n};\n\n/**\n * Handles the `keydown` event listener for offcanvas\n * to hide it when user type the `ESC` key.\n *\n * @param e the `Event` object\n */\nconst offcanvasKeyDismissHandler = ({ code, target }: KeyboardEvent) => {\n  const element = querySelector(offcanvasActiveSelector, getDocument(target as Node));\n  const self = element && getOffcanvasInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    /* istanbul ignore else */\n    if (self.options.keyboard && code === keyEscape) {\n      self.relatedTarget = null;\n      self.hide();\n    }\n  }\n};\n\n/**\n * Handles the `transitionend` when showing the offcanvas.\n *\n * @param self the `Offcanvas` instance\n */\nconst showOffcanvasComplete = (self: Offcanvas) => {\n  const { element } = self;\n  removeClass(element, offcanvasTogglingClass);\n\n  removeAttribute(element, ariaHidden);\n  setAttribute(element, ariaModal, 'true');\n  setAttribute(element, 'role', 'dialog');\n\n  dispatchEvent(element, shownOffcanvasEvent);\n\n  toggleOffCanvasDismiss(self, true);\n  focus(element);\n};\n\n/**\n * Handles the `transitionend` when hiding the offcanvas.\n *\n * @param self the `Offcanvas` instance\n */\nconst hideOffcanvasComplete = (self: Offcanvas) => {\n  const { element, triggers } = self;\n\n  setAttribute(element, ariaHidden, 'true');\n  removeAttribute(element, ariaModal);\n  removeAttribute(element, 'role');\n  setElementStyle(element, { visibility: '' });\n\n  const visibleTrigger = showOffcanvasEvent.relatedTarget || triggers.find(isVisible);\n  /* istanbul ignore else */\n  if (visibleTrigger) focus(visibleTrigger as HTMLElement);\n\n  removeOverlay(element);\n\n  dispatchEvent(element, hiddenOffcanvasEvent);\n  removeClass(element, offcanvasTogglingClass);\n\n  // must check for open instances\n  if (!getCurrentOpen(element)) {\n    toggleOffCanvasDismiss(self);\n  }\n};\n\n// OFFCANVAS DEFINITION\n// ====================\n/** Returns a new `Offcanvas` instance. */\nexport default class Offcanvas extends BaseComponent {\n  static selector = offcanvasSelector;\n  static init = offcanvasInitCallback;\n  static getInstance = getOffcanvasInstance;\n  declare options: OffcanvasOptions;\n  declare triggers: HTMLElement[];\n  declare relatedTarget: HTMLElement | null;\n\n  /**\n   * @param target usually an `.offcanvas` element\n   * @param config instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<OffcanvasOptions>) {\n    super(target, config);\n\n    // instance element\n    const { element } = this;\n\n    // all the triggering buttons\n    this.triggers = [...querySelectorAll(offcanvasToggleSelector, getDocument(element))].filter(\n      btn => getTargetElement(btn) === element,\n    );\n\n    // additional instance property\n    this.relatedTarget = null;\n\n    // attach event listeners\n    toggleOffcanvasEvents(this, true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return offcanvasComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return offcanvasDefaults;\n  }\n\n  // OFFCANVAS PUBLIC METHODS\n  // ========================\n  /** Shows or hides the offcanvas from the user. */\n  toggle() {\n    if (hasClass(this.element, showClass)) this.hide();\n    else this.show();\n  }\n\n  /** Shows the offcanvas to the user. */\n  show() {\n    const { element, options, relatedTarget } = this;\n    let overlayDelay = 0;\n\n    if (!hasClass(element, showClass)) {\n      showOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n      shownOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n      dispatchEvent(element, showOffcanvasEvent);\n\n      if (!showOffcanvasEvent.defaultPrevented) {\n        // we elegantly hide any opened modal/offcanvas\n        const currentOpen = getCurrentOpen(element);\n        if (currentOpen && currentOpen !== element) {\n          const that =\n            getOffcanvasInstance(currentOpen) ||\n            /* istanbul ignore next */\n            getInstance<typeof BaseComponent & { hide: () => void }>(currentOpen, modalComponent);\n          if (that) that.hide();\n        }\n\n        if (options.backdrop) {\n          if (!hasPopup(overlay)) {\n            appendOverlay(element, true);\n          } else {\n            toggleOverlayType();\n          }\n\n          overlayDelay = getElementTransitionDuration(overlay);\n          showOverlay();\n\n          setTimeout(() => beforeOffcanvasShow(this), overlayDelay);\n        } else {\n          beforeOffcanvasShow(this);\n          /* istanbul ignore next - this test was done on Modal */\n          if (currentOpen && hasClass(overlay, showClass)) {\n            hideOverlay();\n          }\n        }\n      }\n    }\n  }\n\n  /** Hides the offcanvas from the user. */\n  hide() {\n    const { element, relatedTarget } = this;\n\n    if (hasClass(element, showClass)) {\n      hideOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n      hiddenOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n      dispatchEvent(element, hideOffcanvasEvent);\n      if (!hideOffcanvasEvent.defaultPrevented) {\n        addClass(element, offcanvasTogglingClass);\n        removeClass(element, showClass);\n        beforeOffcanvasHide(this);\n      }\n    }\n  }\n\n  /** Removes the `Offcanvas` from the target element. */\n  dispose() {\n    const clone = { ...this };\n    const { element, options } = clone;\n    const delay = options.backdrop ? getElementTransitionDuration(overlay) : /* istanbul ignore next */ 0;\n    const callback = () => setTimeout(() => super.dispose(), delay + 17);\n    toggleOffcanvasEvents(clone);\n\n    this.hide();\n    if (hasClass(element, showClass)) {\n      emulateTransitionEnd(element, callback);\n      /* istanbul ignore next */\n    } else {\n      callback();\n    }\n  }\n}\n","/** @type {string} */\nconst popoverString = 'popover';\nexport default popoverString;\n","/** @type {string} */\nconst popoverComponent = 'Popover';\nexport default popoverComponent;\n","/** @type {string} */\nconst tooltipString = 'tooltip';\nexport default tooltipString;\n","import tooltipString from '../strings/tooltipString';\n\n/**\n * Returns a template for Popover / Tooltip.\n *\n * @param tipType the expected markup type\n * @returns the template markup\n */\nconst getTipTemplate = (tipType: string) => {\n  const isTooltip = tipType === tooltipString;\n  const bodyClass = isTooltip ? `${tipType}-inner` : `${tipType}-body`;\n  const header = !isTooltip ? `<h3 class=\"${tipType}-header\"></h3>` : '';\n  const arrow = `<div class=\"${tipType}-arrow\"></div>`;\n  const body = `<div class=\"${bodyClass}\"></div>`;\n  return `<div class=\"${tipType}\" role=\"${tooltipString}\">${header + arrow + body}</div>`;\n};\n\nexport default getTipTemplate;\n","const tipClassPositions = {\n  top: 'top',\n  bottom: 'bottom',\n  left: 'start',\n  right: 'end',\n};\n\nexport default tipClassPositions;\n","import {\n  isHTMLElement,\n  setElementStyle,\n  getDocumentElement,\n  getBoundingClientRect,\n  getElementStyle,\n  isRTL,\n  toLowerCase,\n  createCustomEvent,\n  dispatchEvent,\n} from '@thednp/shorty';\n\nimport popoverComponent from '../strings/popoverComponent';\nimport tipClassPositions from './tipClassPositions';\nimport Tooltip from '../components/tooltip';\nimport type { TooltipEvent } from '../interface/tooltip';\nimport type { PopoverEvent } from '../interface/popover';\n\n/**\n * Style popovers and tooltips.\n *\n * @param self the `Popover` / `Tooltip` instance\n */\nconst styleTip = <T extends Tooltip>(self: T) => {\n  const tipClasses = /\\b(top|bottom|start|end)+/;\n  const { element, tooltip, container, options, arrow } = self;\n\n  /* istanbul ignore else */\n  if (tooltip) {\n    const tipPositions = { ...tipClassPositions };\n    const RTL = isRTL(element);\n\n    // reset tooltip style (top: 0, left: 0 works best)\n    setElementStyle(tooltip, {\n      // top: '0px', left: '0px', right: '', bottom: '',\n      top: '',\n      left: '',\n      right: '',\n      bottom: '',\n    });\n    const isPopover = self.name === popoverComponent;\n    const { offsetWidth: tipWidth, offsetHeight: tipHeight } = tooltip;\n    const { clientWidth: htmlcw, clientHeight: htmlch, offsetWidth: htmlow } = getDocumentElement(element);\n    let { placement } = options;\n    const { clientWidth: parentCWidth, offsetWidth: parentOWidth } = container as HTMLElement;\n    const parentPosition = getElementStyle(container as HTMLElement, 'position');\n    const fixedParent = parentPosition === 'fixed';\n    const scrollbarWidth = fixedParent ? Math.abs(parentCWidth - parentOWidth) : Math.abs(htmlcw - htmlow);\n    const leftBoundry = RTL && fixedParent ? /* istanbul ignore next */ scrollbarWidth : 0;\n    const rightBoundry = htmlcw - (!RTL ? scrollbarWidth : 0) - 1;\n    const {\n      width: elemWidth,\n      height: elemHeight,\n      left: elemRectLeft,\n      right: elemRectRight,\n      top: elemRectTop,\n    } = getBoundingClientRect(element, true);\n    const { x, y } = {\n      x: elemRectLeft,\n      y: elemRectTop,\n    };\n    // reset arrow style\n    setElementStyle(arrow as HTMLElement, {\n      top: '',\n      left: '',\n      right: '',\n      bottom: '',\n    });\n    let topPosition: number | string = 0;\n    let bottomPosition: number | string = '';\n    let leftPosition: number | string = 0;\n    let rightPosition: number | string = '';\n    let arrowTop: number | string = '';\n    let arrowLeft: number | string = '';\n    let arrowRight: number | string = '';\n\n    const arrowWidth = (arrow as HTMLElement).offsetWidth || 0;\n    const arrowHeight = (arrow as HTMLElement).offsetHeight || 0;\n    const arrowAdjust = arrowWidth / 2;\n\n    // check placement\n    let topExceed = elemRectTop - tipHeight - arrowHeight < 0;\n    let bottomExceed = elemRectTop + tipHeight + elemHeight + arrowHeight >= htmlch;\n    let leftExceed = elemRectLeft - tipWidth - arrowWidth < leftBoundry;\n    let rightExceed = elemRectLeft + tipWidth + elemWidth + arrowWidth >= rightBoundry;\n\n    const horizontals = ['left', 'right'];\n    const verticals = ['top', 'bottom'];\n\n    topExceed = horizontals.includes(placement)\n      ? elemRectTop + elemHeight / 2 - tipHeight / 2 - arrowHeight < 0\n      : topExceed;\n    bottomExceed = horizontals.includes(placement)\n      ? elemRectTop + tipHeight / 2 + elemHeight / 2 + arrowHeight >= htmlch\n      : bottomExceed;\n    leftExceed = verticals.includes(placement) ? elemRectLeft + elemWidth / 2 - tipWidth / 2 < leftBoundry : leftExceed;\n    rightExceed = verticals.includes(placement)\n      ? elemRectLeft + tipWidth / 2 + elemWidth / 2 >= rightBoundry\n      : rightExceed;\n\n    // first remove side positions if both left and right limits are exceeded\n    // we usually fall back to top|bottom\n    placement = horizontals.includes(placement) && leftExceed && rightExceed ? 'top' : placement;\n    // recompute placement\n    placement = placement === 'top' && topExceed ? 'bottom' : placement;\n    placement = placement === 'bottom' && bottomExceed ? 'top' : placement;\n    placement = placement === 'left' && leftExceed ? 'right' : placement;\n    placement = placement === 'right' && rightExceed ? /* istanbul ignore next */ 'left' : placement;\n\n    // update tooltip/popover class\n    if (!tooltip.className.includes(placement)) {\n      tooltip.className = tooltip.className.replace(tipClasses, tipPositions[placement]);\n    }\n\n    // compute tooltip / popover coordinates\n    /* istanbul ignore else */\n    if (horizontals.includes(placement)) {\n      // secondary|side positions\n      if (placement === 'left') {\n        // LEFT\n        leftPosition = x - tipWidth - (isPopover ? arrowWidth : 0);\n      } else {\n        // RIGHT\n        leftPosition = x + elemWidth + (isPopover ? arrowWidth : 0);\n      }\n\n      // adjust top and arrow\n      if (topExceed && bottomExceed) {\n        topPosition = 0;\n        bottomPosition = 0;\n        arrowTop = elemRectTop + elemHeight / 2 - arrowHeight / 2;\n      } else if (topExceed) {\n        topPosition = y;\n        bottomPosition = '';\n        arrowTop = elemHeight / 2 - arrowWidth;\n      } else if (bottomExceed) {\n        topPosition = y - tipHeight + elemHeight;\n        bottomPosition = '';\n        arrowTop = tipHeight - elemHeight / 2 - arrowWidth;\n      } else {\n        topPosition = y - tipHeight / 2 + elemHeight / 2;\n        arrowTop = tipHeight / 2 - arrowHeight / 2;\n      }\n    } else if (verticals.includes(placement)) {\n      if (placement === 'top') {\n        topPosition = y - tipHeight - (isPopover ? arrowHeight : 0);\n      } else {\n        // BOTTOM\n        topPosition = y + elemHeight + (isPopover ? arrowHeight : 0);\n      }\n\n      // adjust left | right and also the arrow\n      if (leftExceed) {\n        leftPosition = 0;\n        arrowLeft = x + elemWidth / 2 - arrowAdjust;\n      } else if (rightExceed) {\n        leftPosition = 'auto';\n        rightPosition = 0;\n        arrowRight = elemWidth / 2 + rightBoundry - elemRectRight - arrowAdjust;\n      } else {\n        leftPosition = x - tipWidth / 2 + elemWidth / 2;\n        arrowLeft = tipWidth / 2 - arrowAdjust;\n      }\n    }\n\n    // apply style to tooltip/popover\n    setElementStyle(tooltip, {\n      top: `${topPosition}px`,\n      bottom: bottomPosition === '' ? '' : `${bottomPosition}px`,\n      left: leftPosition === 'auto' ? leftPosition : `${leftPosition}px`,\n      right: rightPosition !== '' ? `${rightPosition}px` : '',\n    });\n\n    // update arrow placement\n    /* istanbul ignore else */\n    if (isHTMLElement(arrow)) {\n      if (arrowTop !== '') {\n        arrow.style.top = `${arrowTop}px`;\n      }\n      if (arrowLeft !== '') {\n        arrow.style.left = `${arrowLeft}px`;\n      } else if (arrowRight !== '') {\n        arrow.style.right = `${arrowRight}px`;\n      }\n    }\n    const updatedTooltipEvent = createCustomEvent<TooltipEvent | PopoverEvent>(`updated.bs.${toLowerCase(self.name)}`);\n    dispatchEvent(element, updatedTooltipEvent);\n  }\n};\n\nexport default styleTip;\n","import getTipTemplate from './getTipTemplate';\nimport tooltipString from '../strings/tooltipString';\nimport { TooltipOptions } from '../interface/tooltip';\n\nconst tooltipDefaults: TooltipOptions = {\n  template: getTipTemplate(tooltipString),\n  title: '',\n  customClass: '',\n  trigger: 'hover focus',\n  placement: 'top',\n  sanitizeFn: undefined,\n  animation: true,\n  delay: 200,\n  container: document.body,\n  content: '',\n  dismissible: false,\n  btnClose: '',\n};\nexport default tooltipDefaults;\n","/**\n * Global namespace for `data-bs-title` attribute.\n */\nconst dataOriginalTitle = 'data-original-title';\nexport default dataOriginalTitle;\n","/** @type {string} */\nconst tooltipComponent = 'Tooltip';\nexport default tooltipComponent;\n","import { isNode, isArray, isFunction, isString, isNodeList, isHTMLElement } from '@thednp/shorty';\n\n/**\n * Append an existing `Element` to Popover / Tooltip component or HTML\n * markup string to be parsed & sanitized to be used as popover / tooltip content.\n *\n * @param element target\n * @param content the `Element` to append / string\n * @param sanitizeFn a function to sanitize string content\n */\nconst setHtml = (element: HTMLElement, content: Node[] | Node | string, sanitizeFn?: (s: string) => string) => {\n  /* istanbul ignore else */\n  if (isString(content) && content.length) {\n    let dirty = content.trim(); // fixing #233\n    if (isFunction(sanitizeFn)) dirty = sanitizeFn(dirty);\n\n    const domParser = new DOMParser();\n    const tempDocument = domParser.parseFromString(dirty, 'text/html');\n    element.append(...[...tempDocument.body.childNodes]);\n  } else if (isHTMLElement(content)) {\n    element.append(content);\n  } else if (isNodeList(content) || (isArray(content) && content.every(isNode))) {\n    element.append(...[...content]);\n  }\n};\nexport default setHtml;\n","/* Native JavaScript for Bootstrap 5 | Tooltip\n---------------------------------------------- */\nimport {\n  ariaDescribedBy,\n  focusoutEvent,\n  focusinEvent,\n  focusEvent,\n  mouseleaveEvent,\n  mouseenterEvent,\n  mousedownEvent,\n  mouseclickEvent,\n  closest,\n  getUID,\n  getDocument,\n  getWindow,\n  removeAttribute,\n  getAttribute,\n  setAttribute,\n  hasAttribute,\n  touchstartEvent,\n  resizeEvent,\n  scrollEvent,\n  mousehoverEvent,\n  toLowerCase,\n  focus,\n  Timer,\n  emulateTransitionEnd,\n  passiveHandler,\n  dispatchEvent,\n  isApple,\n  getInstance,\n  ObjectAssign,\n  createCustomEvent,\n  removeClass,\n  hasClass,\n  addClass,\n  getElementStyle,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport dataBsToggle from '../strings/dataBsToggle';\nimport dataOriginalTitle from '../strings/dataOriginalTitle';\nimport showClass from '../strings/showClass';\nimport tooltipString from '../strings/tooltipString';\nimport tooltipComponent from '../strings/tooltipComponent';\nimport popoverString from '../strings/popoverString';\nimport popoverComponent from '../strings/popoverComponent';\nimport modalString from '../strings/modalString';\nimport offcanvasString from '../strings/offcanvasString';\n\nimport styleTip from '../util/styleTip';\nimport createTip from '../util/createTip';\nimport { appendPopup, removePopup, hasPopup } from '../util/popupContainer';\nimport getElementContainer from '../util/getElementContainer';\nimport tooltipDefaults from '../util/tooltipDefaults';\nimport BaseComponent from './base-component';\nimport { TooltipOptions, TooltipEvent } from '../interface/tooltip';\nimport { PopoverOptions, PopoverEvent } from '../interface/popover';\n\n// TOOLTIP PRIVATE GC\n// ==================\nconst tooltipSelector = `[${dataBsToggle}=\"${tooltipString}\"],[data-tip=\"${tooltipString}\"]`;\nconst titleAttr = 'title';\n\n/**\n * Static method which returns an existing `Tooltip` instance associated\n * to a target `Element`.\n *\n */\nlet getTooltipInstance = (element: HTMLElement) => getInstance<Tooltip>(element, tooltipComponent);\n\n/**\n * A `Tooltip` initialization callback.\n */\nconst tooltipInitCallback = (element: HTMLElement) => new Tooltip(element);\n\n// TOOLTIP PRIVATE METHODS\n// =======================\n/**\n * Removes the tooltip from the DOM.\n *\n * @param self the `Tooltip` instance\n */\nconst removeTooltip = (self: Tooltip) => {\n  const { element, tooltip, container, offsetParent } = self;\n  removeAttribute(element, ariaDescribedBy);\n  removePopup(tooltip as HTMLElement, container === offsetParent ? container : offsetParent);\n};\n\n/**\n * Check if container contains the tooltip.\n *\n * @param self Tooltip\n */\nconst hasTip = (self: Tooltip): boolean | undefined => {\n  const { tooltip, container, offsetParent } = self;\n\n  return tooltip && hasPopup(tooltip, container === offsetParent ? container : offsetParent);\n};\n\n/**\n * Executes after the instance has been disposed.\n *\n * @param self the `Tooltip` instance\n * @param callback the parent dispose callback\n */\nconst disposeTooltipComplete = (self: Tooltip, callback?: () => void) => {\n  const { element } = self;\n  toggleTooltipHandlers(self);\n\n  /* istanbul ignore else */\n  if (hasAttribute(element, dataOriginalTitle) && self.name === tooltipComponent) {\n    toggleTooltipTitle(self);\n  }\n  /* istanbul ignore else */\n  if (callback) callback();\n};\n\n/**\n * Toggles on/off the special `Tooltip` event listeners.\n *\n * @param self the `Tooltip` instance\n * @param add when `true`, event listeners are added\n */\nconst toggleTooltipAction = (self: Tooltip, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { element } = self;\n\n  action(getDocument(element), touchstartEvent, self.handleTouch as EventListener, passiveHandler);\n\n  [scrollEvent, resizeEvent].forEach(ev => {\n    action(getWindow(element), ev, self.update, passiveHandler);\n  });\n};\n\n/**\n * Executes after the tooltip was shown to the user.\n *\n * @param self the `Tooltip` instance\n */\nconst tooltipShownAction = (self: Tooltip) => {\n  const { element } = self;\n  const shownTooltipEvent = createCustomEvent<TooltipEvent | PopoverEvent>(`shown.bs.${toLowerCase(self.name)}`);\n\n  toggleTooltipAction(self, true);\n  dispatchEvent(element, shownTooltipEvent);\n  Timer.clear(element, 'in');\n};\n\n/**\n * Executes after the tooltip was hidden to the user.\n *\n * @param self the `Tooltip` instance\n */\nconst tooltipHiddenAction = (self: Tooltip) => {\n  const { element } = self;\n  const hiddenTooltipEvent = createCustomEvent<TooltipEvent | PopoverEvent>(`hidden.bs.${toLowerCase(self.name)}`);\n\n  toggleTooltipAction(self);\n  removeTooltip(self);\n  dispatchEvent(element, hiddenTooltipEvent);\n\n  Timer.clear(element, 'out');\n};\n\n/**\n * Toggles on/off the `Tooltip` event listeners.\n *\n * @param self the `Tooltip` instance\n * @param add when `true`, event listeners are added\n */\nconst toggleTooltipHandlers = (self: Tooltip, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  // btn is only for dismissible popover\n  const { element, options, btn } = self;\n  const { trigger } = options;\n  const isPopover = self.name !== tooltipComponent;\n  const dismissible = isPopover && (options as PopoverOptions).dismissible ? true : false;\n\n  /* istanbul ignore else */\n  if (!trigger.includes('manual')) {\n    self.enabled = !!add;\n\n    const triggerOptions = trigger.split(' ');\n\n    triggerOptions.forEach(tr => {\n      /* istanbul ignore else */\n      if (tr === mousehoverEvent) {\n        action(element, mousedownEvent, self.handleShow);\n        action(element, mouseenterEvent, self.handleShow);\n\n        /* istanbul ignore else */\n        if (!dismissible) {\n          action(element, mouseleaveEvent, self.handleHide);\n          action(getDocument(element), touchstartEvent, self.handleTouch as EventListener, passiveHandler);\n        }\n      } else if (tr === mouseclickEvent) {\n        action(element, tr, !dismissible ? self.toggle : self.handleShow);\n      } else if (tr === focusEvent) {\n        action(element, focusinEvent, self.handleShow);\n        /* istanbul ignore else */\n        if (!dismissible) action(element, focusoutEvent, self.handleHide);\n        /* istanbul ignore else */\n        if (isApple) {\n          action(element, mouseclickEvent, self.handleFocus);\n        }\n      }\n      /* istanbul ignore else */\n      if (dismissible && btn) {\n        action(btn, mouseclickEvent, self.handleHide);\n      }\n    });\n  }\n};\n\n/**\n * Toggles on/off the `Tooltip` event listeners that hide/update the tooltip.\n *\n * @param self the `Tooltip` instance\n * @param add when `true`, event listeners are added\n */\nconst toggleTooltipOpenHandlers = (self: Tooltip, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { element, container, offsetParent } = self;\n  const { offsetHeight, scrollHeight } = container as HTMLElement;\n  const parentModal = closest(element, `.${modalString}`);\n  const parentOffcanvas = closest(element, `.${offcanvasString}`);\n\n  /* istanbul ignore else */\n  const win = getWindow(element);\n  const overflow = offsetHeight !== scrollHeight;\n  const scrollTarget = container === offsetParent && overflow ? container : win;\n  action(scrollTarget, resizeEvent, self.update, passiveHandler);\n  action(scrollTarget, scrollEvent, self.update, passiveHandler);\n\n  // dismiss tooltips inside modal / offcanvas\n  if (parentModal) action(parentModal, `hide.bs.${modalString}`, self.handleHide);\n  if (parentOffcanvas) action(parentOffcanvas, `hide.bs.${offcanvasString}`, self.handleHide);\n};\n\n/**\n * Toggles the `title` and `data-original-title` attributes.\n *\n * @param self the `Tooltip` instance\n * @param content when `true`, event listeners are added\n */\nconst toggleTooltipTitle = (self: Tooltip, content?: string) => {\n  // [0 - add, 1 - remove] | [0 - remove, 1 - add]\n  const titleAtt = [dataOriginalTitle, titleAttr];\n  const { element } = self;\n\n  setAttribute(\n    element,\n    titleAtt[content ? 0 : 1],\n    content || getAttribute(element, titleAtt[0]) || /* istanbul ignore next */ '',\n  );\n  removeAttribute(element, titleAtt[content ? 1 : 0]);\n};\n\n// TOOLTIP DEFINITION\n// ==================\n/** Creates a new `Tooltip` instance. */\nexport default class Tooltip extends BaseComponent {\n  static selector = tooltipSelector;\n  static init = tooltipInitCallback;\n  static getInstance = getTooltipInstance;\n  static styleTip = styleTip;\n  declare options: TooltipOptions;\n  declare btn?: HTMLElement;\n  declare tooltip?: HTMLElement;\n  declare container: ParentNode;\n  declare arrow?: HTMLElement;\n  declare offsetParent?: HTMLElement;\n  declare enabled: boolean;\n  declare id: string;\n\n  /**\n   * @param target the target element\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<TooltipOptions>) {\n    super(target, config);\n\n    const { element } = this;\n    const isTooltip = this.name === tooltipComponent;\n    const tipString = isTooltip ? tooltipString : popoverString;\n    const tipComponent = isTooltip ? tooltipComponent : popoverComponent;\n\n    /* istanbul ignore next: this is to set Popover too */\n    getTooltipInstance = <T extends Tooltip>(elem: HTMLElement) => getInstance<T>(elem, tipComponent);\n\n    // additional properties\n    this.enabled = true;\n    /** Set unique ID for `aria-describedby`. */\n    this.id = `${tipString}-${getUID(element, tipString)}`;\n\n    // instance options\n    const { options } = this;\n\n    // invalidate\n    if (!((!options.title && isTooltip) || (!isTooltip && !options.content))) {\n      // reset default options\n      ObjectAssign(tooltipDefaults, { titleAttr: '' });\n\n      // set title attributes and add event listeners\n      /* istanbul ignore else */\n      if (hasAttribute(element, titleAttr) && isTooltip && typeof options.title === 'string') {\n        toggleTooltipTitle(this, options.title);\n      }\n\n      // set containers\n      this.container = getElementContainer(element);\n      this.offsetParent = ['sticky', 'fixed'].some(\n        position => getElementStyle(this.container as HTMLElement, 'position') === position,\n      )\n        ? (this.container as HTMLElement)\n        : getDocument(this.element).body;\n\n      // create tooltip here\n      createTip(this);\n\n      // attach events\n      toggleTooltipHandlers(this, true);\n    }\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return tooltipComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return tooltipDefaults;\n  }\n\n  // TOOLTIP PUBLIC METHODS\n  // ======================\n  /** Handles the focus event on iOS. */\n  handleFocus = () => focus(this.element);\n  /** Shows the tooltip. */\n  handleShow = () => this.show();\n  show() {\n    const { options, tooltip, element, container, offsetParent, id } = this;\n    const { animation } = options;\n    const outTimer = Timer.get(element, 'out');\n    const tipContainer = container === offsetParent ? container : offsetParent;\n\n    Timer.clear(element, 'out');\n\n    if (tooltip && !outTimer && !hasTip(this)) {\n      Timer.set(\n        element,\n        () => {\n          const showTooltipEvent = createCustomEvent<TooltipEvent | PopoverEvent>(`show.bs.${toLowerCase(this.name)}`);\n          dispatchEvent(element, showTooltipEvent);\n          if (!showTooltipEvent.defaultPrevented) {\n            // append to container\n            appendPopup(tooltip, tipContainer);\n\n            setAttribute(element, ariaDescribedBy, `#${id}`);\n\n            this.update();\n            toggleTooltipOpenHandlers(this, true);\n\n            /* istanbul ignore else */\n            if (!hasClass(tooltip, showClass)) addClass(tooltip, showClass);\n            /* istanbul ignore else */\n            if (animation) emulateTransitionEnd(tooltip, () => tooltipShownAction(this));\n            else tooltipShownAction(this);\n          }\n        },\n        17,\n        'in',\n      );\n    }\n  }\n\n  /** Hides the tooltip. */\n  handleHide = () => this.hide();\n  hide() {\n    const { options, tooltip, element } = this;\n    const { animation, delay } = options;\n\n    Timer.clear(element, 'in');\n\n    /* istanbul ignore else */\n    if (tooltip && hasTip(this)) {\n      Timer.set(\n        element,\n        () => {\n          const hideTooltipEvent = createCustomEvent<TooltipEvent | PopoverEvent>(`hide.bs.${toLowerCase(this.name)}`);\n          dispatchEvent(element, hideTooltipEvent);\n\n          if (!hideTooltipEvent.defaultPrevented) {\n            this.update();\n            removeClass(tooltip, showClass);\n            toggleTooltipOpenHandlers(this);\n\n            /* istanbul ignore else */\n            if (animation) emulateTransitionEnd(tooltip, () => tooltipHiddenAction(this));\n            else tooltipHiddenAction(this);\n          }\n        },\n        delay + 17,\n        'out',\n      );\n    }\n  }\n\n  /** Updates the tooltip position. */\n  update = () => {\n    styleTip<Tooltip>(this);\n  };\n\n  /** Toggles the tooltip visibility. */\n  toggle = () => {\n    const { tooltip } = this;\n\n    if (tooltip && !hasTip(this)) this.show();\n    else this.hide();\n  };\n\n  /** Enables the tooltip. */\n  enable() {\n    const { enabled } = this;\n    /* istanbul ignore else */\n    if (!enabled) {\n      toggleTooltipHandlers(this, true);\n      this.enabled = !enabled;\n    }\n  }\n\n  /** Disables the tooltip. */\n  disable() {\n    const { tooltip, options, enabled } = this;\n    const { animation } = options;\n    /* istanbul ignore else */\n    if (enabled) {\n      if (tooltip && hasTip(this) && animation) {\n        this.hide();\n        emulateTransitionEnd(tooltip, () => toggleTooltipHandlers(this));\n      } else {\n        toggleTooltipHandlers(this);\n      }\n      this.enabled = !enabled;\n    }\n  }\n\n  /** Toggles the `disabled` property. */\n  toggleEnabled() {\n    if (!this.enabled) this.enable();\n    else this.disable();\n  }\n\n  /**\n   * Handles the `touchstart` event listener for `Tooltip`\n   *\n   * @this {Tooltip}\n   * @param {TouchEvent} e the `Event` object\n   */\n  handleTouch = ({ target }: TouchEvent) => {\n    const { tooltip, element } = this;\n\n    /* istanbul ignore else */\n    if (\n      (tooltip && tooltip.contains(target as HTMLElement)) ||\n      target === element ||\n      (target && element.contains(target as HTMLElement))\n    ) {\n      // smile for ESLint\n    } else {\n      this.hide();\n    }\n  };\n\n  /** Removes the `Tooltip` from the target element. */\n  dispose() {\n    const { tooltip, options } = this;\n    const clone = { ...this, name: this.name };\n    const callback = () => setTimeout(() => disposeTooltipComplete(clone, () => super.dispose()), 17);\n\n    if (options.animation && hasTip(clone)) {\n      this.options.delay = 0; // reset delay\n      this.hide();\n      emulateTransitionEnd(tooltip as HTMLElement, callback);\n    } else {\n      callback();\n    }\n  }\n}\n","import { getDocument, isShadowRoot, isTableElement, getParentNode, getElementStyle } from '@thednp/shorty';\n\n/**\n * Returns an `HTMLElement` to be used as default value for *options.container*\n * for `Tooltip` / `Popover` components.\n *\n * @see https://github.com/floating-ui/floating-ui\n *\n * @param element the target\n * @returns the query result\n */\nconst getElementContainer = (element: HTMLElement): ParentNode => {\n  const majorBlockTags = ['HTML', 'BODY'];\n  const containers: ParentNode[] = [];\n  let { parentNode } = element as Node;\n\n  while (parentNode && !majorBlockTags.includes(parentNode.nodeName)) {\n    parentNode = getParentNode(parentNode) as ParentNode;\n    /* istanbul ignore else */\n    if (!(isShadowRoot(parentNode) || isTableElement(parentNode))) {\n      containers.push(parentNode);\n    }\n  }\n\n  return (\n    containers.find((c, i) => {\n      if (\n        getElementStyle(c as HTMLElement, 'position') !== 'relative' &&\n        containers.slice(i + 1).every(r => getElementStyle(r as HTMLElement, 'position') === 'static')\n      ) {\n        return c;\n      }\n      return null;\n    }) || /* istanbul ignore next: optional guard */ getDocument(element).body\n  );\n};\n\nexport default getElementContainer;\n","import { createElement, addClass, hasClass, setAttribute, querySelector, isRTL, isHTMLElement } from '@thednp/shorty';\n\nimport tooltipComponent from '../strings/tooltipComponent';\nimport tooltipString from '../strings/tooltipString';\nimport popoverString from '../strings/popoverString';\nimport fadeClass from '../strings/fadeClass';\nimport tipClassPositions from './tipClassPositions';\nimport setHtml from './setHtml';\nimport Tooltip from '../components/tooltip';\nimport Popover from '../components/popover';\n\n/**\n * Creates a new tooltip / popover.\n *\n * @param self the `Tooltip` / `Popover` instance\n */\nconst createTip = (self: Tooltip | Popover) => {\n  const isTooltip = self.name === tooltipComponent;\n\n  const { id, element, options } = self;\n  const { title, placement, template, animation, customClass, sanitizeFn, dismissible, content, btnClose } = options;\n  const tipString = isTooltip ? tooltipString : popoverString;\n  const tipPositions = { ...tipClassPositions };\n  let titleParts: Node[] = [];\n  let contentParts: Node[] = [];\n\n  if (isRTL(element)) {\n    tipPositions.left = 'end';\n    tipPositions.right = 'start';\n  }\n\n  // set initial popover class\n  const placementClass = `bs-${tipString}-${tipPositions[placement]}`;\n\n  // load template\n  let tooltipTemplate: Node | string;\n  if (isHTMLElement(template)) {\n    tooltipTemplate = template;\n  } else {\n    const htmlMarkup = createElement('div') as HTMLElement;\n    setHtml(htmlMarkup, template, sanitizeFn);\n    tooltipTemplate = htmlMarkup.firstChild as HTMLElement;\n  }\n\n  // set popover markup\n  self.tooltip = isHTMLElement(tooltipTemplate)\n    ? (tooltipTemplate.cloneNode(true) as HTMLElement)\n    : /* istanbul ignore next */ undefined;\n\n  const { tooltip } = self;\n  /* istanbul ignore else */\n  if (tooltip) {\n    // set id and role attributes\n    setAttribute(tooltip, 'id', id);\n    setAttribute(tooltip, 'role', tooltipString);\n\n    const bodyClass = isTooltip ? `${tooltipString}-inner` : `${popoverString}-body`;\n    const tooltipHeader = isTooltip ? null : querySelector(`.${popoverString}-header`, tooltip);\n    const tooltipBody = querySelector(`.${bodyClass}`, tooltip);\n\n    // set arrow and enable access for styleTip\n    self.arrow = querySelector(`.${tipString}-arrow`, tooltip) as HTMLElement;\n    const { arrow } = self;\n\n    if (isHTMLElement(title)) titleParts = [title.cloneNode(true)];\n    else {\n      const tempTitle = createElement('div') as HTMLElement;\n      setHtml(tempTitle, title, sanitizeFn);\n      titleParts = [...[...tempTitle.childNodes]];\n    }\n\n    if (isHTMLElement(content)) contentParts = [content.cloneNode(true)];\n    else {\n      const tempContent = createElement('div') as HTMLElement;\n      setHtml(tempContent, content, sanitizeFn);\n      contentParts = [...[...tempContent.childNodes]];\n    }\n\n    // set dismissible button\n    if (dismissible) {\n      if (title) {\n        if (isHTMLElement(btnClose)) titleParts = [...titleParts, btnClose.cloneNode(true)];\n        else {\n          const tempBtn = createElement('div') as HTMLElement;\n          setHtml(tempBtn, btnClose, sanitizeFn);\n          titleParts = [...titleParts, tempBtn.firstChild as Node];\n        }\n      } else {\n        /* istanbul ignore else */\n        if (tooltipHeader) tooltipHeader.remove();\n        if (isHTMLElement(btnClose)) contentParts = [...contentParts, btnClose.cloneNode(true)];\n        else {\n          const tempBtn = createElement('div') as HTMLElement;\n          setHtml(tempBtn, btnClose, sanitizeFn);\n          contentParts = [...contentParts, tempBtn.firstChild as Node];\n        }\n      }\n    }\n\n    // fill the template with content from options / data attributes\n    // also sanitize title && content\n    /* istanbul ignore else */\n    if (!isTooltip) {\n      /* istanbul ignore else */\n      if (title && tooltipHeader) setHtml(tooltipHeader, titleParts, sanitizeFn);\n      /* istanbul ignore else */\n      if (content && tooltipBody) setHtml(tooltipBody, contentParts, sanitizeFn);\n      // set btn\n      self.btn = querySelector('.btn-close', tooltip) || undefined;\n    } else if (title && tooltipBody) setHtml(tooltipBody, title, sanitizeFn);\n\n    // Bootstrap 5.2.x\n    // addClass(tooltip, 'position-absolute');\n    addClass(tooltip, 'position-fixed');\n    addClass(arrow, 'position-absolute');\n\n    // set popover animation and placement\n    /* istanbul ignore else */\n    if (!hasClass(tooltip, tipString)) addClass(tooltip, tipString);\n    /* istanbul ignore else */\n    if (animation && !hasClass(tooltip, fadeClass)) addClass(tooltip, fadeClass);\n    /* istanbul ignore else */\n    if (customClass && !hasClass(tooltip, customClass)) {\n      addClass(tooltip, customClass);\n    }\n    /* istanbul ignore else */\n    if (!hasClass(tooltip, placementClass)) addClass(tooltip, placementClass);\n  }\n};\n\nexport default createTip;\n","/* Native JavaScript for Bootstrap 5 | Popover\n---------------------------------------------- */\nimport { getInstance, ObjectAssign, focus } from '@thednp/shorty';\n\nimport dataBsToggle from '../strings/dataBsToggle';\nimport popoverString from '../strings/popoverString';\nimport popoverComponent from '../strings/popoverComponent';\n\nimport getTipTemplate from '../util/getTipTemplate';\nimport styleTip from '../util/styleTip';\nimport tooltipDefaults from '../util/tooltipDefaults';\nimport Tooltip from './tooltip';\n\nimport type { PopoverOptions /* , PopoverEvent */ } from '../interface/popover';\n\n// POPOVER PRIVATE GC\n// ==================\nconst popoverSelector = `[${dataBsToggle}=\"${popoverString}\"],[data-tip=\"${popoverString}\"]`;\n\nconst popoverDefaults: PopoverOptions = ObjectAssign({}, tooltipDefaults, {\n  template: getTipTemplate(popoverString),\n  content: '',\n  dismissible: false,\n  btnClose: '<button class=\"btn-close\" aria-label=\"Close\"></button>',\n});\n\n/**\n * Static method which returns an existing `Popover` instance associated\n * to a target `Element`.\n *\n */\nconst getPopoverInstance = (element: HTMLElement) => getInstance<Popover>(element, popoverComponent);\n\n/**\n * A `Popover` initialization callback.\n */\nconst popoverInitCallback = (element: HTMLElement) => new Popover(element);\n\n// POPOVER DEFINITION\n// ==================\n/** Returns a new `Popover` instance. */\nexport default class Popover extends Tooltip {\n  static selector = popoverSelector;\n  static init = popoverInitCallback;\n  static getInstance = getPopoverInstance;\n  static styleTip = styleTip;\n  declare options: PopoverOptions;\n\n  /**\n   * @param target the target element\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<PopoverOptions>) {\n    super(target, config);\n  }\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return popoverComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return popoverDefaults;\n  }\n\n  /* extend original `show()` */\n  show = () => {\n    super.show();\n    // btn only exists within dismissible popover\n    const { options, btn } = this;\n    /* istanbul ignore else */\n    if (options.dismissible && btn) setTimeout(() => focus(btn), 17);\n  };\n}\n","/** @type {string} */\nconst scrollspyString = 'scrollspy';\nexport default scrollspyString;\n","/** @type {string} */\nconst scrollspyComponent = 'ScrollSpy';\nexport default scrollspyComponent;\n","/* Native JavaScript for Bootstrap 5 | ScrollSpy\n------------------------------------------------ */\nimport {\n  getDocumentBody,\n  getDocumentElement,\n  getDocument,\n  getWindow,\n  removeClass,\n  hasClass,\n  addClass,\n  getElementsByTagName,\n  getAttribute,\n  querySelector,\n  isHTMLElement,\n  isWindow,\n  createCustomEvent,\n  getInstance,\n  scrollEvent,\n  // ObjectAssign,\n  passiveHandler,\n  dispatchEvent,\n  getBoundingClientRect,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport activeClass from '../strings/activeClass';\nimport scrollspyString from '../strings/scrollspyString';\nimport scrollspyComponent from '../strings/scrollspyComponent';\n\nimport BaseComponent from './base-component';\nimport { ScrollSpyOptions, ScrollSpyEvent } from '../interface/scrollspy';\n\n// SCROLLSPY PRIVATE GC\n// ====================\nconst scrollspySelector = '[data-bs-spy=\"scroll\"]';\n\nconst scrollspyDefaults: ScrollSpyOptions = {\n  offset: 10,\n  target: null,\n};\n\n/**\n * Static method which returns an existing `ScrollSpy` instance associated\n * to a target `Element`.\n */\nconst getScrollSpyInstance = (element: HTMLElement) => getInstance<ScrollSpy>(element, scrollspyComponent);\n\n/**\n * A `ScrollSpy` initialization callback.\n */\nconst scrollspyInitCallback = (element: HTMLElement) => new ScrollSpy(element);\n\n// SCROLLSPY CUSTOM EVENT\n// ======================\nconst activateScrollSpy = createCustomEvent<ScrollSpyEvent>(`activate.bs.${scrollspyString}`);\n\n// SCROLLSPY PRIVATE METHODS\n// =========================\n/**\n * Update the state of all items.\n *\n * @param self the `ScrollSpy` instance\n */\nconst updateSpyTargets = (self: ScrollSpy) => {\n  const { target, scrollTarget, options, itemsLength, scrollHeight, element } = self;\n  const { offset } = options;\n  const isWin = isWindow(scrollTarget as Node | Window);\n\n  const links = target && getElementsByTagName('A', target);\n  const scrollHEIGHT = scrollTarget ? getScrollHeight(scrollTarget) : /* istanbul ignore next */ scrollHeight;\n\n  self.scrollTop = isWin ? (scrollTarget as Window).scrollY : (scrollTarget as HTMLElement).scrollTop;\n\n  // only update items/offsets once or with each mutation\n  /* istanbul ignore else */\n  if (links && (scrollHEIGHT !== scrollHeight || itemsLength !== links.length)) {\n    let href;\n    let targetItem;\n    let rect;\n\n    // reset arrays & update\n    self.items = [];\n    self.offsets = [];\n    self.scrollHeight = scrollHEIGHT;\n    self.maxScroll = self.scrollHeight - getOffsetHeight(self);\n\n    [...links].forEach(link => {\n      href = getAttribute(link, 'href');\n      targetItem =\n        href && href.charAt(0) === '#' && href.slice(-1) !== '#' && querySelector(href, getDocument(element));\n\n      if (targetItem) {\n        self.items.push(link);\n        rect = getBoundingClientRect(targetItem);\n        self.offsets.push((isWin ? rect.top + self.scrollTop : targetItem.offsetTop) - offset);\n      }\n    });\n    self.itemsLength = self.items.length;\n  }\n};\n\n/**\n * Returns the `scrollHeight` property of the scrolling element.\n *\n * @param scrollTarget the `ScrollSpy` instance\n * @return `scrollTarget` height\n */\nconst getScrollHeight = (scrollTarget: Node | Window) => {\n  return isHTMLElement(scrollTarget as Node)\n    ? (scrollTarget as HTMLElement).scrollHeight\n    : getDocumentElement(scrollTarget as Node).scrollHeight;\n};\n\n/**\n * Returns the height property of the scrolling element.\n *\n * @param params the `ScrollSpy` instance\n */\nconst getOffsetHeight = ({ element, scrollTarget }: ScrollSpy) => {\n  return isWindow(scrollTarget as Node) ? (scrollTarget as Window).innerHeight : getBoundingClientRect(element).height;\n};\n\n/**\n * Clear all items of the target.\n *\n * @param target a single item\n */\nconst clear = (target: HTMLElement) => {\n  [...getElementsByTagName('A', target)].forEach(item => {\n    if (hasClass(item, activeClass)) removeClass(item, activeClass);\n  });\n};\n\n/**\n * Activates a new item.\n *\n * @param self the `ScrollSpy` instance\n * @param item a single item\n */\nconst activate = (self: ScrollSpy, item: HTMLElement) => {\n  const { target, element } = self;\n  if (isHTMLElement(target)) clear(target);\n  self.activeItem = item;\n  addClass(item, activeClass);\n\n  // activate all parents\n  const parents: HTMLElement[] = [];\n  let parentItem = item;\n  while (parentItem !== getDocumentBody(element)) {\n    parentItem = parentItem.parentElement as HTMLElement;\n    if (hasClass(parentItem, 'nav') || hasClass(parentItem, 'dropdown-menu')) parents.push(parentItem);\n  }\n\n  parents.forEach(menuItem => {\n    const parentLink = menuItem.previousElementSibling as HTMLElement | null;\n\n    /* istanbul ignore else */\n    if (parentLink && !hasClass(parentLink, activeClass)) {\n      addClass(parentLink, activeClass);\n    }\n  });\n\n  // dispatch\n  activateScrollSpy.relatedTarget = item;\n  dispatchEvent(element, activateScrollSpy);\n};\n\n/**\n * Toggles on/off the component event listener.\n *\n * @param self the `ScrollSpy` instance\n * @param add when `true`, listener is added\n */\nconst toggleSpyHandlers = (self: ScrollSpy, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  action(self.scrollTarget as EventTarget, scrollEvent, self.refresh, passiveHandler);\n};\n\n// SCROLLSPY DEFINITION\n// ====================\n/** Returns a new `ScrollSpy` instance. */\nexport default class ScrollSpy extends BaseComponent {\n  static selector = scrollspySelector;\n  static init = scrollspyInitCallback;\n  static getInstance = getScrollSpyInstance;\n  declare options: ScrollSpyOptions;\n  declare target: HTMLElement | null;\n  declare scrollTarget: HTMLElement | Window;\n  declare scrollTop: number;\n  declare maxScroll: number;\n  declare scrollHeight: number;\n  declare activeItem: HTMLElement | null;\n  declare items: HTMLElement[];\n  declare itemsLength: number;\n  declare offsets: number[];\n\n  /**\n   * @param target the target element\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<ScrollSpyOptions>) {\n    super(target, config);\n\n    // initialization element & options\n    const { element, options } = this;\n\n    // additional properties\n    this.target = querySelector(options.target as HTMLElement | string, getDocument(element));\n\n    // invalidate\n    if (this.target) {\n      // set initial state\n      this.scrollTarget = element.clientHeight < element.scrollHeight ? element : getWindow(element);\n      this.scrollHeight = getScrollHeight(this.scrollTarget);\n\n      // add event handlers\n      toggleSpyHandlers(this, true);\n\n      this.refresh();\n    }\n  }\n\n  /* eslint-disable */\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return scrollspyComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return scrollspyDefaults;\n  }\n  /* eslint-enable */\n\n  // SCROLLSPY PUBLIC METHODS\n  // ========================\n  /** Updates all items. */\n  refresh = () => {\n    const { target } = this;\n\n    // check if target is visible and invalidate\n    /* istanbul ignore else */\n    if (isHTMLElement(target) && target.offsetHeight > 0) {\n      updateSpyTargets(this);\n\n      const { scrollTop, maxScroll, itemsLength, items, activeItem } = this;\n\n      if (scrollTop >= maxScroll) {\n        const newActiveItem = items[itemsLength - 1];\n\n        /* istanbul ignore else */\n        if (activeItem !== newActiveItem) {\n          activate(this, newActiveItem);\n        }\n        return;\n      }\n\n      const { offsets } = this;\n\n      if (activeItem && scrollTop < offsets[0] && offsets[0] > 0) {\n        this.activeItem = null;\n        if (target) clear(target);\n        return;\n      }\n\n      items.forEach((item, i) => {\n        if (\n          activeItem !== item &&\n          scrollTop >= offsets[i] &&\n          (typeof offsets[i + 1] === 'undefined' || scrollTop < offsets[i + 1])\n        ) {\n          activate(this, item);\n        }\n      });\n    }\n  };\n\n  /** Removes `ScrollSpy` from the target element. */\n  dispose() {\n    toggleSpyHandlers(this);\n    super.dispose();\n  }\n}\n","/** @type {string} */\nconst tabString = 'tab';\nexport default tabString;\n","/* Native JavaScript for Bootstrap 5 | Tab\n------------------------------------------ */\nimport {\n  emulateTransitionEnd,\n  dispatchEvent,\n  removeClass,\n  hasClass,\n  addClass,\n  querySelector,\n  getElementsByClassName,\n  closest,\n  setAttribute,\n  mouseclickEvent,\n  createCustomEvent,\n  Timer,\n  getInstance,\n  ariaSelected,\n  // ObjectAssign,\n  reflow,\n  isHTMLElement,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport collapsingClass from '../strings/collapsingClass';\nimport activeClass from '../strings/activeClass';\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport dropdownClasses from '../strings/dropdownClasses';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport tabString from '../strings/tabString';\nimport tabComponent from '../strings/tabComponent';\n\nimport getTargetElement from '../util/getTargetElement';\nimport BaseComponent from './base-component';\nimport type { /* TabOptions, */ TabEvent } from '../interface/tab';\n\n// TAB PRIVATE GC\n// ================\nconst tabSelector = `[${dataBsToggle}=\"${tabString}\"]`;\n\n/**\n * Static method which returns an existing `Tab` instance associated\n * to a target `Element`.\n */\nconst getTabInstance = (element: HTMLElement) => getInstance<Tab>(element, tabComponent);\n\n/** A `Tab` initialization callback. */\nconst tabInitCallback = (element: HTMLElement) => new Tab(element);\n\n// TAB CUSTOM EVENTS\n// =================\nconst showTabEvent = createCustomEvent<TabEvent>(`show.bs.${tabString}`);\nconst shownTabEvent = createCustomEvent<TabEvent>(`shown.bs.${tabString}`);\nconst hideTabEvent = createCustomEvent<TabEvent>(`hide.bs.${tabString}`);\nconst hiddenTabEvent = createCustomEvent<TabEvent>(`hidden.bs.${tabString}`);\n\ninterface TabPrivate {\n  tab: HTMLElement | null;\n  content: HTMLElement | null;\n  currentHeight: number;\n  nextHeight: number;\n}\n\n/**\n * Stores the current active tab and its content\n * for a given `.nav` element.\n */\nconst tabPrivate: Map<HTMLElement, TabPrivate> = new Map();\n\n// TAB PRIVATE METHODS\n// ===================\n/**\n * Executes after tab transition has finished.\n *\n * @param self the `Tab` instance\n */\nconst triggerTabEnd = (self: Tab) => {\n  const { tabContent, nav } = self;\n\n  /* istanbul ignore else */\n  if (tabContent && hasClass(tabContent, collapsingClass)) {\n    tabContent.style.height = '';\n    removeClass(tabContent, collapsingClass);\n  }\n\n  /* istanbul ignore else */\n  if (nav) Timer.clear(nav);\n};\n\n/**\n * Executes before showing the tab content.\n *\n * @param self the `Tab` instance\n */\nconst triggerTabShow = (self: Tab) => {\n  const { element, tabContent, content: nextContent, nav } = self;\n  const { tab } = (isHTMLElement(nav) && tabPrivate.get(nav)) || /* istanbul ignore next */ { tab: null };\n\n  /* istanbul ignore else */\n  if (tabContent && nextContent && hasClass(nextContent, fadeClass)) {\n    const { currentHeight, nextHeight } = tabPrivate.get(element) || /* istanbul ignore next */ {\n      currentHeight: 0,\n      nextHeight: 0,\n    };\n    if (currentHeight === nextHeight) {\n      triggerTabEnd(self);\n    } else {\n      // enables height animation\n      setTimeout(() => {\n        tabContent.style.height = `${nextHeight}px`;\n        reflow(tabContent);\n        emulateTransitionEnd(tabContent, () => triggerTabEnd(self));\n      }, 50);\n    }\n  } else if (nav) Timer.clear(nav);\n\n  shownTabEvent.relatedTarget = tab as HTMLElement | undefined;\n\n  dispatchEvent(element, shownTabEvent);\n};\n\n/**\n * Executes before hiding the tab.\n *\n * @param self the `Tab` instance\n */\nconst triggerTabHide = (self: Tab) => {\n  const { element, content: nextContent, tabContent, nav } = self;\n  const { tab, content } = (nav && tabPrivate.get(nav)) || /* istanbul ignore next */ { tab: null, content: null };\n  let currentHeight = 0;\n\n  /* istanbul ignore else */\n  if (tabContent && nextContent && hasClass(nextContent, fadeClass)) {\n    [content, nextContent].forEach(c => {\n      if (isHTMLElement(c)) addClass(c, 'overflow-hidden');\n    });\n    currentHeight = isHTMLElement(content) ? content.scrollHeight : /* istanbul ignore next */ 0;\n  }\n\n  // update relatedTarget and dispatch event\n  showTabEvent.relatedTarget = tab as HTMLElement | undefined;\n  hiddenTabEvent.relatedTarget = element;\n  dispatchEvent(element, showTabEvent);\n\n  if (!showTabEvent.defaultPrevented) {\n    if (nextContent) addClass(nextContent, activeClass);\n    if (content) removeClass(content, activeClass);\n\n    /* istanbul ignore else */\n    if (tabContent && nextContent && hasClass(nextContent, fadeClass)) {\n      const nextHeight = nextContent.scrollHeight;\n      tabPrivate.set(element, { currentHeight, nextHeight, tab: null, content: null });\n\n      addClass(tabContent, collapsingClass);\n      tabContent.style.height = `${currentHeight}px`;\n      reflow(tabContent);\n      [content, nextContent].forEach(c => {\n        if (c) removeClass(c, 'overflow-hidden');\n      });\n    }\n\n    if (nextContent && nextContent && hasClass(nextContent, fadeClass)) {\n      setTimeout(() => {\n        addClass(nextContent, showClass);\n        emulateTransitionEnd(nextContent, () => {\n          triggerTabShow(self);\n        });\n      }, 1);\n    } else {\n      if (nextContent) addClass(nextContent, showClass);\n      triggerTabShow(self);\n    }\n\n    if (tab) dispatchEvent(tab, hiddenTabEvent);\n  }\n};\n\n/**\n * Returns the current active tab and its target content.\n *\n * @param self the `Tab` instance\n * @returns the query result\n */\nconst getActiveTab = (self: Tab): { tab: HTMLElement | null; content: HTMLElement | null } => {\n  const { nav } = self;\n  /* istanbul ignore next */\n  if (!isHTMLElement(nav as HTMLElement | undefined)) return { tab: null, content: null };\n\n  const activeTabs = getElementsByClassName(activeClass, nav as HTMLElement);\n  let tab: HTMLElement | null = null;\n  /* istanbul ignore else */\n  if (activeTabs.length === 1 && !dropdownClasses.some(c => hasClass(activeTabs[0].parentElement as HTMLElement, c))) {\n    [tab] = activeTabs;\n  } else if (activeTabs.length > 1) {\n    tab = activeTabs[activeTabs.length - 1];\n  }\n  const content = isHTMLElement(tab as HTMLElement) ? getTargetElement(tab as HTMLElement) : null;\n  return { tab, content };\n};\n\n/**\n * Returns a parent dropdown.\n *\n * @param element the `Tab` element\n * @returns the parent dropdown\n */\nconst getParentDropdown = (element?: HTMLElement): HTMLElement | null => {\n  /* istanbul ignore next */\n  if (!isHTMLElement(element)) return null;\n  const dropdown = closest(element, `.${dropdownClasses.join(',.')}`);\n  return dropdown ? querySelector(`.${dropdownClasses[0]}-toggle`, dropdown) : null;\n};\n\n/**\n * Toggles on/off the `click` event listener.\n *\n * @param self the `Tab` instance\n * @param add when `true`, event listener is added\n */\nconst toggleTabHandler = (self: Tab, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  action(self.element, mouseclickEvent, tabClickHandler);\n};\n\n// TAB EVENT HANDLER\n// =================\n/**\n * Handles the `click` event listener.\n *\n * @param e the `Event` object\n */\nconst tabClickHandler = (e: Event) => {\n  const self = getTabInstance(e.target as HTMLElement);\n\n  /* istanbul ignore else */\n  if (self) {\n    e.preventDefault();\n    self.show();\n  }\n};\n\n// TAB DEFINITION\n// ==============\n/** Creates a new `Tab` instance. */\nexport default class Tab extends BaseComponent {\n  static selector = tabSelector;\n  static init = tabInitCallback;\n  static getInstance = getTabInstance;\n  declare nav: HTMLElement | null;\n  declare content: HTMLElement | null;\n  declare tabContent: HTMLElement | null;\n  declare nextContent: HTMLElement | null;\n  declare dropdown: HTMLElement | null;\n\n  /** @param target the target element */\n  constructor(target: HTMLElement | string) {\n    super(target);\n\n    // initialization element\n    const { element } = this;\n    const content = getTargetElement(element);\n\n    // no point initializing a tab without a corresponding content\n    /* istanbul ignore else */\n    if (content) {\n      const nav = closest(element, '.nav');\n      const container = closest(content, '.tab-content');\n\n      this.nav = nav;\n      this.content = content;\n      this.tabContent = container;\n\n      // event targets\n      this.dropdown = getParentDropdown(element);\n\n      // show first Tab instance of none is shown\n      // suggested on #432\n      const { tab } = getActiveTab(this);\n      if (nav && !tab) {\n        const firstTab = querySelector(tabSelector, nav);\n        const firstTabContent = firstTab && getTargetElement(firstTab);\n\n        /* istanbul ignore else */\n        if (firstTabContent) {\n          addClass(firstTab, activeClass);\n          addClass(firstTabContent, showClass);\n          addClass(firstTabContent, activeClass);\n          setAttribute(element, ariaSelected, 'true');\n        }\n      }\n\n      // add event listener\n      toggleTabHandler(this, true);\n    }\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return tabComponent;\n  }\n\n  // TAB PUBLIC METHODS\n  // ==================\n  /** Shows the tab to the user. */\n  show() {\n    const { element, content: nextContent, nav, dropdown } = this;\n\n    /* istanbul ignore else */\n    if (!(nav && Timer.get(nav)) && !hasClass(element, activeClass)) {\n      const { tab, content } = getActiveTab(this);\n\n      /* istanbul ignore else */\n      if (nav) tabPrivate.set(nav, { tab, content, currentHeight: 0, nextHeight: 0 });\n\n      // update relatedTarget and dispatch\n      hideTabEvent.relatedTarget = element;\n\n      /* istanbul ignore else */\n      if (isHTMLElement(tab)) {\n        dispatchEvent(tab as EventTarget, hideTabEvent);\n        /* istanbul ignore else */\n        if (!hideTabEvent.defaultPrevented) {\n          addClass(element, activeClass);\n          setAttribute(element, ariaSelected, 'true');\n\n          const activeDropdown = isHTMLElement(tab) && getParentDropdown(tab);\n          if (activeDropdown && hasClass(activeDropdown, activeClass)) {\n            removeClass(activeDropdown, activeClass);\n          }\n\n          /* istanbul ignore else */\n          if (nav) {\n            const toggleTab = () => {\n              if (tab) {\n                removeClass(tab, activeClass);\n                setAttribute(tab, ariaSelected, 'false');\n              }\n              if (dropdown && !hasClass(dropdown, activeClass)) addClass(dropdown, activeClass);\n            };\n\n            if (content && (hasClass(content, fadeClass) || (nextContent && hasClass(nextContent, fadeClass)))) {\n              Timer.set(nav, toggleTab, 1);\n            } else toggleTab();\n          }\n\n          if (content) {\n            removeClass(content, showClass);\n            if (hasClass(content, fadeClass)) {\n              emulateTransitionEnd(content, () => triggerTabHide(this));\n            } else {\n              triggerTabHide(this);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /** Removes the `Tab` component from the target element. */\n  dispose() {\n    toggleTabHandler(this);\n    super.dispose();\n  }\n}\n","/** @type {string} */\nconst tabComponent = 'Tab';\nexport default tabComponent;\n","/** @type {string} */\nconst toastString = 'toast';\nexport default toastString;\n","/** @type {string} */\nconst toastComponent = 'Toast';\nexport default toastComponent;\n","/* Native JavaScript for Bootstrap 5 | Toast\n-------------------------------------------- */\nimport {\n  mouseclickEvent,\n  closest,\n  removeClass,\n  hasClass,\n  addClass,\n  focusoutEvent,\n  focusinEvent,\n  mouseleaveEvent,\n  mouseenterEvent,\n  createCustomEvent,\n  getDocument,\n  Timer,\n  getInstance,\n  reflow,\n  // ObjectAssign,\n  emulateTransitionEnd,\n  dispatchEvent,\n  querySelectorAll,\n  querySelector,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport dataBsDismiss from '../strings/dataBsDismiss';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport toastString from '../strings/toastString';\nimport toastComponent from '../strings/toastComponent';\nimport getTargetElement from '../util/getTargetElement';\nimport BaseComponent from './base-component';\nimport { ToastOptions, ToastEvent } from '../interface/toast';\n\n// TOAST PRIVATE GC\n// ================\nconst toastSelector = `.${toastString}`;\nconst toastDismissSelector = `[${dataBsDismiss}=\"${toastString}\"]`;\nconst toastToggleSelector = `[${dataBsToggle}=\"${toastString}\"]`;\nconst showingClass = 'showing';\n/** @deprecated */\nconst hideClass = 'hide';\n\nconst toastDefaults = {\n  animation: true,\n  autohide: true,\n  delay: 5000,\n};\n\n/**\n * Static method which returns an existing `Toast` instance associated\n * to a target `Element`.\n */\nconst getToastInstance = (element: HTMLElement) => getInstance<Toast>(element, toastComponent);\n\n/**\n * A `Toast` initialization callback.\n */\nconst toastInitCallback = (element: HTMLElement) => new Toast(element);\n\n// TOAST CUSTOM EVENTS\n// ===================\nconst showToastEvent = createCustomEvent<ToastEvent>(`show.bs.${toastString}`);\nconst shownToastEvent = createCustomEvent<ToastEvent>(`shown.bs.${toastString}`);\nconst hideToastEvent = createCustomEvent<ToastEvent>(`hide.bs.${toastString}`);\nconst hiddenToastEvent = createCustomEvent<ToastEvent>(`hidden.bs.${toastString}`);\n\n// TOAST PRIVATE METHODS\n// =====================\n/**\n * Executes after the toast is shown to the user.\n *\n * @param self the `Toast` instance\n */\nconst showToastComplete = (self: Toast) => {\n  const { element, options } = self;\n  removeClass(element, showingClass);\n  Timer.clear(element, showingClass);\n\n  dispatchEvent(element, shownToastEvent);\n  /* istanbul ignore else */\n  if (options.autohide) {\n    Timer.set(element, () => self.hide(), options.delay, toastString);\n  }\n};\n\n/**\n * Executes after the toast is hidden to the user.\n *\n * @param self the `Toast` instance\n */\nconst hideToastComplete = (self: Toast) => {\n  const { element } = self;\n  removeClass(element, showingClass);\n  removeClass(element, showClass);\n  addClass(element, hideClass); // B/C\n  Timer.clear(element, toastString);\n  dispatchEvent(element, hiddenToastEvent);\n};\n\n/**\n * Executes before hiding the toast.\n *\n * @param self the `Toast` instance\n */\nconst hideToast = (self: Toast) => {\n  const { element, options } = self;\n  addClass(element, showingClass);\n\n  if (options.animation) {\n    reflow(element);\n    emulateTransitionEnd(element, () => hideToastComplete(self));\n  } else {\n    hideToastComplete(self);\n  }\n};\n\n/**\n * Executes before showing the toast.\n *\n * @param self the `Toast` instance\n */\nconst showToast = (self: Toast) => {\n  const { element, options } = self;\n  Timer.set(\n    element,\n    () => {\n      removeClass(element, hideClass); // B/C\n      reflow(element);\n      addClass(element, showClass);\n      addClass(element, showingClass);\n\n      if (options.animation) {\n        emulateTransitionEnd(element, () => showToastComplete(self));\n      } else {\n        showToastComplete(self);\n      }\n    },\n    17,\n    showingClass,\n  );\n};\n\n/**\n * Toggles on/off the `click` event listener.\n *\n * @param self the `Toast` instance\n * @param add when `true`, it will add the listener\n */\nconst toggleToastHandlers = (self: Toast, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { element, triggers, dismiss, options, hide } = self;\n\n  /* istanbul ignore else */\n  if (dismiss) {\n    action(dismiss, mouseclickEvent, hide);\n  }\n\n  /* istanbul ignore else */\n  if (options.autohide) {\n    [focusinEvent, focusoutEvent, mouseenterEvent, mouseleaveEvent].forEach(e =>\n      action(element, e, interactiveToastHandler as EventListener),\n    );\n  }\n  /* istanbul ignore else */\n  if (triggers.length) {\n    triggers.forEach(btn => action(btn, mouseclickEvent, toastClickHandler));\n  }\n};\n\n// TOAST EVENT HANDLERS\n// ====================\n/**\n * Executes after the instance has been disposed.\n *\n * @param {Toast} self the `Toast` instance\n */\nconst completeDisposeToast = (self: Toast) => {\n  Timer.clear(self.element, toastString);\n  toggleToastHandlers(self);\n};\n\n/**\n * Handles the `click` event listener for toast.\n *\n * @param e the `Event` object\n */\nconst toastClickHandler = (e: Event) => {\n  const { target } = e;\n\n  const trigger = target && closest(target as HTMLElement, toastToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getToastInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    /* istanbul ignore else */\n    if (trigger && trigger.tagName === 'A') e.preventDefault();\n    self.relatedTarget = trigger;\n    self.show();\n  }\n};\n\n/**\n * Executes when user interacts with the toast without closing it,\n * usually by hovering or focusing it.\n *\n * @param e the `Toast` instance\n */\nconst interactiveToastHandler = (e: MouseEvent) => {\n  const element = e.target as HTMLElement;\n  const self = getToastInstance(element);\n  const { type, relatedTarget } = e;\n\n  /* istanbul ignore else: a solid filter is required */\n  if (self && element !== relatedTarget && !element.contains(relatedTarget as Node)) {\n    if ([mouseenterEvent, focusinEvent].includes(type)) {\n      Timer.clear(element, toastString);\n    } else {\n      Timer.set(element, () => self.hide(), self.options.delay, toastString);\n    }\n  }\n};\n\n// TOAST DEFINITION\n// ================\n/** Creates a new `Toast` instance. */\nexport default class Toast extends BaseComponent {\n  static selector = toastSelector;\n  static init = toastInitCallback;\n  static getInstance = getToastInstance;\n  declare options: ToastOptions;\n  declare dismiss: HTMLElement | null;\n  declare triggers: HTMLElement[];\n  declare relatedTarget: HTMLElement | null;\n\n  /**\n   * @param target the target `.toast` element\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<ToastOptions>) {\n    super(target, config);\n    const { element, options } = this;\n\n    // set fadeClass, the options.animation will override the markup\n    if (options.animation && !hasClass(element, fadeClass)) addClass(element, fadeClass);\n    else if (!options.animation && hasClass(element, fadeClass)) removeClass(element, fadeClass);\n\n    // dismiss button\n    this.dismiss = querySelector(toastDismissSelector, element);\n\n    // toast can have multiple triggering elements\n    this.triggers = [...querySelectorAll(toastToggleSelector, getDocument(element))].filter(\n      btn => getTargetElement(btn) === element,\n    );\n\n    // add event listener\n    toggleToastHandlers(this, true);\n  }\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return toastComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return toastDefaults;\n  }\n  /**\n   * Returns *true* when toast is visible.\n   */\n  get isShown() {\n    return hasClass(this.element, showClass);\n  }\n\n  // TOAST PUBLIC METHODS\n  // ====================\n  /** Shows the toast. */\n  show = () => {\n    const { element, isShown } = this;\n\n    /* istanbul ignore else */\n    if (element && !isShown) {\n      dispatchEvent(element, showToastEvent);\n      if (!showToastEvent.defaultPrevented) {\n        showToast(this);\n      }\n    }\n  };\n\n  /** Hides the toast. */\n  hide = () => {\n    const { element, isShown } = this;\n\n    /* istanbul ignore else */\n    if (element && isShown) {\n      dispatchEvent(element, hideToastEvent);\n      if (!hideToastEvent.defaultPrevented) {\n        hideToast(this);\n      }\n    }\n  };\n\n  /** Removes the `Toast` component from the target element. */\n  dispose() {\n    const { element, isShown } = this;\n\n    /* istanbul ignore else */\n    if (isShown) {\n      removeClass(element, showClass);\n    }\n\n    completeDisposeToast(this);\n\n    super.dispose();\n  }\n}\n","import { Data, getElementsByTagName, matches } from '@thednp/shorty';\n\nimport { addListener } from '@thednp/event-listener';\n\nimport Alert from '../components/alert';\nimport Button from '../components/button';\nimport Carousel from '../components/carousel';\nimport Collapse from '../components/collapse';\nimport Dropdown from '../components/dropdown';\nimport Modal from '../components/modal';\nimport Offcanvas from '../components/offcanvas';\nimport Popover from '../components/popover';\nimport ScrollSpy from '../components/scrollspy';\nimport Tab from '../components/tab';\nimport Toast from '../components/toast';\nimport Tooltip from '../components/tooltip';\n\nconst componentsList = new Map<\n  string,\n  | typeof Alert\n  | typeof Button\n  | typeof Carousel\n  | typeof Collapse\n  | typeof Dropdown\n  | typeof Modal\n  | typeof Offcanvas\n  | typeof Popover\n  | typeof ScrollSpy\n  | typeof Tab\n  | typeof Toast\n  | typeof Tooltip\n>();\n\n[Alert, Button, Carousel, Collapse, Dropdown, Modal, Offcanvas, Popover, ScrollSpy, Tab, Toast, Tooltip].forEach(c =>\n  componentsList.set(c.prototype.name, c),\n);\n\n/**\n * Initialize all matched `Element`s for one component.\n *\n * @param callback\n * @param collection\n */\nconst initComponentDataAPI = <T>(\n  callback: (el: HTMLElement, ops?: Record<string, unknown>) => T,\n  collection: HTMLCollectionOf<HTMLElement> | HTMLElement[],\n) => {\n  [...collection].forEach(x => callback(x));\n};\n\n/**\n * Remove one component from a target container element or all in the page.\n *\n * @param component the component name\n * @param context parent `Node`\n */\nconst removeComponentDataAPI = <T>(component: string, context: ParentNode) => {\n  const compData = Data.getAllFor(component) as Map<HTMLElement, T>;\n\n  if (compData) {\n    [...compData].forEach(([element, instance]) => {\n      if (context.contains(element)) (instance as T & { dispose: () => void }).dispose();\n    });\n  }\n};\n\n/**\n * Initialize all BSN components for a target container.\n *\n * @param context parent `Node`\n */\nexport const initCallback = (context?: ParentNode) => {\n  const lookUp = context && context.nodeName ? context : document;\n  const elemCollection = [...getElementsByTagName('*', lookUp)];\n\n  componentsList.forEach(cs => {\n    const { init, selector } = cs;\n    initComponentDataAPI(\n      init,\n      elemCollection.filter(item => matches(item, selector)),\n    );\n  });\n};\n\n/**\n * Remove all BSN components for a target container.\n *\n * @param context parent `Node`\n */\nexport const removeDataAPI = (context?: ParentNode) => {\n  const lookUp = context && context.nodeName ? context : document;\n\n  componentsList.forEach(comp => {\n    removeComponentDataAPI(comp.prototype.name, lookUp);\n  });\n};\n\n// Bulk initialize all components\nif (document.body) initCallback();\nelse {\n  addListener(document, 'DOMContentLoaded', () => initCallback(), { once: true });\n}\n","import * as BSN from 'bootstrap.native';\n\n// const refs = {\n//     modal: document.querySelector('#staticBackdrop'),\n// }\n// const modalWindow = new BSN.Modal('#staticBackdrop');\n\n// refs.modal.addEventListener('hidden.bs.modal', () => {\n//     console.log('We are closing modal window');\n// })\n\n// const PROMPT_DELAY = 1000;\n// const MAX_PROMPT_ATTEMPTS = 3;\n\n// setTimeout(() => {\n//     console.log('Open modal window');\n//     modalWindow.show();\n\n// })\n\n\nconsole.log('Modal window');\n// (function, timer)\n\nconst timeDelay = Math.random() * 4000;\nlet counter = 0;\n\n\nconst alertMessage = setTimeout((time) =>\n    console.log(`second column of code called after ${time} miliseccond!!!`), timeDelay, timeDelay);\n\nif (timeDelay > 2500) {\n    console.log('Waiting too long for a response from the server.')\n    clearTimeout(alertMessage);\n} else { \n\n    const connection = setInterval(() => {\n\n        counter += 1;\n        if (counter === 10) {\n\n            console.log('Connection completed... Bye)')\n            clearInterval(connection)\n        } else { \n\n            console.log('Active connection...', Date.now());\n            console.log(counter);\n        }\n\n    }, timeDelay);\n    // ##############################################################\n\n\n}\nconsole.log(\"third column of code\");\n\n// #########################################\n// const fetchUserFromServer = username => {\n//     return new Promise((res, rej) => {\n//         console.log(`Fetching data for ${username}`)\n//         setTimeout(() => {\n//             const isSucces = true;\n\n//             if (isSucces) {\n//                 res(\"Success Value\");\n//             } else {\n//                 rej('Error');\n//             }\n//         }, 2000);\n//     });\n// };\n// fetchUserFromServer('Anrii')\n//     .then((user) => { console.log(user) })\n//     .catch((err) => { console.log(err) });\n\n// #########################################\n\n// function promise(worker, speed) {\n\n// return (\n//     new Promise((res, rej) => {\n//         try {\n\n//             if (worker) {\n\n//                 res(`Observation of the worker: ${worker}`, {worker, speed});\n//             } else {\n//                 rej(`Worker died ${worker}`);\n//             }\n\n//         } catch (error) {\n\n//             rej(\"Worker is not defined!!\")\n//         }\n// })\n//     )\n// };\n// const slave = true;\n// const slaveSpeed = Math.random() * 2000;\n\n// promise(slave, timeDelay)\n//     .then((comment, obj) => console.log(val))\n//     .catch(err => console.log(err));\n"],"names":["Object","defineProperty","module","exports","value","default","self","ReferenceError","object","property","prototype","hasOwnProperty","call","$1b88cb4cd4b28de3$var$_getPrototypeOf","obj","parcelRequire","__esModule","$b9926a5835d271e3$var$getPrototypeOf","o1","setPrototypeOf","getPrototypeOf","o","__proto__","$c1b1a34fae3d3c27$var$setPrototypeOf","p1","p","key","enumerable","configurable","writable","arr","Array","isArray","iter","Symbol","iterator","from","TypeError","minLen","$7a2c4c4c44c69707$var$_arrayLikeToArray","n","toString","slice","constructor","name","test","len","length","i","arr2","$f215c72f040a88cf$var$_arrayLikeToArray","Reflect","construct","sham","Proxy","Boolean","valueOf","e","$e17dad4ea3dafe1a$var$_typeOf","$e17dad4ea3dafe1a$var$_assertThisInitialized","$e17dad4ea3dafe1a$var$_interopRequireDefault","$665014edacbfe17b$exports","instance","Constructor","$74e7f8130373505f$var$_defineProperties","target","props","descriptor","$74e7f8130373505f$exports","protoProps","staticProps","$e08672c9889dd930$exports","receiver","$e08672c9889dd930$var$get","$e08672c9889dd930$var$_superPropBase","target1","property1","receiver1","get","base","desc","getOwnPropertyDescriptor","$ae7f60fd48750bb9$exports","subClass","superClass","create","$ae7f60fd48750bb9$var$_setPrototypeOf","$ae7f60fd48750bb9$var$_interopRequireDefault","$9eddae5a012cde57$exports","arguments","source","ownKeys","keys","getOwnPropertySymbols","concat","filter","sym","forEach","$9eddae5a012cde57$var$_defineProperty","$9eddae5a012cde57$var$_interopRequireDefault","$111a013c31e2261e$exports","$111a013c31e2261e$var$_arrayWithHoles","$111a013c31e2261e$var$_iterableToArray","$111a013c31e2261e$var$_unsupportedIterableToArray","$111a013c31e2261e$var$_nonIterableRest","$111a013c31e2261e$var$_interopRequireDefault","$6195f07b5409ba15$exports","$6195f07b5409ba15$var$_arrayWithoutHoles","$6195f07b5409ba15$var$_iterableToArray","$6195f07b5409ba15$var$_unsupportedIterableToArray","$6195f07b5409ba15$var$_nonIterableSpread","$6195f07b5409ba15$var$_interopRequireDefault","$2059300b4b5a348b$exports","Derived","hasNativeReflectConstruct","$2059300b4b5a348b$var$_isNativeReflectConstruct","result","Super","$2059300b4b5a348b$var$_getPrototypeOf","NewTarget","this","apply","$2059300b4b5a348b$var$_possibleConstructorReturn","$6332dc3ea9a0ae64$var$_Object","$2059300b4b5a348b$var$_interopRequireDefault","f","t","type","s","currentTarget","$parcel$interopDefault","c","param1","_param1","param","a","_param","once","r","E","Map","has","set","size","addEventListener","d","delete","removeEventListener","g","M","me","ge","Ee","ye","we","Ae","$","_","tt","st","it","lt","ft","mt","Ct","zt","Vt","Re","Qe","qe","Ge","Ze","C","F","A","navigator","userAgentData","S","userAgent","z","brands","some","brand","x","gn","includes","$6332dc3ea9a0ae64$var$Fe","document","head","style","Xt","Jt","jt","Kt","Yt","getAttribute","Mn","hasAttribute","kn","setAttribute","Dn","removeAttribute","Ln","_len","_key","_classList","classList","add","On","remove","In","contains","v","nodeType","u","O","data","getAllFor","Bn","N","W","R","ownerDocument","window","k","assign","Zt","createElement","tagName","Q","dispatchEvent","getComputedStyle","replace","toLowerCase","getPropertyValue","ne","parseFloat","Number","isNaN","Un","Event","ee","l","setTimeout","Rn","focus","V","w","entries","oe","Gn","Jn","CustomEvent","cancelable","bubbles","Kn","passive","Xn","offsetHeight","Yn","setProperty","I","m","Zn","se","clearTimeout","h","ref","getBoundingClientRect","width","height","top","right","bottom","left","offsetWidth","Math","round","y","_n","body","T","documentElement","ce","no","nodeName","assignedSlot","parentNode","host","B","H","b","ae","id","so","defaultView","ao","clientHeight","bo","dir","yo","le","closest","getRootNode","wo","querySelector","de","getElementsByTagName","Mo","querySelectorAll","No","getElementsByClassName","ko","matches","fadeClass","showClass","dataBsDismiss","alertString","alertComponent","$6332dc3ea9a0ae64$var$nt","BaseComponent","config","element","isString","Error","prevInstance","Data","dispose","options","defaults","ObjectKeys","dataset","q","normalizeOptions","prop","_this","alertSelector","alertDismissSelector","closeAlertEvent","createCustomEvent","closedAlertEvent","alertTransitionEnd","that","toggleAlertHandler","action","addListener","removeListener","dismiss","close","mouseclickEvent","$6332dc3ea9a0ae64$export$caec2af78bcc877f","Alert","nt","__publicField","_$s","$ds8z5","hasClass","defaultPrevented","removeClass","emulateTransitionEnd","$fVNic","getInstance","activeClass","dataBsToggle","buttonComponent","buttonSelector","buttonString","toggleButtonHandler","toggle","$6332dc3ea9a0ae64$export$353f5b6fc5456de1","Button","preventDefault","isActive","addClass","ariaPressed","n2","String","dataBsTarget","carouselString","carouselComponent","dataBsParent","getTargetElement","targetAttr","doc","getDocument","map","att","attValue","carouselSelector","carouselItem","dataBsSlideTo","dataBsSlide","pausedClass","carouselDefaults","pause","keyboard","touch","interval","getCarouselInstance","startX","currentX","endX","carouselSlideEvent","carouselSlidEvent","carouselTransitionEndHandler","index","direction","slides","isAnimating","activeItem","getActiveIndex","orientation","directionClass","Timer","cycle","hidden","isPaused","carouselPauseHandler","carouselResumeHandler","carouselIndicatorHandler","newIndex","to","carouselControlsHandler","next","prev","carouselKeyHandler","code","isElementInScrollRange","RTL","isRTL","keyArrowRight","keyArrowLeft","carouselDragHandler","isTouch","indicator","controls","stopImmediatePropagation","stopPropagation","carouselPointerDownHandler","indicators","every","el","pageX","toggleCarouselTouchHandlers","carouselPointerMoveHandler","carouselPointerUpHandler","_a","find","i2","getSelection","abs","activateCarouselIndicator","passiveHandler","toggleCarouselHandlers","mouseenterEvent","mouseleaveEvent","touchstartEvent","arrow","keydownEvent","isHTMLElement","indexOf","$6332dc3ea9a0ae64$export$144901db2ea8e967","Carousel","activeIndex","transitionItem","ar","idx","eventProperties","relatedTarget","ObjectAssign","getElementTransitionDuration","reflow","_this1","clone","collapsingClass","collapseString","collapseComponent","collapseSelector","collapseToggleSelector","collapseDefaults","parent","getCollapseInstance","showCollapseEvent","shownCollapseEvent","hideCollapseEvent","hiddenCollapseEvent","collapseContent","triggers","noop","setElementStyle","scrollHeight","btn","ariaExpanded","toggleCollapseHandler","collapseClickHandler","trigger","$6332dc3ea9a0ae64$export$78768a9af065a7b","Collapse","hide","show","activeCollapse","activeCollapseInstance","expandCollapse","dropdownMenuClasses","dropdownComponent","dropdownMenuClass","isEmptyAnchor","parentAnchor","href","dropdownClasses","dropdownString","dropupString","dropstartString","dropendString","dropdownSelector","getDropdownInstance","dropdownMenuEndClass","verticalClass","horizontalClass","menuFocusTags","dropdownDefaults","offset","display","showDropdownEvent","shownDropdownEvent","hideDropdownEvent","hiddenDropdownEvent","updatedDropdownEvent","styleDropdown","menu","parentElement","getElementStyle","menuEnd","positionClass","dropdownMargin","dropdown","dropup","dropstart","dropend","dropdownPosition","menuStart","getDocumentElement","Z","clientWidth","U","Wt","leftFullExceed","targetLeft","menuWidth","rightFullExceed","targetWidth","bottomExceed","targetTop","menuHeight","bottomFullExceed","topExceed","leftExceed","rightExceed","posAjust","margins","margin","join","toggleDropdownDismiss","open","dropdownDismissHandler","focusEvent","dropdownPreventScroll","dropdownKeyHandler","scrollEvent","resizeEvent","ev","getWindow","dropdownLayoutHandler","toggleDropdownHandler","dropdownClickHandler","getCurrentOpenDropdown","currentParent","children","isForm","mousedownEvent","keyArrowDown","keyArrowUp","activeElement","menuItems","firstElementChild","getMenuItems","keyEscape","$6332dc3ea9a0ae64$export$931cbfb6bfb85fc","Dropdown","currentElement","currentInstance","modalString","modalComponent","offcanvasComponent","stickyTopClass","positionStickyClass","getFixedItems","measureScrollbar","innerWidth","setScrollbar","overflow","bd","getDocumentBody","bodyPad","parseInt","sbWidth","fixedItems","paddingRight","fixed","itemPadValue","itemMValue","marginRight","offcanvasString","popupContainer","className","appendPopup","customContainer","containerIsBody","isNode","lookup","BODY","append","removePopup","hasPopup","backdropString","modalBackdropClass","offcanvasBackdropClass","modalActiveSelector","offcanvasActiveSelector","overlay","getCurrentOpen","toggleOverlayType","isModal","targetClass","appendOverlay","hasFade","showOverlay","hideOverlay","removeOverlay","resetScrollbar","isVisible","offsetParent","modalSelector","modalToggleSelector","modalDismissSelector","modalStaticClass","modalDefaults","backdrop","getModalInstance","showModalEvent","shownModalEvent","hideModalEvent","hiddenModalEvent","setModalScrollbar","scrollbarWidth","modalOverflow","padStyle","toggleModalDismiss","update","modalDismissHandler","modalKeyHandler","toggleModalHandler","modalClickHandler","afterModalHide","focusElement","afterModalShow","beforeModalShow","ariaHidden","ariaModal","beforeModalHide","_b","isStatic","modalDialog","selectedText","targetInsideDialog","staticTransitionEnd","duration","$6332dc3ea9a0ae64$export$2b77a92f1a5ad772","Modal","overlayDelay","currentOpen","callback","offcanvasSelector","offcanvasToggleSelector","offcanvasDismissSelector","offcanvasTogglingClass","offcanvasDefaults","scroll","getOffcanvasInstance","showOffcanvasEvent","shownOffcanvasEvent","hideOffcanvasEvent","hiddenOffcanvasEvent","toggleOffcanvasEvents","offcanvasTriggerHandler","toggleOffCanvasDismiss","offcanvasKeyDismissHandler","offcanvasDismissHandler","beforeOffcanvasShow","setOffCanvasScrollbar","visibility","showOffcanvasComplete","offCanvasDismiss","selection","hideOffcanvasComplete","visibleTrigger","$6332dc3ea9a0ae64$export$591ca0244c9dfcd4","Offcanvas","blur","beforeOffcanvasHide","delay","popoverString","popoverComponent","tooltipString","getTipTemplate","tipType","isTooltip","bodyClass","header","tipClassPositions","styleTip","tooltip","container","tipPositions","isPopover","placement","fixedParent","parentCWidth","parentOWidth","htmlcw","htmlow","leftBoundry","rightBoundry","K","Ft","pt","ref9","elemRectLeft","elemRectTop","gt","topPosition","bottomPosition","leftPosition","rightPosition","arrowTop","arrowLeft","arrowRight","arrowWidth","arrowHeight","arrowAdjust","tipHeight","elemHeight","htmlch","tipWidth","elemWidth","horizontals","verticals","tipClasses","elemRectRight","updatedTooltipEvent","tooltipDefaults","template","title","customClass","sanitizeFn","animation","content","dismissible","btnClose","dataOriginalTitle","tooltipComponent","setHtml","dirty","trim","isFunction","tempDocument","DOMParser","parseFromString","childNodes","isNodeList","tooltipSelector","titleAttr","getTooltipInstance","hasTip","toggleTooltipAction","handleTouch","tooltipShownAction","shownTooltipEvent","tooltipHiddenAction","hiddenTooltipEvent","ariaDescribedBy","removeTooltip","toggleTooltipHandlers","enabled","split","tr","handleShow","handleHide","focusinEvent","focusoutEvent","isApple","handleFocus","toggleTooltipOpenHandlers","parentModal","parentOffcanvas","win","scrollTarget","toggleTooltipTitle","titleAtt","$6332dc3ea9a0ae64$export$28c660c63b792dea","Tooltip","_$n","tipString","tipComponent","elem","getUID","majorBlockTags","containers","getParentNode","isShadowRoot","isTableElement","push","getElementContainer","position","titleParts","contentParts","tooltipTemplate","placementClass","htmlMarkup","firstChild","cloneNode","tooltipHeader","tooltipBody","tempTitle","tempContent","tempBtn","createTip","outTimer","tipContainer","showTooltipEvent","hideTooltipEvent","disable","enable","disposeTooltipComplete","popoverSelector","popoverDefaults","$6332dc3ea9a0ae64$export$5b6b19405a83ff9d","Popover","Pt","scrollspyComponent","scrollspyDefaults","activateScrollSpy","scrollspyString","getScrollHeight","getOffsetHeight","isWindow","innerHeight","clear","item","activate","parents","parentItem","menuItem","parentLink","previousElementSibling","toggleSpyHandlers","refresh","$6332dc3ea9a0ae64$export$a6472a5298a374be","ScrollSpy","targetItem","rect","itemsLength","isWin","links","scrollHEIGHT","scrollTop","scrollY","items","offsets","maxScroll","link","charAt","offsetTop","updateSpyTargets","ref12","newActiveItem","$l5bVx","ref14","o2","i3","tabString","tabSelector","getTabInstance","showTabEvent","shownTabEvent","hideTabEvent","hiddenTabEvent","tabPrivate","triggerTabEnd","tabContent","nav","triggerTabShow","tab","nextContent","currentHeight","nextHeight","triggerTabHide","getActiveTab","activeTabs","getParentDropdown","toggleTabHandler","tabClickHandler","$6332dc3ea9a0ae64$export$3e41faf802a29e71","Tab","firstTab","firstTabContent","ariaSelected","activeDropdown","toggleTab","toastString","toastComponent","toastSelector","toastDismissSelector","toastToggleSelector","showingClass","hideClass","toastDefaults","autohide","getToastInstance","showToastEvent","shownToastEvent","hideToastEvent","hiddenToastEvent","showToastComplete","hideToastComplete","toggleToastHandlers","interactiveToastHandler","toastClickHandler","$6332dc3ea9a0ae64$export$8d8dc7d5f743331b","Toast","isShown","showToast","hideToast","ref18","componentsList","initCallback","context","lookUp","elemCollection","cs","init","selector","collection","initComponentDataAPI","console","log","$c59e86ffc8d9be02$var$timeDelay","random","$c59e86ffc8d9be02$var$counter","$c59e86ffc8d9be02$var$alertMessage","time","$c59e86ffc8d9be02$var$connection","setInterval","clearInterval","Date","now"],"version":3,"file":"05-setInterval.eb8e14d1.js.map"}
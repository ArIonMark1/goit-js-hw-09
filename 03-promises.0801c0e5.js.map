{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAgCA,SAASC,EAAcC,EAAUC,GAK/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAE3BC,YAAW,KACaC,KAAKC,SAAW,IAGpCH,EAAO,C,SAACJ,E,MAAUC,IAEpBE,EAAQ,C,SAACH,E,MAAUC,GAAO,GACzBA,EAAM,G,EA5CQ,CACnBO,KAAMC,SAASC,cAAc,WAGlBF,KAAKG,iBAAiB,UAGnC,SAAqBC,GAEmBA,EAAlCC,iBAwCsB,SAANC,GAE2C,MAAxDC,EAAOC,EAAMC,GAAUH,EAC9BI,QAAQC,IAAI,MAAOJ,EAAMK,MAAOJ,EAAKI,MAAOH,EAAOG,OAEnD,IAAK,IAAIC,EAAQ,EAAGA,EAAQC,OAAOL,EAAOG,OAAQC,IAAS,CAKzDtB,EAHiBsB,EAAQ,EACJC,OAAOP,EAAMK,OAASC,EAAQC,OAAON,EAAKI,QAG5DG,MAAK,EAACvB,SAAEA,EAAQC,MAAEA,MAEjBuB,EAAA3B,GAAS4B,OAAOC,QAAQ,YAAY1B,OAAcC,KAClDiB,QAAQC,IAAI,YAAYnB,OAAcC,IAAQ,IAE/C0B,OAAM,EAAC3B,SAAEA,EAAQC,MAAEA,MAElBuB,EAAA3B,GAAS4B,OAAOG,QAAQ,WAAW5B,OAAcC,KACjDiB,QAAQW,MAAM,WAAW7B,OAAcC,IAAQ,G,EAxDtB6B,CAAlBlB,EAAImB,eAEjB,MAAM9B,MAAEA,EAAKe,KAAEA,EAAIC,OAAEA,GAAWL,EAAImB,cAGd,IAAIC,MAAMV,OAAOL,EAAOG,QAC3Ca,OACAC,KAAI,CAACC,EAAKd,IAKFtB,EAHUsB,EAAQ,EACJC,OAAOrB,EAAMmB,OAASC,EAAQC,OAAON,EAAKI,S","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst comandInputs = {\n  form: document.querySelector('.form'),\n}\n// ######################################################\ncomandInputs.form.addEventListener('submit', getFormData);\n// ######################################################\n\nfunction getFormData(evt) { \n  // 1 після підтвердження форми отримуємо її дані\n  evt.preventDefault();\n  // ******************\n  // Активація першого варіанту запуску\n  callPromises(evt.currentTarget);\n  // ******************\n  const { delay, step, amount } = evt.currentTarget\n  \n  // створюємо масив промісів котрим передаємо їх індекс та тривалість виклику\n  const promisesArray = new Array(Number(amount.value))\n    .fill()\n    .map((val, index) => {\n\n      const position = index + 1;\n      const promiseDelay = Number(delay.value) + index * Number(step.value);\n\n      return createPromise(position, promiseDelay);\n    });\n  \n  // callPromisesFromArr(promisesArray);\n};\n// *************************************************\nfunction createPromise(position, delay) { \n /*\n  2 пишемо функцію яка отримуватиме параметр 'delay' \n  та поверне проміс через вказаний проміжок часу\n */\n  return new Promise((resolve, reject) => { \n\n    setTimeout(() => { \n      const shouldResolve = Math.random() > 0.3;\n\n      if (!shouldResolve) { \n        reject({position, delay});\n      }\n      resolve({position, delay});\n    }, delay)\n  })\n};\n// *************************************************\n// Перший варіант запуску Промісів\nfunction callPromises(formElement) {\n  // 3 викликаємо функцію яка створює проміси в тій кількості, яку ми задали в полі 'amount'\n  const [delay, step, amount] = formElement;\n  console.log('=> ', delay.value, step.value, amount.value);\n\n  for (let index = 0; index < Number(amount.value); index++) { \n\n    const position = index + 1;\n    const promiseDelay = Number(delay.value) + index * Number(step.value);\n\n    createPromise(position, promiseDelay)\n      .then(({ position, delay }) => {\n\n        Notiflix.Notify.success(`Success: ${position} : ${delay}`);\n        console.log(`Success: ${position} : ${delay}`);\n      })\n      .catch(({ position, delay }) => {\n\n        Notiflix.Notify.failure(`Error!: ${position} : ${delay}`);\n        console.error(`Error!: ${position} : ${delay}`)\n      });\n  };\n\n}\n// Другий варіант запуску Промісів\nfunction callPromisesFromArr(promiseArr) { \n  promiseArr.forEach(promise => {\n    promise\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`Success: ${position} : ${delay}`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`Error!: ${position} : ${delay}`);\n      });\n    \n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","form","document","querySelector","addEventListener","evt","preventDefault","formElement","delay1","step","amount","console","log","value","index","Number","then","$parcel$interopDefault","Notify","success","catch","failure","error","$47d4ff9957288465$var$callPromises","currentTarget","Array","fill","map","val"],"version":3,"file":"03-promises.0801c0e5.js.map"}